// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 bx, selector ds)
fn0C00_0000_entry:
	word16 ax_11 = 0x0000
	goto l0C00_0019
	// succ:  l0C00_0019
l0C00_0000:
l0C00_0005:
	word16 si_17 = Mem0[ds:0x0300:word16]
	branch si_17 == 0x0000 l0C00_0012
	// succ:  l0C00_000D l0C00_0012
l0C00_000D:
	ax_11 = ax_11 + Mem0[ds:si_17:word16]
	goto l0C00_0019
	// succ:  l0C00_0019
l0C00_0012:
	ax_11 = ax_11 + Mem0[ds:Mem0[ds:0x0302:word16] + 0x0004:word16]
	// succ:  l0C00_0019
l0C00_0019:
	branch ax_11 < bx l0C00_0005
	// succ:  l0C00_001D l0C00_0005
l0C00_001D:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

void fn0C00_0000(word16 bx, selector ds)
{
	word16 ax_11 = 0x0000;
	while (ax_11 < bx)
	{
		word16 si_17 = Mem0[ds:0x0300:word16];
		if (si_17 != 0x0000)
			ax_11 = ax_11 + Mem0[ds:si_17:word16];
		else
			ax_11 = ax_11 + Mem0[ds:Mem0[ds:0x0302:word16] + 0x0004:word16];
	}
	return;
}
===========================
