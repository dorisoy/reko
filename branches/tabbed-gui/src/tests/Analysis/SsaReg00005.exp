fp:fp
    def:  def fp
    uses: sp_1 = fp
sp_1: orig: sp
    def:  sp_1 = fp
ds:ds
    def:  def ds
    uses: bx_3 = fn0C00_000C(ds)
          Mem4[ds:0x0300:word16] = bx_3
          Mem5[ds:0x0302:byte] = 0x00
bx_3: orig: bx
    def:  bx_3 = fn0C00_000C(ds)
    uses: Mem4[ds:0x0300:word16] = bx_3
Mem4: orig: Mem0
    def:  Mem4[ds:0x0300:word16] = bx_3
Mem5: orig: Mem0
    def:  Mem5[ds:0x0302:byte] = 0x00
// fn0C00_0000
// Return size: 0
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def fp
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	sp_1 = fp
	bx_3 = fn0C00_000C(ds)
	Mem4[ds:0x0300:word16] = bx_3
	Mem5[ds:0x0302:byte] = 0x00
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
    def:  def fp
    uses: sp_1 = fp
sp_1: orig: sp
    def:  sp_1 = fp
ds:ds
    def:  def ds
    uses: cx_3 = ds
          ah_39 = Mem0[ds:di_22 + 0x0001:byte]
cx_3: orig: cx
    def:  cx_3 = ds
    uses: es_4 = cx_3
es_4: orig: es
    def:  es_4 = cx_3
    uses: SCZO_62 = cond(0x00 - Mem0[es_4:di_15:byte])
di_5: orig: di
    def:  di_5 = 0x7E0F
    uses: di_15 = PHI(di_5, di_66)
cx_6: orig: cx
    def:  cx_6 = 0x000C
    uses: cl_7 = (byte) cx_6 (alias)
          cx_16 = PHI(cx_6, cx_67)
cl_7: orig: cl
    def:  cl_7 = (byte) cx_6 (alias)
    uses: cl_17 = PHI(cl_7, cl_68)
al_8: orig: al
    def:  al_8 = 0x00
    uses: ax_10 = DPB(ax, al_8, 0, 8) (alias)
ax:ax
    def:  def ax
    uses: ax_10 = DPB(ax, al_8, 0, 8) (alias)
ax_10: orig: ax
    def:  ax_10 = DPB(ax, al_8, 0, 8) (alias)
    uses: ax_40 = DPB(ax_10, ah_39, 8, 8) (alias)
          ax_30 = PHI(ax_40, ax_10)
SZO_11: orig: SZO
    def:  SZO_11 = cond(0x00)
    uses: Z_12 = SZO_11 (alias)
          SZO_20 = PHI(SZO_11, SZO_64)
Z_12: orig: Z
    def:  Z_12 = SZO_11 (alias)
    uses: Z_21 = PHI(Z_12, Z_65)
C_13: orig: C
    def:  C_13 = false
    uses: SCZO_14 = C_13 (alias)
          C_19 = PHI(C_13, C_63)
SCZO_14: orig: SCZO
    def:  SCZO_14 = C_13 (alias)
    uses: SCZO_18 = PHI(SCZO_14, SCZO_62)
di_15: orig: di
    def:  di_15 = PHI(di_5, di_66)
    uses: di_22 = PHI(di_15, di_66)
          SCZO_62 = cond(0x00 - Mem0[es_4:di_15:byte])
          di_66 = di_15 + 0x0001
cx_16: orig: cx
    def:  cx_16 = PHI(cx_6, cx_67)
    uses: branch cx_16 == 0x0000 l0C00_001B
          cx_23 = PHI(cx_16, cx_67)
          cx_67 = cx_16 - 0x0001
cl_17: orig: cl
    def:  cl_17 = PHI(cl_7, cl_68)
    uses: cl_24 = PHI(cl_17, cl_68)
SCZO_18: orig: SCZO
    def:  SCZO_18 = PHI(SCZO_14, SCZO_62)
    uses: SCZO_25 = PHI(SCZO_18, SCZO_62)
C_19: orig: C
    def:  C_19 = PHI(C_13, C_63)
    uses: C_26 = PHI(C_19, C_63)
SZO_20: orig: SZO
    def:  SZO_20 = PHI(SZO_11, SZO_64)
    uses: SZO_27 = PHI(SZO_20, SZO_64)
Z_21: orig: Z
    def:  Z_21 = PHI(Z_12, Z_65)
    uses: Z_28 = PHI(Z_21, Z_65)
di_22: orig: di
    def:  di_22 = PHI(di_15, di_66)
    uses: ah_39 = Mem0[ds:di_22 + 0x0001:byte]
          bx_46 = di_22
cx_23: orig: cx
    def:  cx_23 = PHI(cx_16, cx_67)
    uses: cx_56 = DPB(cx_23, cl_55, 0, 8) (alias)
cl_24: orig: cl
    def:  cl_24 = PHI(cl_17, cl_68)
SCZO_25: orig: SCZO
    def:  SCZO_25 = PHI(SCZO_18, SCZO_62)
C_26: orig: C
    def:  C_26 = PHI(C_19, C_63)
SZO_27: orig: SZO
    def:  SZO_27 = PHI(SZO_20, SZO_64)
Z_28: orig: Z
    def:  Z_28 = PHI(Z_21, Z_65)
    uses: branch Test(EQ,Z_28) l0C00_002D
ah_29: orig: ah
    def:  ah_29 = PHI(ah_39, ah)
ax_30: orig: ax
    def:  ax_30 = PHI(ax_40, ax_10)
cx_31: orig: cx
    def:  cx_31 = PHI(cx_43, cx_56)
cl_32: orig: cl
    def:  cl_32 = PHI(cl_44, cl_55)
bx_33: orig: bx
    def:  bx_33 = PHI(bx_47, bx_52)
SCZO_34: orig: SCZO
    def:  SCZO_34 = PHI(SCZO_48, SCZO_60)
C_35: orig: C
    def:  C_35 = PHI(C_49, C_59)
SZO_36: orig: SZO
    def:  SZO_36 = PHI(SZO_50, SZO_57)
Z_37: orig: Z
    def:  Z_37 = PHI(Z_51, Z_58)
Mem0:Global memory
    def:  def Mem0
    uses: ah_39 = Mem0[ds:di_22 + 0x0001:byte]
          SCZO_62 = cond(0x00 - Mem0[es_4:di_15:byte])
ah_39: orig: ah
    def:  ah_39 = Mem0[ds:di_22 + 0x0001:byte]
    uses: ax_40 = DPB(ax_10, ah_39, 8, 8) (alias)
          ah_29 = PHI(ah_39, ah)
ax_40: orig: ax
    def:  ax_40 = DPB(ax_10, ah_39, 8, 8) (alias)
    uses: Z_41 = ax_40 == 0x0000
          cx_42 = __bsr(ax_40)
          ax_30 = PHI(ax_40, ax_10)
Z_41: orig: Z
    def:  Z_41 = ax_40 == 0x0000
cx_42: orig: cx
    def:  cx_42 = __bsr(ax_40)
    uses: cx_43 = cx_42 - 0x0008
cx_43: orig: cx
    def:  cx_43 = cx_42 - 0x0008
    uses: cl_44 = (byte) cx_43 (alias)
          SCZO_45 = cond(cx_43)
          cx_31 = PHI(cx_43, cx_56)
cl_44: orig: cl
    def:  cl_44 = (byte) cx_43 (alias)
    uses: cl_32 = PHI(cl_44, cl_55)
SCZO_45: orig: SCZO
    def:  SCZO_45 = cond(cx_43)
bx_46: orig: bx
    def:  bx_46 = di_22
    uses: bx_47 = bx_46 - 0x7E03
bx_47: orig: bx
    def:  bx_47 = bx_46 - 0x7E03
    uses: SCZO_48 = cond(bx_47)
          return bx_47
          bx_33 = PHI(bx_47, bx_52)
SCZO_48: orig: SCZO
    def:  SCZO_48 = cond(bx_47)
    uses: C_49 = SCZO_48 (alias)
          SZO_50 = SCZO_48 (alias)
          Z_51 = SCZO_48 (alias)
          SCZO_34 = PHI(SCZO_48, SCZO_60)
C_49: orig: C
    def:  C_49 = SCZO_48 (alias)
    uses: C_35 = PHI(C_49, C_59)
SZO_50: orig: SZO
    def:  SZO_50 = SCZO_48 (alias)
    uses: SZO_36 = PHI(SZO_50, SZO_57)
Z_51: orig: Z
    def:  Z_51 = SCZO_48 (alias)
    uses: Z_37 = PHI(Z_51, Z_58)
bx_52: orig: bx
    def:  bx_52 = 0x0000
    uses: return bx_52
          bx_33 = PHI(bx_47, bx_52)
SZO_53: orig: SZO
    def:  SZO_53 = cond(0x0000)
C_54: orig: C
    def:  C_54 = false
cl_55: orig: cl
    def:  cl_55 = 0x00
    uses: cx_56 = DPB(cx_23, cl_55, 0, 8) (alias)
          cl_32 = PHI(cl_44, cl_55)
cx_56: orig: cx
    def:  cx_56 = DPB(cx_23, cl_55, 0, 8) (alias)
    uses: cx_31 = PHI(cx_43, cx_56)
SZO_57: orig: SZO
    def:  SZO_57 = cond(0x00)
    uses: Z_58 = SZO_57 (alias)
          SZO_36 = PHI(SZO_50, SZO_57)
Z_58: orig: Z
    def:  Z_58 = SZO_57 (alias)
    uses: Z_37 = PHI(Z_51, Z_58)
C_59: orig: C
    def:  C_59 = false
    uses: SCZO_60 = C_59 (alias)
          C_35 = PHI(C_49, C_59)
SCZO_60: orig: SCZO
    def:  SCZO_60 = C_59 (alias)
    uses: SCZO_34 = PHI(SCZO_48, SCZO_60)
ah:ah
    def:  def ah
    uses: ah_29 = PHI(ah_39, ah)
SCZO_62: orig: SCZO
    def:  SCZO_62 = cond(0x00 - Mem0[es_4:di_15:byte])
    uses: C_63 = SCZO_62 (alias)
          SZO_64 = SCZO_62 (alias)
          Z_65 = SCZO_62 (alias)
          SCZO_25 = PHI(SCZO_18, SCZO_62)
          SCZO_18 = PHI(SCZO_14, SCZO_62)
C_63: orig: C
    def:  C_63 = SCZO_62 (alias)
    uses: C_26 = PHI(C_19, C_63)
          C_19 = PHI(C_13, C_63)
SZO_64: orig: SZO
    def:  SZO_64 = SCZO_62 (alias)
    uses: SZO_27 = PHI(SZO_20, SZO_64)
          SZO_20 = PHI(SZO_11, SZO_64)
Z_65: orig: Z
    def:  Z_65 = SCZO_62 (alias)
    uses: branch Test(NE,Z_65) l0C00_0019
          Z_28 = PHI(Z_21, Z_65)
          Z_21 = PHI(Z_12, Z_65)
di_66: orig: di
    def:  di_66 = di_15 + 0x0001
    uses: di_22 = PHI(di_15, di_66)
          di_15 = PHI(di_5, di_66)
cx_67: orig: cx
    def:  cx_67 = cx_16 - 0x0001
    uses: cl_68 = (byte) cx_67 (alias)
          cx_23 = PHI(cx_16, cx_67)
          cx_16 = PHI(cx_6, cx_67)
cl_68: orig: cl
    def:  cl_68 = (byte) cx_67 (alias)
    uses: cl_24 = PHI(cl_17, cl_68)
          cl_17 = PHI(cl_7, cl_68)
// fn0C00_000C
// Return size: 0
word16 fn0C00_000C(selector ds)
fn0C00_000C_entry:
	def fp
	def ds
	def ax
	def Mem0
	def ah
	// succ:  l0C00_000C
l0C00_000C:
	sp_1 = fp
	cx_3 = ds
	es_4 = cx_3
	di_5 = 0x7E0F
	cx_6 = 0x000C
	cl_7 = (byte) cx_6 (alias)
	al_8 = 0x00
	ax_10 = DPB(ax, al_8, 0, 8) (alias)
	SZO_11 = cond(0x00)
	Z_12 = SZO_11 (alias)
	C_13 = false
	SCZO_14 = C_13 (alias)
	// succ:  l0C00_0019
l0C00_0019:
	di_15 = PHI(di_5, di_66)
	cx_16 = PHI(cx_6, cx_67)
	cl_17 = PHI(cl_7, cl_68)
	SCZO_18 = PHI(SCZO_14, SCZO_62)
	C_19 = PHI(C_13, C_63)
	SZO_20 = PHI(SZO_11, SZO_64)
	Z_21 = PHI(Z_12, Z_65)
	branch cx_16 == 0x0000 l0C00_001B
	// succ:  l0C00_0019_1 l0C00_001B
l0C00_0019_1:
	SCZO_62 = cond(0x00 - Mem0[es_4:di_15:byte])
	C_63 = SCZO_62 (alias)
	SZO_64 = SCZO_62 (alias)
	Z_65 = SCZO_62 (alias)
	di_66 = di_15 + 0x0001
	cx_67 = cx_16 - 0x0001
	cl_68 = (byte) cx_67 (alias)
	branch Test(NE,Z_65) l0C00_0019
	// succ:  l0C00_001B l0C00_0019
l0C00_001B:
	di_22 = PHI(di_15, di_66)
	cx_23 = PHI(cx_16, cx_67)
	cl_24 = PHI(cl_17, cl_68)
	SCZO_25 = PHI(SCZO_18, SCZO_62)
	C_26 = PHI(C_19, C_63)
	SZO_27 = PHI(SZO_20, SZO_64)
	Z_28 = PHI(Z_21, Z_65)
	branch Test(EQ,Z_28) l0C00_002D
	// succ:  l0C00_001D l0C00_002D
l0C00_001D:
	ah_39 = Mem0[ds:di_22 + 0x0001:byte]
	ax_40 = DPB(ax_10, ah_39, 8, 8) (alias)
	Z_41 = ax_40 == 0x0000
	cx_42 = __bsr(ax_40)
	cx_43 = cx_42 - 0x0008
	cl_44 = (byte) cx_43 (alias)
	SCZO_45 = cond(cx_43)
	bx_46 = di_22
	bx_47 = bx_46 - 0x7E03
	SCZO_48 = cond(bx_47)
	C_49 = SCZO_48 (alias)
	SZO_50 = SCZO_48 (alias)
	Z_51 = SCZO_48 (alias)
	return bx_47
	// succ:  fn0C00_000C_exit
l0C00_002D:
	bx_52 = 0x0000
	SZO_53 = cond(0x0000)
	C_54 = false
	cl_55 = 0x00
	cx_56 = DPB(cx_23, cl_55, 0, 8) (alias)
	SZO_57 = cond(0x00)
	Z_58 = SZO_57 (alias)
	C_59 = false
	SCZO_60 = C_59 (alias)
	return bx_52
	// succ:  fn0C00_000C_exit
fn0C00_000C_exit:
	ah_29 = PHI(ah_39, ah)
	ax_30 = PHI(ax_40, ax_10)
	cx_31 = PHI(cx_43, cx_56)
	cl_32 = PHI(cl_44, cl_55)
	bx_33 = PHI(bx_47, bx_52)
	SCZO_34 = PHI(SCZO_48, SCZO_60)
	C_35 = PHI(C_49, C_59)
	SZO_36 = PHI(SZO_50, SZO_57)
	Z_37 = PHI(Z_51, Z_58)

