fp:fp
sp_1: orig: sp
al:al
    def:  def al
    uses: C_4 = fn0C00_000A(al, out al_3)
al_3: orig: al
    def:  C_4 = fn0C00_000A(al, out al_3)
    uses: Mem5[ds:0x0300:byte] = al_3
C_4: orig: C
    def:  C_4 = fn0C00_000A(al, out al_3)
    uses: branch C_4 l0C00_0009
Mem5: orig: Mem0
    def:  Mem5[ds:0x0300:byte] = al_3
ds:ds
    def:  def ds
    uses: Mem5[ds:0x0300:byte] = al_3
// fn0C00_0000
// Return size: 0
void fn0C00_0000(byte al, selector ds)
fn0C00_0000_entry:
	def al
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	C_4 = fn0C00_000A(al, out al_3)
	branch C_4 l0C00_0009
	// succ:  l0C00_0005 l0C00_0009
l0C00_0005:
	Mem5[ds:0x0300:byte] = al_3
	// succ:  l0C00_0009
l0C00_0009:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
sp_1: orig: sp
al:al
    def:  def al
    uses: al_5 = PHI(al, al_19)
          al_16 = al - 0x30
          al_23 = al - 0x37
          al_23 = al - 0x37
          al_26 = al - 0x57
          al_26 = al - 0x57
          branch al <u 0x30 l0C00_0032
          branch al <=u 0x39 l0C00_0022
          branch al <u 0x3A l0C00_0030
          branch al <u 0x47 l0C00_0030
          branch al <u 0x41 l0C00_0032
          branch al <=u 0x46 l0C00_0022
          branch al <u 0x61 l0C00_0032
          branch al >u 0x66 l0C00_0032
SCZO_3: orig: SCZO
C_4: orig: C
al_5: orig: al
    def:  al_5 = PHI(al, al_19)
    uses: use al_5 (=> alOut)
C_6: orig: C
SCZO_7: orig: SCZO
CZ_8: orig: CZ
alOut:Out:al
C_10: orig: C
SCZO_11: orig: SCZO
CZ_12: orig: CZ
SCZO_13: orig: SCZO
CZ_14: orig: CZ
CZ_15: orig: CZ
al_16: orig: al
    def:  al_16 = al - 0x30
    uses: al_19 = PHI(al_16, al_23, al_26)
SCZO_17: orig: SCZO
C_18: orig: C
al_19: orig: al
    def:  al_19 = PHI(al_16, al_23, al_26)
    uses: al_5 = PHI(al, al_19)
C_20: orig: C
SCZO_21: orig: SCZO
CZ_22: orig: CZ
al_23: orig: al
    def:  al_23 = al - 0x37
    uses: al_19 = PHI(al_16, al_23, al_26)
SCZO_24: orig: SCZO
C_25: orig: C
al_26: orig: al
    def:  al_26 = al - 0x57
    uses: al_19 = PHI(al_16, al_23, al_26)
SCZO_27: orig: SCZO
SCZO_28: orig: SCZO
C_29: orig: C
SCZO_30: orig: SCZO
CZ_31: orig: CZ
SCZO_32: orig: SCZO
C_33: orig: C
SCZO_34: orig: SCZO
CZ_35: orig: CZ
// fn0C00_000A
// Return size: 0
byte fn0C00_000A(byte al, ptr16 alOut)
fn0C00_000A_entry:
	def al
	// succ:  l0C00_000A
l0C00_000A:
	branch al <u 0x30 l0C00_0032
	// succ:  l0C00_000E l0C00_0032
l0C00_000E:
	branch al <=u 0x39 l0C00_0022
	// succ:  l0C00_0012 l0C00_0022
l0C00_0012:
	branch al <u 0x41 l0C00_0032
	// succ:  l0C00_0016 l0C00_0032
l0C00_0016:
	branch al <=u 0x46 l0C00_0022
	// succ:  l0C00_001A l0C00_0022
l0C00_001A:
	branch al <u 0x61 l0C00_0032
	// succ:  l0C00_001E l0C00_0032
l0C00_001E:
	branch al >u 0x66 l0C00_0032
	// succ:  l0C00_0022 l0C00_0032
l0C00_0022:
	al_16 = al - 0x30
	branch al <u 0x3A l0C00_0030
	// succ:  l0C00_0028 l0C00_0030
l0C00_0028:
	al_23 = al - 0x37
	branch al <u 0x47 l0C00_0030
	// succ:  l0C00_002E l0C00_0030
l0C00_002E:
	al_26 = al - 0x57
	// succ:  l0C00_0030
l0C00_0030:
	al_19 = PHI(al_16, al_23, al_26)
	return false
	// succ:  fn0C00_000A_exit
l0C00_0032:
	return true
	// succ:  fn0C00_000A_exit
fn0C00_000A_exit:
	al_5 = PHI(al, al_19)
	use al_5 (=> alOut)

