fp:fp
sp_1: orig: sp
ax_2: orig: ax
    def:  ax_2 = 0x0000
    uses: ax_10 = PHI(ax_2, ax_13)
SZO_3: orig: SZO
C_4: orig: C
SCZO_5: orig: SCZO
ds:ds
    def:  def ds
    uses: cx_9 = Mem0[ds:bx:word16]
          Mem18[ds:0x0300:word16] = ax_13
bx:bx
    def:  def bx
    uses: cx_9 = Mem0[ds:bx:word16]
Mem0:Global memory
    def:  def Mem0
    uses: cx_9 = Mem0[ds:bx:word16]
cx_9: orig: cx
    def:  cx_9 = Mem0[ds:bx:word16]
    uses: cx_11 = PHI(cx_9, cx_17)
ax_10: orig: ax
    def:  ax_10 = PHI(ax_2, ax_13)
    uses: ax_13 = ax_10 + cx_11 + cx_11
cx_11: orig: cx
    def:  cx_11 = PHI(cx_9, cx_17)
    uses: ax_13 = ax_10 + cx_11 + cx_11
          ax_13 = ax_10 + cx_11 + cx_11
          cx_17 = cx_11 - 0x0001
ax_12: orig: ax
ax_13: orig: ax
    def:  ax_13 = ax_10 + cx_11 + cx_11
    uses: ax_10 = PHI(ax_2, ax_13)
          Mem18[ds:0x0300:word16] = ax_13
SCZO_14: orig: SCZO
C_15: orig: C
SZO_16: orig: SZO
cx_17: orig: cx
    def:  cx_17 = cx_11 - 0x0001
    uses: branch cx_17 != 0x0000 l0C00_0004
          cx_11 = PHI(cx_9, cx_17)
Mem18: orig: Mem0
    def:  Mem18[ds:0x0300:word16] = ax_13
// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 bx, selector ds)
fn0C00_0000_entry:
	def ds
	def bx
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	ax_2 = 0x0000
	cx_9 = Mem0[ds:bx:word16]
	// succ:  l0C00_0004
l0C00_0004:
	ax_10 = PHI(ax_2, ax_13)
	cx_11 = PHI(cx_9, cx_17)
	ax_13 = ax_10 + cx_11 + cx_11
	cx_17 = cx_11 - 0x0001
	branch cx_17 != 0x0000 l0C00_0004
	// succ:  l0C00_000A l0C00_0004
l0C00_000A:
	Mem18[ds:0x0300:word16] = ax_13
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

