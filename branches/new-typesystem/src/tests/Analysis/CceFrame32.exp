Mem0: Mem0:Global memory, def: {def Mem0}, uses: {eax_5 = Mem0[0x10003420:word32]}
fp: fp:Temporary
eax: eax:Register eax
dwLoc08: dwLoc08:Local -0008
ax: ax:Register ax
eax_5: orig: eax, def: {eax_5 = Mem0[0x10003420:word32]}, uses: {dwLoc08_6 = eax_5}
dwLoc08_6: orig: dwLoc08, def: {dwLoc08_6 = eax_5}, uses: {ax_7 = fn10000017(dwLoc08_6)}
ax_7: orig: ax, def: {ax_7 = fn10000017(dwLoc08_6)}, uses: {store(Mem9[0x10003428:word16]) = ax_7}
eax_8: orig: eax
Mem9: orig: Mem0, def: {store(Mem9[0x10003428:word16]) = ax_7}
// fn10000000
void fn10000000()
fn10000000_entry:		// block 0, pred:
	def Mem0
	// succ:  1
l10000000:		// block 1, pred: 0
	eax_5 = Mem0[0x10003420:word32]
	dwLoc08_6 = eax_5
	ax_7 = fn10000017(dwLoc08_6)
	store(Mem9[0x10003428:word16]) = ax_7
	return
	// succ:  2
fn10000000_exit:		// block 2, pred: 1
	// succ: 

Mem0: Mem0:Global memory, def: {def Mem0}, uses: {edx_27 = (int32) Mem0[ecx_25 + eax_23:byte]}
fp: fp:Temporary
ebp: ebp:Register ebp
dwLoc08: dwLoc08:Local -0008
ecx: ecx:Register ecx
dwLoc0C: dwLoc0C:Local -000C
wLoc0C: wLoc0C:Local -000C
dwArg00: dwArg00:Stack +0000, def: {def dwArg00}, uses: {ecx_25 = dwArg00}{branch dwArg00 != 0x00000000}
SCZO: SCZO:Flags
Z: Z:Flags
ax: ax:Register ax
eax: eax:Register eax
edx: edx:Register edx
C: C:Flags
SO: SO:Flags
cx: cx:Register cx
dwLoc08_16: orig: dwLoc08
dwLoc0C_17: orig: dwLoc0C
wLoc0C_18: orig: wLoc0C, def: {wLoc0C_18 = 0x0000}, uses: {wLoc0C_22 = PHI(wLoc0C_18, wLoc0C_39)}
SCZO_19: orig: SCZO
Z_20: orig: Z
SO_21: orig: SO
wLoc0C_22: orig: wLoc0C, def: {wLoc0C_22 = PHI(wLoc0C_18, wLoc0C_39)}, uses: {eax_23 = (int32) wLoc0C_22}{eax_31 = (int32) wLoc0C_22}{cx_35 = wLoc0C_22}{ax_43 = wLoc0C_22}
eax_23: orig: eax, def: {eax_23 = (int32) wLoc0C_22}, uses: {edx_27 = (int32) Mem0[ecx_25 + eax_23:byte]}
ax_24: orig: ax
ecx_25: orig: ecx, def: {ecx_25 = dwArg00}, uses: {edx_27 = (int32) Mem0[ecx_25 + eax_23:byte]}
cx_26: orig: cx
edx_27: orig: edx, def: {edx_27 = (int32) Mem0[ecx_25 + eax_23:byte]}, uses: {branch edx_27 == 0x00000000}
SCZO_28: orig: SCZO
Z_29: orig: Z
C_30: orig: C
eax_31: orig: eax, def: {eax_31 = (int32) wLoc0C_22}, uses: {branch eax_31 >= 0x00007FFF}
ax_32: orig: ax
SCZO_33: orig: SCZO
SO_34: orig: SO
cx_35: orig: cx, def: {cx_35 = wLoc0C_22}, uses: {cx_36 = cx_35 + 0x0001}
cx_36: orig: cx, def: {cx_36 = cx_35 + 0x0001}, uses: {wLoc0C_39 = cx_36}
ecx_37: orig: ecx
SCZO_38: orig: SCZO
wLoc0C_39: orig: wLoc0C, def: {wLoc0C_39 = cx_36}, uses: {wLoc0C_22 = PHI(wLoc0C_18, wLoc0C_39)}
SO_40: orig: SO
eax_41: orig: eax
SCZO_42: orig: SCZO
ax_43: orig: ax, def: {ax_43 = wLoc0C_22}, uses: {ax_53 = PHI(ax_45, ax_43)}
eax_44: orig: eax
ax_45: orig: ax, def: {ax_45 = 0x0000}, uses: {ax_53 = PHI(ax_45, ax_43)}
eax_46: orig: eax
SCZO_47: orig: SCZO
cx_48: orig: cx
SO_49: orig: SO
C_50: orig: C
edx_51: orig: edx
eax_52: orig: eax
ax_53: orig: ax, def: {ax_53 = PHI(ax_45, ax_43)}, uses: {return ax_53}
Z_54: orig: Z
SCZO_55: orig: SCZO
wLoc0C_56: orig: wLoc0C
ecx_57: orig: ecx
ebp_58: orig: ebp
// fn10000017
word16 fn10000017(word32 dwArg00)
fn10000017_entry:		// block 0, pred:
	def Mem0
	def dwArg00
	// succ:  1
l10000017:		// block 1, pred: 0
	wLoc0C_18 = 0x0000
	branch dwArg00 != 0x00000000
	// succ:  6 2
l1000002F:		// block 2, pred: 1 5
	wLoc0C_22 = PHI(wLoc0C_18, wLoc0C_39)
	eax_23 = (int32) wLoc0C_22
	ecx_25 = dwArg00
	edx_27 = (int32) Mem0[ecx_25 + eax_23:byte]
	branch edx_27 == 0x00000000
	// succ:  3 4
l1000003E:		// block 3, pred: 2
	eax_31 = (int32) wLoc0C_22
	branch eax_31 >= 0x00007FFF
	// succ:  5 4
l1000005A:		// block 4, pred: 3 2
	ax_43 = wLoc0C_22
	// succ:  7
l10000049:		// block 5, pred: 3
	cx_35 = wLoc0C_22
	cx_36 = cx_35 + 0x0001
	wLoc0C_39 = cx_36
	// succ:  2
l10000027:		// block 6, pred: 1
	ax_45 = 0x0000
	// succ:  7
l1000005E:		// block 7, pred: 6 4
	ax_53 = PHI(ax_45, ax_43)
	return ax_53
	// succ:  8
fn10000017_exit:		// block 8, pred: 7
	// succ: 

