// void fn0C00_0000(Register segment ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: 0
// MayUse:  ds
// LiveOut:
// Trashed: SCZO ax cx dx al cl dl ah ch dh
// Preserved:
// fn0C00_0000
void fn0C00_0000(segment ds)
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	store(Mem7[ds:0x0064:word16]) = fn0C00_000B(0x0005)
	return
	// succ:  2
fn0C00_0000_exit:		// block 2, pred: 1
	// succ: 

// Register word16 fn0C00_000B(Register word16 cx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: 0
// MayUse:  cx
// LiveOut: ax
// Trashed: SCZO ax cx dx al cl dl ah ch dh
// Preserved: si
// fn0C00_000B
word16 fn0C00_000B(word16 cx)
fn0C00_000B_entry:		// block 0, pred:
	// succ:  1
l0C00_000B:		// block 1, pred: 0
	word16 ax_13
	branch cx <= 0x0001
	// succ:  3 2
l0C00_001C:		// block 2, pred: 1
	ax_13 = 0x0001
	// succ:  4
l0C00_0011:		// block 3, pred: 1
	ax_13 = (word16) (cx *s fn0C00_000B(cx - 0x0001)) (alias)
	// succ:  4
l0C00_001F:		// block 4, pred: 3 2
	return ax_13
	// succ:  5
fn0C00_000B_exit:		// block 5, pred: 4
	// succ: 

