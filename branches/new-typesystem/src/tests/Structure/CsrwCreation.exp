// MockSwitch
void MockSwitch()
MockSwitch_entry:		// block 0, pred:
	// succ:  1
l1:		// block 1, pred: 0
	branch r1 >u 0x00000004
	// succ:  3 2
default:		// block 2, pred: 1
	r2 = r1 * r1
	// succ:  8
l2:		// block 3, pred: 1
	switch (r1) { 7 6 5 4 }
	// succ:  7 6 5 4 7
case3:		// block 4, pred: 3
	r2 = 0x00000009
	// succ:  8
case2:		// block 5, pred: 3
	r2 = 0x00000004
	// succ:  8
case1:		// block 6, pred: 3
	r2 = 0x00000001
	// succ:  8
case0:		// block 7, pred: 3 3
	r2 = 0x00000000
	// succ:  8
done:		// block 8, pred: 7 6 5 4 2
	return r2
	// succ:  9
MockSwitch_exit:		// block 9, pred: 8
	// succ: 
0 (MockSwitch_entry): idom -1, Frontier:
1 (l1): idom 0, Frontier:
2 (default): idom 1, Frontier: 8
3 (l2): idom 1, Frontier: 8
4 (case3): idom 3, Frontier: 8
5 (case2): idom 3, Frontier: 8
6 (case1): idom 3, Frontier: 8
7 (case0): idom 3, Frontier: 8
8 (done): idom 1, Frontier:
9 (MockSwitch_exit): idom 8, Frontier:
