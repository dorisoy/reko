Mem0:Global memory
fp:fp
sp:sp
C:Flags
ds:ds
    def:  def ds
    uses: Mem8[ds:0x0300:byte] = al_6
al:al
    def:  def al
    uses: C_7 = fn0C00_000A(al, out al_6)
al_6: orig: al
    def:  C_7 = fn0C00_000A(al, out al_6)
    uses: Mem8[ds:0x0300:byte] = al_6
C_7: orig: C
    def:  C_7 = fn0C00_000A(al, out al_6)
    uses: branch C_7 l0C00_0009
Mem8: orig: Mem0
    def:  Mem8[ds:0x0300:byte] = al_6
// fn0C00_0000
void fn0C00_0000(byte al, selector ds)
fn0C00_0000_entry:
	def ds
	def al
	// succ:  l0C00_0000
l0C00_0000:
	C_7 = fn0C00_000A(al, out al_6)
	branch C_7 l0C00_0009
	// succ:  l0C00_0005 l0C00_0009
l0C00_0005:
	Mem8[ds:0x0300:byte] = al_6
	// succ:  l0C00_0009
l0C00_0009:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

Mem0:Global memory
fp:fp
sp:sp
al:al
    def:  def al
    uses: al_13 = PHI(al, al_23)
          al_20 = al - 0x30
          al_27 = al - 0x37
          al_27 = al - 0x37
          al_30 = al - 0x57
          al_30 = al - 0x57
          branch al <u 0x30 l0C00_0032
          branch al <=u 0x39 l0C00_0022
          branch al <u 0x3A l0C00_0030
          branch al <u 0x47 l0C00_0030
          branch al <u 0x41 l0C00_0032
          branch al <=u 0x46 l0C00_0022
          branch al <u 0x61 l0C00_0032
          branch al >u 0x66 l0C00_0032
SCZO:Flags
C:Flags
CZ:Flags
alOut:Out:al
SCZO_8: orig: SCZO
C_9: orig: C
CZ_10: orig: CZ
C_11: orig: C
SCZO_12: orig: SCZO
al_13: orig: al
    def:  al_13 = PHI(al, al_23)
    uses: use al_13 (=> alOut)
C_14: orig: C
SCZO_15: orig: SCZO
CZ_16: orig: CZ
SCZO_17: orig: SCZO
CZ_18: orig: CZ
CZ_19: orig: CZ
al_20: orig: al
    def:  al_20 = al - 0x30
    uses: al_23 = PHI(al_20, al_27, al_30)
SCZO_21: orig: SCZO
C_22: orig: C
al_23: orig: al
    def:  al_23 = PHI(al_20, al_27, al_30)
    uses: al_13 = PHI(al, al_23)
C_24: orig: C
SCZO_25: orig: SCZO
CZ_26: orig: CZ
al_27: orig: al
    def:  al_27 = al - 0x37
    uses: al_23 = PHI(al_20, al_27, al_30)
SCZO_28: orig: SCZO
C_29: orig: C
al_30: orig: al
    def:  al_30 = al - 0x57
    uses: al_23 = PHI(al_20, al_27, al_30)
SCZO_31: orig: SCZO
SCZO_32: orig: SCZO
C_33: orig: C
SCZO_34: orig: SCZO
CZ_35: orig: CZ
SCZO_36: orig: SCZO
C_37: orig: C
SCZO_38: orig: SCZO
CZ_39: orig: CZ
// fn0C00_000A
byte fn0C00_000A(byte al, ptr16 alOut)
fn0C00_000A_entry:
	def al
	// succ:  l0C00_000A
l0C00_000A:
	branch al <u 0x30 l0C00_0032
	// succ:  l0C00_000E l0C00_0032
l0C00_000E:
	branch al <=u 0x39 l0C00_0022
	// succ:  l0C00_0012 l0C00_0022
l0C00_0012:
	branch al <u 0x41 l0C00_0032
	// succ:  l0C00_0016 l0C00_0032
l0C00_0016:
	branch al <=u 0x46 l0C00_0022
	// succ:  l0C00_001A l0C00_0022
l0C00_001A:
	branch al <u 0x61 l0C00_0032
	// succ:  l0C00_001E l0C00_0032
l0C00_001E:
	branch al >u 0x66 l0C00_0032
	// succ:  l0C00_0022 l0C00_0032
l0C00_0022:
	al_20 = al - 0x30
	branch al <u 0x3A l0C00_0030
	// succ:  l0C00_0028 l0C00_0030
l0C00_0028:
	al_27 = al - 0x37
	branch al <u 0x47 l0C00_0030
	// succ:  l0C00_002E l0C00_0030
l0C00_002E:
	al_30 = al - 0x57
	// succ:  l0C00_0030
l0C00_0030:
	al_23 = PHI(al_20, al_27, al_30)
	return false
	// succ:  fn0C00_000A_exit
l0C00_0032:
	return true
	// succ:  fn0C00_000A_exit
fn0C00_000A_exit:
	al_13 = PHI(al, al_23)
	use al_13 (=> alOut)

