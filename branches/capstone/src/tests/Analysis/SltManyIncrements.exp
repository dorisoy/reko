Mem0:Global memory
    def:  def Mem0
    uses: r1_5 = Mem0[r0_4:byte]
          Mem9[0x33333330:word32] = Mem0[r0_6:byte]
          Mem15[0x33333330:word32] = Mem0[r0_6:byte]
fp:fp
r0:r0
    def:  def r0
    uses: r0_4 = PHI(r0, r0_11, r0_14)
r1:r1
r0_4: orig: r0
    def:  r0_4 = PHI(r0, r0_11, r0_14)
    uses: r1_5 = Mem0[r0_4:byte]
          r0_6 = r0_4 + 0x00000001
r1_5: orig: r1
    def:  r1_5 = Mem0[r0_4:byte]
    uses: branch r1_5 != 1 not1
          branch r1_5 != 2 done
r0_6: orig: r0
    def:  r0_6 = r0_4 + 0x00000001
    uses: Mem9[0x33333330:word32] = Mem0[r0_6:byte]
          Mem15[0x33333330:word32] = Mem0[r0_6:byte]
          r0_14 = r0_6 + 0x00000001
          Mem12[0x33333331:word32] = Mem9[r0_6 + 0x00000001:byte]
          r0_11 = r0_6 + 0x00000002
          r0_11 = r0_6 + 0x00000002
r1_7: orig: r1
    uses: Mem9[0x33333330:word32] = Mem0[r0_6:byte]
r0_8: orig: r0
Mem9: orig: Mem0
    def:  Mem9[0x33333330:word32] = Mem0[r0_6:byte]
    uses: Mem12[0x33333331:word32] = Mem9[r0_6 + 0x00000001:byte]
r1_10: orig: r1
    uses: Mem12[0x33333331:word32] = Mem9[r0_6 + 0x00000001:byte]
r0_11: orig: r0
    def:  r0_11 = r0_6 + 0x00000002
    uses: r0_4 = PHI(r0, r0_11, r0_14)
Mem12: orig: Mem0
    def:  Mem12[0x33333331:word32] = Mem9[r0_6 + 0x00000001:byte]
r1_13: orig: r1
    uses: Mem15[0x33333330:word32] = Mem0[r0_6:byte]
r0_14: orig: r0
    def:  r0_14 = r0_6 + 0x00000001
    uses: r0_4 = PHI(r0, r0_11, r0_14)
Mem15: orig: Mem0
    def:  Mem15[0x33333330:word32] = Mem0[r0_6:byte]
// ManyIncrements
void ManyIncrements()
ManyIncrements_entry:
	def Mem0
	def r0
	goto loopTop
	// succ:  loopTop
done:
	return
	// succ:  ManyIncrements_exit
l1:
	Mem9[0x33333330:word32] = Mem0[r0_6:byte]
	Mem12[0x33333331:word32] = Mem9[r0_6 + 0x00000001:byte]
	r0_11 = r0_6 + 0x00000002
	goto loopTop
	// succ:  loopTop
l2:
	Mem15[0x33333330:word32] = Mem0[r0_6:byte]
	r0_14 = r0_6 + 0x00000001
	// succ:  loopTop
loopTop:
	r0_4 = PHI(r0, r0_11, r0_14)
	r1_5 = Mem0[r0_4:byte]
	r0_6 = r0_4 + 0x00000001
	branch r1_5 != 1 not1
	goto l1
	// succ:  l1 not1
not1:
	branch r1_5 != 2 done
	goto l2
	// succ:  l2 done
ManyIncrements_exit:
- Interference graph -------------------
Mem0 interferes with r0
Mem0 interferes with r0_4
Mem0 interferes with r1_5
Mem0 interferes with r0_6
Mem0 interferes with Mem9
Mem0 interferes with r0_11
Mem0 interferes with Mem12
Mem0 interferes with r0_14
Mem0 interferes with Mem15
r0_4 interferes with r1_5
r1_5 interferes with r0_6
r0_6 interferes with Mem9
r0_6 interferes with Mem12
r0_6 interferes with Mem15
Mem9 interferes with r1_10
