Mem0:Global memory
fp:Temporary
bx:Register bx
    def:  def bx
    uses: branch bx == 0x0000 l0C00_0013
          branch bx > 0x0000 l0C00_000D
SCZO:Flags
Z:Flags
ax:Register ax
ds:Register ds
    def:  def ds
    uses: store(Mem21[ds:0x0100:word16]) = ax_18
SZO:Flags
SCZO_8: orig: SCZO
Z_9: orig: Z
    uses: branch bx == 0x0000 l0C00_0013
SZO_10: orig: SZO
    uses: branch bx > 0x0000 l0C00_000D
ax_11: orig: ax
    def:  ax_11 = 0x0000
    uses: ax_18 = PHI(ax_11, ax_15, ax_16)
SCZO_12: orig: SCZO
Z_13: orig: Z
SZO_14: orig: SZO
ax_15: orig: ax
    def:  ax_15 = 0x0001
    uses: ax_18 = PHI(ax_11, ax_15, ax_16)
ax_16: orig: ax
    def:  ax_16 = 0xFFFF
    uses: ax_18 = PHI(ax_11, ax_15, ax_16)
SZO_17: orig: SZO
ax_18: orig: ax
    def:  ax_18 = PHI(ax_11, ax_15, ax_16)
    uses: store(Mem21[ds:0x0100:word16]) = ax_18
Z_19: orig: Z
SCZO_20: orig: SCZO
Mem21: orig: Mem0
    def:  store(Mem21[ds:0x0100:word16]) = ax_18
// fn0C00_0000
void fn0C00_0000(word16 bx, selector ds)
fn0C00_0000_entry:		// block 0, pred:
	def bx
	def ds
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	branch bx == 0x0000 l0C00_0013
	// succ:  3 2
l0C00_0013:		// block 2, pred: 1
	ax_11 = 0x0000
	// succ:  6
l0C00_0005:		// block 3, pred: 1
	branch bx > 0x0000 l0C00_000D
	// succ:  5 4
l0C00_000D:		// block 4, pred: 3
	ax_15 = 0x0001
	// succ:  6
l0C00_0007:		// block 5, pred: 3
	ax_16 = 0xFFFF
	// succ:  6
l0C00_0015:		// block 6, pred: 2 4 5
	ax_18 = PHI(ax_11, ax_15, ax_16)
	store(Mem21[ds:0x0100:word16]) = ax_18
	return
	// succ:  7
fn0C00_0000_exit:		// block 7, pred: 6
	// succ: 
