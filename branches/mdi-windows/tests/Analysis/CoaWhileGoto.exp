Mem0:Global memory
    def:  def Mem0
    uses: Mem13 = PHI(Mem0, Mem19, Mem27)
fp:Temporary
si:Register si
    def:  def si
    uses: si_12 = PHI(si, si_15, si_15)
          ax_33 = si_15 - si
bx:Register bx
ax:Register ax
ds:Register ds
    def:  def ds
    uses: ax_14 = Mem13[ds:si_12:word16]
          store(Mem19[ds:di:word16]) = ax_14
          store(Mem27[ds:0x0302:word16]) = Mem19[ds:0x0302:word16] + 0x0001
          store(Mem27[ds:0x0302:word16]) = Mem19[ds:0x0302:word16] + 0x0001
          store(Mem42[ds:0x0300:word16]) = ax_40
SCZO:Flags
Z:Flags
di:Register di
    def:  def di
    uses: store(Mem19[ds:di:word16]) = ax_14
v9:Temporary
SZO:Flags
bx_11: orig: bx
si_12: orig: si
    def:  si_12 = PHI(si, si_15, si_15)
    uses: ax_14 = Mem13[ds:si_12:word16]
          si_15 = si_12 + 0x0002
Mem13: orig: Mem0
    def:  Mem13 = PHI(Mem0, Mem19, Mem27)
    uses: ax_14 = Mem13[ds:si_12:word16]
ax_14: orig: ax
    def:  ax_14 = Mem13[ds:si_12:word16]
    uses: store(Mem19[ds:di:word16]) = ax_14
          branch ax_14 != 0x0020 l0C00_0005
          branch ax_14 != 0x0000 l0C00_0011
          branch ax_14 != 0x000D l0C00_001A
si_15: orig: si
    def:  si_15 = si_12 + 0x0002
    uses: si_12 = PHI(si, si_15, si_15)
          si_12 = PHI(si, si_15, si_15)
          ax_33 = si_15 - si
SCZO_16: orig: SCZO
Z_17: orig: Z
SZO_18: orig: SZO
Mem19: orig: Mem0
    def:  store(Mem19[ds:di:word16]) = ax_14
    uses: Mem13 = PHI(Mem0, Mem19, Mem27)
          store(Mem27[ds:0x0302:word16]) = Mem19[ds:0x0302:word16] + 0x0001
SCZO_20: orig: SCZO
Z_21: orig: Z
SZO_22: orig: SZO
SCZO_23: orig: SCZO
Z_24: orig: Z
SZO_25: orig: SZO
v9_26: orig: v9
    uses: store(Mem27[ds:0x0302:word16]) = Mem19[ds:0x0302:word16] + 0x0001
Mem27: orig: Mem0
    def:  store(Mem27[ds:0x0302:word16]) = Mem19[ds:0x0302:word16] + 0x0001
    uses: Mem13 = PHI(Mem0, Mem19, Mem27)
SZO_28: orig: SZO
SCZO_29: orig: SCZO
Z_30: orig: Z
ax_31: orig: ax
    def:  ax_31 = 0xFFFF
    uses: ax_40 = PHI(ax_31, ax_33)
ax_32: orig: ax
ax_33: orig: ax
    def:  ax_33 = si_15 - si
    uses: ax_40 = PHI(ax_31, ax_33)
SCZO_34: orig: SCZO
Z_35: orig: Z
SZO_36: orig: SZO
SZO_37: orig: SZO
Z_38: orig: Z
SCZO_39: orig: SCZO
ax_40: orig: ax
    def:  ax_40 = PHI(ax_31, ax_33)
    uses: store(Mem42[ds:0x0300:word16]) = ax_40
Mem41: orig: Mem0
Mem42: orig: Mem0
    def:  store(Mem42[ds:0x0300:word16]) = ax_40
// fn0C00_0000
void fn0C00_0000(word16 si, word16 di, selector ds)
fn0C00_0000_entry:		// block 0, pred:
	def Mem0
	def si
	def ds
	def di
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	// succ:  2
l0C00_001A:		// block 2, pred: 1 4 5
	si_12 = PHI(si, si_15, si_15)
	Mem13 = PHI(Mem0, Mem19, Mem27)
	ax_14 = Mem13[ds:si_12:word16]
	si_15 = si_12 + 0x0002
	branch ax_14 != 0x0020 l0C00_0005
	// succ:  7 3
l0C00_0005:		// block 3, pred: 2
	store(Mem19[ds:di:word16]) = ax_14
	branch ax_14 != 0x0000 l0C00_0011
	// succ:  6 4
l0C00_0011:		// block 4, pred: 3
	branch ax_14 != 0x000D l0C00_001A
	// succ:  5 2
l0C00_0016:		// block 5, pred: 4
	store(Mem27[ds:0x0302:word16]) = Mem19[ds:0x0302:word16] + 0x0001
	// succ:  2
l0C00_000B:		// block 6, pred: 3
	ax_31 = 0xFFFF
	// succ:  8
l0C00_0020:		// block 7, pred: 2
	ax_33 = si_15 - si
	// succ:  8
l0C00_0024:		// block 8, pred: 6 7
	ax_40 = PHI(ax_31, ax_33)
	store(Mem42[ds:0x0300:word16]) = ax_40
	return
	// succ:  9
fn0C00_0000_exit:		// block 9, pred: 8
	// succ: 

