// fn0C00_0000
void fn0C00_0000(word16 bx, selector ds)
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	word16 ax_8 = 0x0000
	// succ:  2
l0C00_0002:		// block 2, pred: 1 5
	branch bx == 0x0000 l0C00_000D
	// succ:  5 3
l0C00_000D:		// block 3, pred: 2
	store(Mem15[ds:0x0200:word16]) = ax_8
	return
	// succ:  4
fn0C00_0000_exit:		// block 4, pred: 3
	// succ: 
l0C00_0006:		// block 5, pred: 2
	ax_8 = ax_8 + 0x0001
	bx = Mem0[ds:bx + 0x0004:word16]
	// succ:  2

T_2 (in ax_8 : word16)
	trait_primitive(word16)
	trait_equal(T_3)
	trait_primitive(word16)
	trait_primitive(word16)
	trait_primitive(word16)
	trait_equal(T_11)
T_3 (in 0x0000 : word16)
	trait_primitive(word16)
T_4 (in bx : word16)
	trait_primitive(word16)
	trait_equal(T_5)
	trait_primitive(word16)
	trait_mem(T_7:T_14, 4)
	trait_primitive(word16)
	trait_equal(T_14)
T_5 (in 0x0000 : word16)
	trait_primitive(word16)
T_6 (in bx == 0x0000 : bool)
	trait_primitive(bool)
T_7 (in ds : selector)
	trait_primitive(selector)
	trait_mem(T_9, 200)
	trait_primitive(selector)
T_8 (in 0x0200 : word16)
	trait_primitive(word16)
	trait_mem(T_7:T_9, 0)
T_9 (in Mem15[ds:0x0200:word16] : word16)
	trait_primitive(word16)
	trait_equal(T_2)
T_10 (in 0x0001 : word16)
	trait_primitive(word16)
T_11 (in ax_8 + 0x0001 : word16)
	trait_primitive(word16)
T_12 (in 0x0004 : word16)
	trait_primitive(word16)
T_13 (in bx + 0x0004 : word16)
	trait_primitive(word16)
T_14 (in Mem0[ds:bx + 0x0004:word16] : word16)
	trait_primitive(word16)
