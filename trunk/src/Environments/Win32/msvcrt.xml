<?xml version="1.0" encoding="utf-8" ?>
<library xmlns="http://schemata.jklnet.org/Decompiler">
  <default>
	<signature convention="cdecl"></signature>
  </default>
  <Types>
    <typedef name="time_t">
      <prim domain="SignedInt" size="8" />
    </typedef>
  </Types>
  <procedure name="malloc">
	<signature>
    <return>
      <ptr>
        <prim domain="Void" />
      </ptr>
      <reg>eax</reg>
    </return>
	  <arg>
      <type>size_t</type>
		  <stack size="4" />
	  </arg>
	</signature>
  </procedure>
  <procedure name="free">
	<signature>
    <arg>
      <ptr><prim domain="Void" /></ptr>
      <stack size="4" />
    </arg>
	</signature>
  </procedure>
  <procedure name="_CIacos">
	<signature></signature>
  </procedure>
  <procedure name="_ltoa">
	<signature>
    <return>
      <ptr><prim domain="Character" size="1" /></ptr>
		  <reg>eax</reg>
	  </return>
 
	  <arg name="a">
      <prim domain="SignedInt" size="4" />
		  <stack size="4" />
	  </arg>
	  <arg name="b">
      <ptr><prim domain="Character" size="1" /></ptr>
		  <stack size="4" />
	  </arg>
    <arg name="c">
      <ptr><prim domain="SignedInt" size="4" /></ptr>
      <stack size="4" />
    </arg> 
	</signature>
  </procedure>
  <procedure name="rand">
	<signature>
	  <return type="int">
		<reg>eax</reg>
	  </return>
	</signature>
  </procedure>
  <procedure name="strncmp">
	<signature>
    <return>
      <prim domain="SignedInt" size="4" />
      <reg>eax</reg>
    </return>
    <arg name="dst">
      <ptr><prim domain="Character" size="1" /></ptr>
      <stack size="4" />
    </arg>
    <arg name="src">
      <ptr><prim domain="Character" size="1" /></ptr>
      <stack size="4" />
    </arg>
    <arg>
      <type>size_t</type>
      <stack size="4" />
    </arg>
	</signature>
  </procedure>
  <procedure name="calloc">
	<signature>
	  <return>
      <ptr><prim domain="Void" /></ptr>
		<reg>eax</reg>
	  </return>
    <arg>
      <type>size_t</type>
      <stack size="4" />
    </arg>
    <arg>
      <type>size_t</type>
      <stack size="4" />
    </arg>
	</signature>
  </procedure>
  <procedure name="atol">
	<signature>
	  <return type="long">
		<reg>eax</reg>
	  </return>
    <arg>
      <ptr><prim domain="Character" size="1" /></ptr>
      <stack size="4" />
    </arg>
	</signature>
  </procedure>
  <procedure name="time">
	<signature>
	  <return>
      <type>time_t</type>
		  <reg>eax</reg>
	  </return>
	  <arg>
      <ptr><type>time_t</type></ptr>
		  <stack size="4" />
	  </arg>
	</signature>
  </procedure>
  <procedure name="srand">
	<signature>
	  <return>
      <type domain="Void" />
		  <reg>eax</reg>
	  </return>
	  <arg>
      <prim domain="UnsignedInt" size="4" />
		  <stack size="4" />
	  </arg>
	</signature>
  </procedure>
  <procedure name="_ftol">
	<signature>
	  <return>
      <prim domain="SignedInt" size="4" />
		  <reg>eax</reg>
	  </return>
	  <arg>
      <prim domain="Real" size="8" />
		  <fpustack />
	  </arg>
	</signature>
  </procedure>
  <procedure name="sprintf">
	<signature>
	  <return>
      <prim domain="SignedInt" size="4" />
		  <reg>eax</reg>
	  </return>
	  <arg>
      <ptr><prim domain="Character" size="1" /></ptr>
		  <stack size="4" />
	  </arg>
	  <arg>
      <ptr><prim domain="Character" size="1" /></ptr>
		  <stack size="4" />
	  </arg>
	  <!-- // TODO: what about varargs functions -->
	</signature>
  </procedure>
  <procedure name="_CIpow">
	<signature>
    <return>
      <prim domain="Real" size="8" />
      <fpustack />
    </return>
    <arg>
      <prim domain="Real" size="8" />
      <fpustack />
    </arg>
    <arg>
      <prim domain="Real" size="8" />
      <fpustack />
    </arg>
  </signature>
  </procedure>
  <procedure name="strncpy">
	<signature>
	  <return>
      <ptr><prim domain="Character" size="1" /></ptr>
		  <reg>eax</reg>
	  </return>
	  <arg>
      <ptr><prim domain="Character" size="1" /></ptr>
  		<stack size="4" />
	  </arg>
	  <arg>
      <ptr><prim domain="Character" size="1" /></ptr>
  		<stack size="4" />
	  </arg>
    <arg>
      <type>size_t</type>
      <stack size="4" />
    </arg>
	</signature>
  </procedure>
</library>
