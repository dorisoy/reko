// fn0C00_0000
// Mem0:Global memory
// fp:Temporary
// ecx:Register ecx
// SZO:Flags
// C:Flags
// ax:Register ax
// bx:Register bx
// SCZO:Flags
// Z:Flags
// cl:Register cl
// ds:Register ds
// SO:Flags
// return address size: 2
void fn0C00_0000()
fn0C00_0000_entry:
l0C00_0000:
	ecx = ecx ^ ecx
	SZO = cond(ecx)
	C = false
	ax = ax - bx
	SCZO = cond(ax)
	cl = Test(EQ,Z)
	store(Mem0[ds:0x0300:word32]) = ecx
	SCZO = cond(ax - 0x0030)
	branch Test(LT,SO) l0C00_0016
l0C00_0012:
	store(Mem0[ds:0x0302:word16]) = ax
l0C00_0016:
	return
fn0C00_0000_exit:
