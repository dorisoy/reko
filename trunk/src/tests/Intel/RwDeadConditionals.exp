// fn0C00_0000
// Mem0:Global memory
// fp:Temporary
// sp:Register sp
// ax:Register ax
// SZO:Flags
// C:Flags
// bx:Register bx
// ds:Register ds
// cx:Register cx
// SCZO:Flags
// return address size: 2
void fn0C00_0000()
fn0C00_0000_entry:
l0C00_0000:
	ax = ax ^ ax
	SZO = cond(ax)
	C = false
	cx = Mem0[ds:bx:word16]
l0C00_0004:
	ax = ax + cx
	SCZO = cond(ax)
	ax = ax + cx
	SCZO = cond(ax)
	cx = cx - 0x0001
	branch cx != 0x0000 l0C00_0004
l0C00_000A:
	store(Mem0[ds:0x0300:word16]) = ax
	return
fn0C00_0000_exit:
