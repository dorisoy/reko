// fn0C00_0000
// Return size: 2
// Mem0:Global memory
// fp:fp
// sp:sp
// ax:ax
// ds:ds
// dx:dx
// SCZO:Flags
// C:Flags
// si:si
// cx:cx
// bx:bx
// eax:eax
// v12:v12
// edx:edx
// v14:v14
// return address size: 2
void fn0C00_0000()
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	sp = fp
	ax = Mem0[ds:0x0300:word16]
	dx = Mem0[ds:0x0302:word16]
	ax = ax + Mem0[ds:0x0304:word16]
	SCZO = cond(ax)
	dx = dx + Mem0[ds:0x0306:word16] + C
	SCZO = cond(dx)
	ax = Mem0[ds:si + 0x0308:word16]
	ax = ax + cx
	SCZO = cond(ax)
	dx = Mem0[ds:si + 0x030A:word16]
	dx = dx + bx + C
	SCZO = cond(dx)
	v12 = Mem0[ds:0x0200:word32] + eax
	Mem0[ds:0x0200:word32] = v12
	SCZO = cond(v12)
	v14 = Mem0[ds:0x0204:word32] + edx + C
	Mem0[ds:0x0204:word32] = v14
	SCZO = cond(v14)
	cx = Mem0[ds:si + 0x030C:word16]
	ax = ax - cx
	SCZO = cond(ax)
	bx = Mem0[ds:si + 0x030E:word16]
	dx = dx - bx - C
	SCZO = cond(dx)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

