// fn0C00_0000
// Mem0:Global memory
// fp:Temporary
// bp:Register bp
// sp:Register sp
// ss:Register ss
// SCZO:Flags
// ax:Register ax
// dx:Register dx
// C:Flags
// ds:Register ds
// ds_dx:Sequence ds:dx
// al:Register al
// bx:Register bx
// cx:Register cx
// SZO:Flags
// Z:Flags
// return address size: 2
void fn0C00_0000()
fn0C00_0000_entry:
l0C00_0000:
	sp = sp - 0x0002
	store(Mem0[ss:sp:word16]) = bp
	bp = sp
	sp = sp - 0x0004
	SCZO = cond(sp)
	ax = 0x3D00
	dx = Mem0[ss:bp + 0x0004:word16]
	C = msdos_open_file(ds_dx, al, &ax)
	store(Mem0[ss:bp - 0x0002:word16]) = ax
	ax = 0x3D01
	dx = Mem0[ss:bp + 0x0006:word16]
	C = msdos_open_file(ds_dx, al, &ax)
	store(Mem0[ss:bp - 0x0004:word16]) = ax
	goto l0C00_002A
l0C00_001F:
	bx = Mem0[ss:bp - 0x0004:word16]
	dx = 0x0800
	ax = 0x4000
	C = msdos_write_file(bx, cx, ds_dx, &ax)
l0C00_002A:
	bx = Mem0[ss:bp - 0x0002:word16]
	dx = 0x0800
	cx = 0x0800
	ax = 0x3F00
	C = msdos_read_file(bx, cx, ds_dx, &ax)
	branch Test(ULT,C) l0C00_003E
l0C00_003A:
	ax = ax | ax
	SZO = cond(ax)
	C = false
	branch Test(NE,Z) l0C00_001F
l0C00_003E:
	sp = bp
	bp = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	return
fn0C00_0000_exit:
