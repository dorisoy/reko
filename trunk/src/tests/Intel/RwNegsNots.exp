// fn0C00_0000
// Mem0:Global memory
// fp:Temporary
// eax:Register eax
// SCZO:Flags
// C:Flags
// v5:Temporary
// ds:Register ds
// v7:Temporary
// v8:Temporary
// v9:Temporary
// ecx:Register ecx
// bx:Register bx
// v12:Temporary
// cx:Register cx
// return address size: 2
void fn0C00_0000()
fn0C00_0000_entry:
l0C00_0000:
	eax = -eax
	SCZO = cond(eax)
	C = eax == 0x00000000
	v5 = eax - eax
	eax = v5 - (word32) C
	SCZO = cond(eax)
	store(Mem0[ds:0x0300:word32]) = eax
	v7 = Mem0[ds:0x0202:word16]
	store(Mem0[ds:0x0202:word16]) = -v7
	SCZO = cond(v7)
	C = v7 == 0x0000
	v8 = Mem0[ds:0x0200:word16]
	store(Mem0[ds:0x0200:word16]) = -v8
	SCZO = cond(v8)
	C = v8 == 0x0000
	v9 = ecx - ecx
	ecx = v9 - (word32) C
	SCZO = cond(ecx)
	store(Mem0[ds:0x0308:word32]) = ecx
	bx = ~bx
	store(Mem0[ds:0x0304:word16]) = bx
	v12 = Mem0[ds:0x0204:word16]
	store(Mem0[ds:0x0204:word16]) = ~v12
	cx = Mem0[ds:0x0304:word16]
	cx = cx - 0x03E8
	SCZO = cond(cx)
	cx = -cx
	SCZO = cond(cx)
	C = cx == 0x0000
	store(Mem0[ds:0x0306:word16]) = cx
	return
fn0C00_0000_exit:

