// fn0C00_0000
// Mem0:Global memory
// fp:Temporary
// sp:Register sp
// ds:Register ds
// si:Register si
// cx:Register cx
// SZO:Flags
// al:Register al
// ah:Register ah
// SCZO:Flags
// Z:Flags
// ax:Register ax
// C:Flags
// es:Register es
// di:Register di
// return address size: 2
void fn0C00_0000()
fn0C00_0000_entry:
l0C00_0000:
	si = Mem0[ds:0x0100:word16]
	cx = Mem0[ds:si:word16]
	si = si + 0x0001
	SZO = cond(si)
	si = si + 0x0001
	SZO = cond(si)
l0C00_0008:
	al = Mem0[ds:si:byte]
	si = si + 0x0001
	SCZO = cond(al - ah)
	cx = cx - 0x0001
	branch Test(NE,Z) && cx != 0x0000 l0C00_0008
l0C00_000D:
	si = Mem0[ds:0x0100:word16]
	ax = Mem0[ds:si:word16]
	si = si + 0x0002
	al = al ^ al
	SZO = cond(al)
	C = false
l0C00_0014:
	store(Mem0[es:di:byte]) = al
	di = di + 0x0001
	cx = cx - 0x0001
	branch cx != 0x0000 l0C00_0014
l0C00_0017:
	return
fn0C00_0000_exit:
