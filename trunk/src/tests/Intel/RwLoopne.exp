// fn0C00_0000
// Mem0:Global memory
// fp:Temporary
// ds:Register
// si:Register
// cx:Register
// SZO:Flags
// al:Register
// ah:Register
// SCZO:Flags
// Z:Flags
// ax:Register
// es:Register
// di:Register
// return address size: 2
void fn0C00_0000()
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	si = Mem0[ds:0x0100:word16]
	cx = Mem0[ds:si:word16]
	si = si + 0x0001
	si = si + 0x0001
	SZO = cond(si)
	// succ:  2
l0C00_0008:		// block 2, pred: 1 3 2
	al = Mem0[ds:si:byte]
	si = si + 0x0001
	SCZO = cond(al - ah)
	cx = cx - 0x0001
	branch Test(NE,Z)
	// succ:  3 2
l0C00_000B_loop:		// block 3, pred: 2
	branch cx == 0x0000
	// succ:  4 2
l0C00_000D:		// block 4, pred: 3
	si = Mem0[ds:0x0100:word16]
	ax = Mem0[ds:si:word16]
	si = si + 0x0002
	al = 0x00
	SCZO = cond(al)
	// succ:  5
l0C00_0014:		// block 5, pred: 4 5
	store(Mem0[es:di:byte]) = al
	di = di + 0x0001
	cx = cx - 0x0001
	Z = cond(cx)
	branch Test(NE,Z)
	// succ:  6 5
l0C00_0017:		// block 6, pred: 5
	return
	// succ:  7
fn0C00_0000_exit:		// block 7, pred: 6
	// succ: 
