// fn0C00_0000
// Mem0:Global memory
// fp:Temporary
// ecx:Register ecx
// SCZO:Flags
// ds:Register ds
// return address size: 2
void fn0C00_0000()
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	call fn0C00_000F (depth: 2;)
	call fn0C00_0010 (depth: 2;)
	ecx = 0x00000000
	SCZO = cond(ecx)
	store(Mem0[ds:0x0310:word32]) = ecx
	return
	// succ:  2
fn0C00_0000_exit:		// block 2, pred: 1
	// succ: 

// fn0C00_000F
// Mem0:Global memory
// fp:Temporary
// return address size: 2
void fn0C00_000F()
fn0C00_000F_entry:		// block 0, pred:
	// succ:  1
l0C00_000F:		// block 1, pred: 0
	return
	// succ:  2
fn0C00_000F_exit:		// block 2, pred: 1
	// succ: 

// fn0C00_0010
// Mem0:Global memory
// fp:Temporary
// ch:Register ch
// SCZO:Flags
// ds:Register ds
// cl:Register cl
// cx:Register cx
// return address size: 2
void fn0C00_0010()
fn0C00_0010_entry:		// block 0, pred:
	// succ:  1
l0C00_0010:		// block 1, pred: 0
	ch = 0x00
	SCZO = cond(ch)
	cl = Mem0[ds:0x0300:byte]
	branch cx == 0x0000 l0C00_001E
	// succ:  2 3
l0C00_0018:		// block 2, pred: 1
	store(Mem0[ds:0x0302:word16]) = 0x0000
	// succ:  3
l0C00_001E:		// block 3, pred: 2 1
	return
	// succ:  4
fn0C00_0010_exit:		// block 4, pred: 3
	// succ: 

