// fn0C00_0000
// Mem0:Global memory
// fp:Temporary
// ecx:Register ecx
// SCZO:Flags
// ds:Register ds
// return address size: 2
void fn0C00_0000()
fn0C00_0000_entry:		// pred:
	// succ:  l0C00_0000
l0C00_0000:		// pred: fn0C00_0000_entry
	call fn0C00_000F (depth: 2;)
	call fn0C00_0010 (depth: 2;)
	ecx = 0x00000000
	SCZO = cond(ecx)
	store(Mem0[ds:0x0310:word32]) = ecx
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:		// pred: l0C00_0000
	// succ: 

// fn0C00_000F
// Mem0:Global memory
// fp:Temporary
// return address size: 2
void fn0C00_000F()
fn0C00_000F_entry:		// pred:
	// succ:  l0C00_000F
l0C00_000F:		// pred: fn0C00_000F_entry
	return
	// succ:  fn0C00_000F_exit
fn0C00_000F_exit:		// pred: l0C00_000F
	// succ: 

// fn0C00_0010
// Mem0:Global memory
// fp:Temporary
// ch:Register ch
// SCZO:Flags
// ds:Register ds
// cl:Register cl
// cx:Register cx
// return address size: 2
void fn0C00_0010()
fn0C00_0010_entry:		// pred:
	// succ:  l0C00_0010
l0C00_0010:		// pred: fn0C00_0010_entry
	ch = 0x00
	SCZO = cond(ch)
	cl = Mem0[ds:0x0300:byte]
	branch cx == 0x0000 l0C00_001E
	// succ:  l0C00_0018 l0C00_001E
l0C00_0018:		// pred: l0C00_0010
	store(Mem0[ds:0x0302:word16]) = 0x0000
	// succ:  l0C00_001E
l0C00_001E:		// pred: l0C00_0010 l0C00_0018
	return
	// succ:  fn0C00_0010_exit
fn0C00_0010_exit:		// pred: l0C00_001E
	// succ: 

