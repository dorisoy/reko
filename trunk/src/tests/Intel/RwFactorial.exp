// fn0C00_0000
// Mem0:Global memory
// fp:Temporary
// cx:Register cx
// wLoc04:Local -0004
// ax:Register ax
// ds:Register ds
// return address size: 2
void fn0C00_0000()
fn0C00_0000_entry:		// pred:
	// succ:  l0C00_0000
l0C00_0000:		// pred: fn0C00_0000_entry
	cx = 0x0064
	wLoc04 = cx
	call fn0C00_000F (depth: 4;)
	store(Mem0[ds:0x0064:word16]) = ax
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:		// pred: l0C00_0000
	// succ: 
// fn0C00_000F
// Mem0:Global memory
// fp:Temporary
// bp:Register bp
// wLoc04:Local -0004
// wArg00:Stack +0000
// ax:Register ax
// SZO:Flags
// Z:Flags
// wLoc06:Local -0006
// dx:Register dx
// dx_ax:Sequence dx:ax
// SCZO:Flags
// return address size: 2
void fn0C00_000F()
fn0C00_000F_entry:		// pred:
	// succ:  l0C00_000F
l0C00_000F:		// pred: fn0C00_000F_entry
	wLoc04 = bp
	ax = wArg00
	ax = ax - 0x0001
	SZO = cond(ax)
	branch Test(EQ,Z) l0C00_0026
	// succ:  l0C00_0018 l0C00_0026
l0C00_0018:		// pred: l0C00_000F
	wLoc06 = ax
	call fn0C00_000F (depth: 6;)
	dx = wArg00
	dx_ax = dx *s ax
	SCZO = cond(dx_ax)
	// succ:  l0C00_0029
l0C00_0029:		// pred: l0C00_0026 l0C00_0018
	bp = wLoc04
	return
	// succ:  fn0C00_000F_exit
fn0C00_000F_exit:		// pred: l0C00_0029
	// succ: 
l0C00_0026:		// pred: l0C00_000F
	ax = 0x0001
	// succ:  l0C00_0029
