// TreeFindMock
void TreeFindMock()
TreeFindMock_entry:		// block 0, pred:
	// succ:  1
seek:		// block 1, pred: 0 7
	branch t == 0x00000000
	// succ:  2 5
l1:		// block 2, pred: 1
	vv = Mem0[t:word32]
	branch v == vv
	// succ:  3 5
l2:		// block 3, pred: 2
	branch v < vv
	// succ:  7 4
lt:		// block 4, pred: 3
	t = Mem0[t + 0x00000004:word32]
	// succ:  5
found:		// block 5, pred: 1 2 4
	return t
	// succ:  6
TreeFindMock_exit:		// block 6, pred: 5
	// succ: 
l3:		// block 7, pred: 3
	t = Mem0[t + 0x00000008:word32]
	// succ:  1

// Equivalence classes ////////////
Eq_2: (struct (0 int32 dw0000) (4 (ptr Eq_2) ptr0004) (8 (ptr Eq_2) ptr0008))
	T_2 (in t : word32)
	T_3 (in 0x00000000 : word32)
	T_12 (in Mem0[t + 0x00000004:word32] : word32)
	T_15 (in Mem0[t + 0x00000008:word32] : word32)
// Type Variables ////////////
Globals: (in globals : ptr0)
  Class: Eq_1
  DataType: Eq_1
  OrigDataType: 
T_2: (in t : word32)
  Class: Eq_2
  DataType: (ptr Eq_2)
  OrigDataType: (ptr (struct (0 T_5 t0000) (4 T_12 t0004) (8 T_15 t0008)))
T_3: (in 0x00000000 : word32)
  Class: Eq_2
  DataType: (ptr Eq_2)
  OrigDataType: word32
T_4: (in t == 0x00000000 : bool)
  Class: Eq_4
  DataType: bool
  OrigDataType: bool
T_5: (in Mem0[t:word32] : word32)
  Class: Eq_5
  DataType: int32
  OrigDataType: word32
T_6: (in vv : word32)
  Class: Eq_5
  DataType: int32
  OrigDataType: int32
T_7: (in v : word32)
  Class: Eq_5
  DataType: int32
  OrigDataType: int32
T_8: (in v == vv : bool)
  Class: Eq_8
  DataType: bool
  OrigDataType: bool
T_9: (in v < vv : bool)
  Class: Eq_9
  DataType: bool
  OrigDataType: bool
T_10: (in 0x00000004 : word32)
  Class: Eq_10
  DataType: word32
  OrigDataType: word32
T_11: (in t + 0x00000004 : word32)
  Class: Eq_11
  DataType: word32
  OrigDataType: word32
T_12: (in Mem0[t + 0x00000004:word32] : word32)
  Class: Eq_2
  DataType: (ptr Eq_2)
  OrigDataType: word32
T_13: (in 0x00000008 : word32)
  Class: Eq_13
  DataType: word32
  OrigDataType: word32
T_14: (in t + 0x00000008 : word32)
  Class: Eq_14
  DataType: word32
  OrigDataType: word32
T_15: (in Mem0[t + 0x00000008:word32] : word32)
  Class: Eq_2
  DataType: (ptr Eq_2)
  OrigDataType: word32
