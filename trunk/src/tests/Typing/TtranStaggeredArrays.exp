// StaggeredArraysMock
void StaggeredArraysMock()
StaggeredArraysMock_entry:
	// succ:  l1
l1:
	x = p[i * 0x00000008]
	x = (p + 4)[i * 0x00000008]
	// succ: 
StaggeredArraysMock_exit:

// Equivalence classes ////////////
Eq_2: (arr Eq_13)
	T_2 (in p : word32)
Eq_13: (struct 8 (0 word32 dw0000) (4 word32 dw0004))
	T_13
// Type Variables ////////////
Globals: (in globals : ptr32)
  Class: Eq_1
  DataType: Eq_1
  OrigDataType: 
T_2: (in p : word32)
  Class: Eq_2
  DataType: (ptr Eq_2)
  OrigDataType: (ptr (struct (0 (arr (struct 8 (0 word32 dw0000))) a0000) (4 (arr (struct 8 (4 word32 dw0004))) a0004)))
T_3: (in i : word32)
  Class: Eq_3
  DataType: word32
  OrigDataType: word32
T_4: (in 0x00000008 : word32)
  Class: Eq_4
  DataType: word32
  OrigDataType: word32
T_5: (in i * 0x00000008 : word32)
  Class: Eq_5
  DataType: uir32
  OrigDataType: uir32
T_6: (in p[i * 0x00000008] : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_7: (in x : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_8: (in 4 : int32)
  Class: Eq_8
  DataType: int32
  OrigDataType: int32
T_9: (in p + 4 : word32)
  Class: Eq_9
  DataType: word32
  OrigDataType: word32
T_10: (in 0x00000008 : word32)
  Class: Eq_10
  DataType: word32
  OrigDataType: word32
T_11: (in i * 0x00000008 : word32)
  Class: Eq_11
  DataType: uir32
  OrigDataType: uir32
T_12: (in (p + 4)[i * 0x00000008] : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_13:
  Class: Eq_13
  DataType: Eq_13
  OrigDataType: 
