// ProcedureBuilder
// Return size: 0
void ProcedureBuilder()
ProcedureBuilder_entry:
	// succ:  l1
l1:
	Mem0[ds:0x0100:ptr32] = SEQ(ds, 0x1234)
ProcedureBuilder_exit:

// Equivalence classes ////////////
Eq_1: (ptr (struct))
	globals_t (in globals : (ptr (struct "Globals")))
Eq_2: (ptr (segment (100 T_6 t0100)))
	T_2 (in ds : selector)
Eq_3: word16
	T_3 (in 0x1234 : word16)
Eq_4: ptr32
	T_4 (in SEQ(ds, 0x1234) : ptr32)
	T_6 (in Mem0[ds:0x0100:ptr32] : ptr32)
Eq_5: (memptr T_2 (struct (0 T_6 t0000)))
	T_5 (in 0x0100 : word16)
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr (struct))
  OrigDataType: (ptr (struct))
T_2: (in ds : selector)
  Class: Eq_2
  DataType: (ptr (segment (100 T_6 t0100)))
  OrigDataType: (ptr (segment (100 T_6 t0100)))
T_3: (in 0x1234 : word16)
  Class: Eq_3
  DataType: word16
  OrigDataType: word16
T_4: (in SEQ(ds, 0x1234) : ptr32)
  Class: Eq_4
  DataType: ptr32
  OrigDataType: ptr32
T_5: (in 0x0100 : word16)
  Class: Eq_5
  DataType: (memptr T_2 (struct (0 T_6 t0000)))
  OrigDataType: (memptr T_2 (struct (0 T_6 t0000)))
T_6: (in Mem0[ds:0x0100:ptr32] : ptr32)
  Class: Eq_4
  DataType: ptr32
  OrigDataType: ptr32
