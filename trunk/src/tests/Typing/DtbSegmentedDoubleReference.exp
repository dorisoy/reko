// SegmentedDoubleReferenceMock
// Return size: 0
void SegmentedDoubleReferenceMock()
SegmentedDoubleReferenceMock_entry:
	// succ:  l1
l1:
	Mem3[ds:0x0100:word16] = Mem0[ds:Mem0[ds:0x0300:word16] + 0x0004:word16]
	Mem5[ds:0x0102:word16] = Mem3[ds:Mem3[ds:0x0300:word16] + 0x0004:word16]
SegmentedDoubleReferenceMock_exit:

// Equivalence classes ////////////
Eq_1: (ptr (struct))
	globals_t (in globals : (ptr (struct "Globals")))
Eq_2: (ptr (segment (100 T_9 t0100) (102 T_15 t0102) (300 T_4 t0300)))
	T_2 (in ds : word16)
Eq_3: (memptr T_2 (struct (0 T_4 t0000)))
	T_3 (in 0x0300 : word16)
Eq_4: (memptr T_2 (struct (4 T_7 t0004)))
	T_4 (in Mem0[ds:0x0300:word16] : word16)
	T_10 (in Mem3[ds:0x0300:word16] : word16)
Eq_5: word16
	T_5 (in 0x0004 : word16)
Eq_6: word16
	T_6 (in Mem0[ds:0x0300:word16] + 0x0004 : word16)
Eq_7: word16
	T_7 (in Mem0[ds:Mem0[ds:0x0300:word16] + 0x0004:word16] : word16)
	T_9 (in Mem3[ds:0x0100:word16] : word16)
	T_13 (in Mem3[ds:Mem3[ds:0x0300:word16] + 0x0004:word16] : word16)
	T_15 (in Mem5[ds:0x0102:word16] : word16)
Eq_8: (memptr T_2 (struct (0 T_9 t0000)))
	T_8 (in 0x0100 : word16)
Eq_11: word16
	T_11 (in 0x0004 : word16)
Eq_12: word16
	T_12 (in Mem3[ds:0x0300:word16] + 0x0004 : word16)
Eq_14: (memptr T_2 (struct (0 T_15 t0000)))
	T_14 (in 0x0102 : word16)
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr (struct))
  OrigDataType: (ptr (struct))
T_2: (in ds : word16)
  Class: Eq_2
  DataType: (ptr (segment (100 T_9 t0100) (102 T_15 t0102) (300 T_4 t0300)))
  OrigDataType: (ptr (segment (100 T_9 t0100) (102 T_15 t0102) (300 T_4 t0300)))
T_3: (in 0x0300 : word16)
  Class: Eq_3
  DataType: (memptr T_2 (struct (0 T_4 t0000)))
  OrigDataType: (memptr T_2 (struct (0 T_4 t0000)))
T_4: (in Mem0[ds:0x0300:word16] : word16)
  Class: Eq_4
  DataType: (memptr T_2 (struct (4 T_7 t0004)))
  OrigDataType: (memptr T_2 (struct (4 T_7 t0004)))
T_5: (in 0x0004 : word16)
  Class: Eq_5
  DataType: word16
  OrigDataType: word16
T_6: (in Mem0[ds:0x0300:word16] + 0x0004 : word16)
  Class: Eq_6
  DataType: word16
  OrigDataType: word16
T_7: (in Mem0[ds:Mem0[ds:0x0300:word16] + 0x0004:word16] : word16)
  Class: Eq_7
  DataType: word16
  OrigDataType: word16
T_8: (in 0x0100 : word16)
  Class: Eq_8
  DataType: (memptr T_2 (struct (0 T_9 t0000)))
  OrigDataType: (memptr T_2 (struct (0 T_9 t0000)))
T_9: (in Mem3[ds:0x0100:word16] : word16)
  Class: Eq_7
  DataType: word16
  OrigDataType: word16
T_10: (in Mem3[ds:0x0300:word16] : word16)
  Class: Eq_4
  DataType: (memptr T_2 (struct (4 T_7 t0004)))
  OrigDataType: (memptr T_2 (struct (4 T_13 t0004)))
T_11: (in 0x0004 : word16)
  Class: Eq_11
  DataType: word16
  OrigDataType: word16
T_12: (in Mem3[ds:0x0300:word16] + 0x0004 : word16)
  Class: Eq_12
  DataType: word16
  OrigDataType: word16
T_13: (in Mem3[ds:Mem3[ds:0x0300:word16] + 0x0004:word16] : word16)
  Class: Eq_7
  DataType: word16
  OrigDataType: word16
T_14: (in 0x0102 : word16)
  Class: Eq_14
  DataType: (memptr T_2 (struct (0 T_15 t0000)))
  OrigDataType: (memptr T_2 (struct (0 T_15 t0000)))
T_15: (in Mem5[ds:0x0102:word16] : word16)
  Class: Eq_7
  DataType: word16
  OrigDataType: word16
