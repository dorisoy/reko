// UnionIntRealMock
void UnionIntRealMock()
UnionIntRealMock_entry:
	// succ:  l1
l1:
	x = i;
	x = r;
	ptr->t0000 = i;
	ptr->t0004 = r;
	return
	// succ:  UnionIntRealMock_exit
UnionIntRealMock_exit:

// Equivalence classes ////////////
Eq_2: (union "Eq_2" (int32 u0) (real32 u1))
	T_2 (in i : int32)
	T_3 (in x : word32)
	T_4 (in r : real32)
	T_8 (in Mem0[ptr + 0x00000000:int32] : int32)
	T_11 (in Mem0[ptr + 0x00000004:real32] : real32)
Eq_5: (struct "Eq_5" (0 Eq_2 t0000) (4 Eq_2 t0004))
	T_5 (in ptr : word32)
// Type Variables ////////////
Globals: (in globals : ptr32)
  Class: Eq_1
  DataType: Eq_1
  OrigDataType: 
T_2: (in i : int32)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: int32
T_3: (in x : word32)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: word32
T_4: (in r : real32)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: real32
T_5: (in ptr : word32)
  Class: Eq_5
  DataType: (ptr Eq_5)
  OrigDataType: (ptr (struct (0 T_8 t0000) (4 T_11 t0004)))
T_6: (in 0x00000000 : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_7: (in ptr + 0x00000000 : word32)
  Class: Eq_7
  DataType: word32
  OrigDataType: word32
T_8: (in Mem0[ptr + 0x00000000:int32] : int32)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: int32
T_9: (in 0x00000004 : word32)
  Class: Eq_9
  DataType: word32
  OrigDataType: word32
T_10: (in ptr + 0x00000004 : word32)
  Class: Eq_10
  DataType: word32
  OrigDataType: word32
T_11: (in Mem0[ptr + 0x00000004:real32] : real32)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: real32
