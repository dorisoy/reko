// Before ///////
// proc1
// Return size: 0
void proc1()
proc1_entry:
	// succ:  l1
l1:
	Mem3[ds:0x0300:word16] = Mem0[ds:Mem0[ds:bx:word16]:word16]
	return
	// succ:  proc1_exit
proc1_exit:

// After ///////
// proc1
// Return size: 0
void proc1()
proc1_entry:
	// succ:  l1
l1:
	ds->w0300 = ds->*(ds->*bx);
	return
	// succ:  proc1_exit
proc1_exit:

// Equivalence classes ////////////
Eq_1: (struct "Eq_1")
	globals_t (in globals : (ptr (struct "Globals")))
Eq_2: (segment "Eq_2" (300 word16 w0300))
	T_2 (in ds : selector)
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr Eq_1)
  OrigDataType: (ptr (struct))
T_2: (in ds : selector)
  Class: Eq_2
  DataType: (ptr Eq_2)
  OrigDataType: (ptr (segment (300 T_9 t0300)))
T_3: (in bx : word16)
  Class: Eq_3
  DataType: (memptr (ptr Eq_2) (memptr (ptr Eq_2) word16))
  OrigDataType: (memptr T_2 (struct (0 T_6 t0000)))
T_4: (in 0x0000 : word16)
  Class: Eq_4
  DataType: word16
  OrigDataType: word16
T_5: (in bx + 0x0000 : word16)
  Class: Eq_5
  DataType: word16
  OrigDataType: word16
T_6: (in Mem0[ds:bx + 0x0000:word16] : word16)
  Class: Eq_6
  DataType: (memptr (ptr Eq_2) word16)
  OrigDataType: (memptr T_2 (struct (0 T_7 t0000)))
T_7: (in Mem0[ds:Mem0[ds:bx + 0x0000:word16]:word16] : word16)
  Class: Eq_7
  DataType: word16
  OrigDataType: word16
T_8: (in 0x0300 : word16)
  Class: Eq_8
  DataType: (memptr (ptr Eq_2) word16)
  OrigDataType: (memptr T_2 (struct (0 T_9 t0000)))
T_9: (in Mem3[ds:0x0300:word16] : word16)
  Class: Eq_7
  DataType: word16
  OrigDataType: word16
