// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 bx, selector ds)
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	word16 ax_12 = 0x0000
	// succ:  l0C00_0002
l0C00_0002:
	branch bx == 0x0000 l0C00_000D
	// succ:  l0C00_0006 l0C00_000D
l0C00_0006:
	ax_12 = ax_12 + 0x0001
	bx = Mem0[ds:bx + 0x0004:word16]
	goto l0C00_0002
	// succ:  l0C00_0002
l0C00_000D:
	Mem17[ds:0x0200:word16] = ax_12
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

globals_t (in globals : (ptr (struct "Globals")))
	trait_primitive((ptr (struct "Globals")))
T_2 (in ax_12 : word16)
	trait_primitive(word16)
	trait_equal(T_3)
	trait_primitive(word16)
	trait_primitive(word16)
	trait_primitive(word16)
	trait_primitive(word16)
	trait_equal(T_8)
T_3 (in 0x0000 : word16)
	trait_primitive(word16)
T_4 (in ds : selector)
	trait_primitive(selector)
	trait_mem(T_6, 200)
	trait_primitive(selector)
T_5 (in 0x0200 : word16)
	trait_primitive(word16)
	trait_mem(T_4:T_6, 0)
T_6 (in Mem17[ds:0x0200:word16] : word16)
	trait_primitive(word16)
	trait_equal(T_2)
T_7 (in 0x0001 : word16)
	trait_primitive(word16)
T_8 (in ax_12 + 0x0001 : word16)
	trait_primitive(word16)
T_9 (in bx : word16)
	trait_primitive(word16)
	trait_mem(T_4:T_12, 4)
	trait_primitive(word16)
	trait_primitive(word16)
	trait_equal(T_12)
	trait_primitive(word16)
	trait_equal(T_13)
T_10 (in 0x0004 : word16)
	trait_primitive(word16)
T_11 (in bx + 0x0004 : word16)
	trait_primitive(word16)
T_12 (in Mem0[ds:bx + 0x0004:word16] : word16)
	trait_primitive(word16)
T_13 (in 0x0000 : word16)
	trait_primitive(word16)
T_14 (in bx == 0x0000 : bool)
	trait_primitive(bool)
