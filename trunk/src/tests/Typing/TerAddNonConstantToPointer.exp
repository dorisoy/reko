// Before ///////
// proc1
// Return size: 0
void proc1()
proc1_entry:
	// succ:  l1
l1:
	Mem0[p:word16] = 0x0004
	Mem0[p + 0x0004:word16] = 0x0004
	p = p + i
proc1_exit:

// After ///////
// proc1
// Return size: 0
void proc1()
proc1_entry:
	// succ:  l1
l1:
	p->w0000 = 0x0004;
	p->w0004 = 0x0004;
	p = p + i;
proc1_exit:

// Equivalence classes ////////////
Eq_1: (struct "Eq_1")
	globals_t (in globals : (ptr (struct "Globals")))
Eq_3: (struct "Eq_3" (0 word16 w0000) (4 word16 w0004))
	T_3 (in p : word16)
	T_12 (in p + i : word16)
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr Eq_1)
  OrigDataType: (ptr (struct))
T_2: (in 0x0004 : word16)
  Class: Eq_2
  DataType: word16
  OrigDataType: word16
T_3: (in p : word16)
  Class: Eq_3
  DataType: (ptr Eq_3)
  OrigDataType: (ptr (struct (0 T_6 t0000) (4 T_10 t0004)))
T_4: (in 0x0000 : word16)
  Class: Eq_4
  DataType: word16
  OrigDataType: word16
T_5: (in p + 0x0000 : word16)
  Class: Eq_5
  DataType: word16
  OrigDataType: word16
T_6: (in Mem0[p + 0x0000:word16] : word16)
  Class: Eq_2
  DataType: word16
  OrigDataType: word16
T_7: (in 0x0004 : word16)
  Class: Eq_7
  DataType: word16
  OrigDataType: word16
T_8: (in 0x0004 : word16)
  Class: Eq_8
  DataType: word16
  OrigDataType: word16
T_9: (in p + 0x0004 : word16)
  Class: Eq_9
  DataType: word16
  OrigDataType: word16
T_10: (in Mem0[p + 0x0004:word16] : word16)
  Class: Eq_7
  DataType: word16
  OrigDataType: word16
T_11: (in i : word16)
  Class: Eq_11
  DataType: word16
  OrigDataType: word16
T_12: (in p + i : word16)
  Class: Eq_3
  DataType: (ptr Eq_3)
  OrigDataType: word16
