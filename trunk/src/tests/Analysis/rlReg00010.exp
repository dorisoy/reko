// fn0C00_0000 /////////////////////
	LiveOut:  
	MayUseIn:  bp si ds
	BypassIn: 
	Trashed:   SCZO ax cx dx bx bp si al cl dl bl ah ch dh bh
	Preserved:
// fn0C00_0000
void fn0C00_0000()
fn0C00_0000_entry:		// pred:
	// succ:  l0C00_0000
// DataOut: bp si ds
l0C00_0000:		// pred: fn0C00_0000_entry
	call fn0C00_0004 (depth: 2;)
	return
	// succ:  fn0C00_0000_exit
// DataOut:
fn0C00_0000_exit:		// pred: l0C00_0000
	// succ: 
// DataOut:
// fn0C00_0004 /////////////////////
	LiveOut:  
	MayUseIn:  bp si ds
	BypassIn: 
	Trashed:   SCZO ax cx dx bx bp si al cl dl bl ah ch dh bh
	Preserved:
// fn0C00_0004
void fn0C00_0004()
fn0C00_0004_entry:		// pred:
	// succ:  l0C00_0004
// DataOut: bp si ds
l0C00_0004:		// pred: fn0C00_0004_entry l0C00_0026
	al = Mem0[ds:si:byte]
	al = al >>u 0x01
	al = al >>u 0x01
	al = al >>u 0x01
	al = al >>u 0x01
	al = al + 0x30
	SCZO = cond(al - 0x39)
	branch Test(LE,SZO) l0C00_0016
	// succ:  l0C00_0014 l0C00_0016
// DataOut: bp si al ds
l0C00_0014:		// pred: l0C00_0004
	al = al + 0x07
	SCZO = cond(al)
	// succ:  l0C00_0016
// DataOut: bp si al ds
l0C00_0016:		// pred: l0C00_0004 l0C00_0014
	ah = Mem0[ds:si:byte]
	ah = ah & 0x0F
	C = false
	ah = ah + 0x30
	SCZO = cond(ah - 0x39)
	branch Test(LE,SZO) l0C00_0026
	// succ:  l0C00_0023 l0C00_0026
// DataOut: ax bp si al ah ds
l0C00_0023:		// pred: l0C00_0016
	ah = ah + 0x07
	SCZO = cond(ah)
	// succ:  l0C00_0026
// DataOut: ax bp si ds
l0C00_0026:		// pred: l0C00_0016 l0C00_0023
	Mem0[ds:0x5427:word16] = ax
	ah = 0x40
	bx = Mem0[ds:0x5424:word16]
	cx = 0x0004
	dx = 0x5427
	C = msdos_write_file(bx, cx, ds_dx, &ax)
	si = si + 0x0001
	bp = bp - 0x0001
	SZO = cond(bp)
	branch Test(NE,Z) l0C00_0004
	// succ:  l0C00_003C l0C00_0004
// DataOut: bp si ds
l0C00_003C:		// pred: l0C00_0026
	return
	// succ:  fn0C00_0004_exit
// DataOut:
fn0C00_0004_exit:		// pred: l0C00_003C
	// succ: 
// DataOut:
