fn0C00_0000
	LiveOut:  
	MayUseIn:  bp si ds
	BypassIn: 
	Trashed:   SCZO ax cx dx bx bp si al cl dl bl ah ch dh bh
	Preserved:
// fn0C00_0000
void fn0C00_0000()
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
// DataOut: bp si ds
l0C00_0000:		// block 1, pred: 0
	call fn0C00_0004 (depth: 0;)
	return
	// succ:  2
// DataOut:
fn0C00_0000_exit:		// block 2, pred: 1
	// succ: 
// DataOut:
fn0C00_0004
	LiveOut:  
	MayUseIn:  bp si ds
	BypassIn: 
	Trashed:   SCZO ax cx dx bx bp si al cl dl bl ah ch dh bh
	Preserved:
// fn0C00_0004
void fn0C00_0004()
fn0C00_0004_entry:		// block 0, pred:
	// succ:  1
// DataOut: bp si ds
l0C00_0004:		// block 1, pred: 0 5
	al = Mem0[ds:si:byte]
	al = al >>u 0x01
	al = al >>u 0x01
	al = al >>u 0x01
	al = al >>u 0x01
	al = al + 0x30
	SCZO = cond(al - 0x39)
	branch Test(LE,SZO)
	// succ:  2 3
// DataOut: bp si al ds
l0C00_0014:		// block 2, pred: 1
	al = al + 0x07
	SCZO = cond(al)
	// succ:  3
// DataOut: bp si al ds
l0C00_0016:		// block 3, pred: 2 1
	ah = Mem0[ds:si:byte]
	ah = ah & 0x0F
	C = false
	ah = ah + 0x30
	SCZO = cond(ah - 0x39)
	branch Test(LE,SZO)
	// succ:  4 5
// DataOut: ax bp si al ah ds
l0C00_0023:		// block 4, pred: 3
	ah = ah + 0x07
	SCZO = cond(ah)
	// succ:  5
// DataOut: ax bp si ds
l0C00_0026:		// block 5, pred: 4 3
	store(Mem0[ds:0x5427:word16]) = ax
	ah = 0x40
	bx = Mem0[ds:0x5424:word16]
	cx = 0x0004
	dx = 0x5427
	C = msdos_write_file(bx, cx, ds_dx, &ax)
	si = si + 0x0001
	bp = bp - 0x0001
	SZO = cond(bp)
	branch Test(NE,Z)
	// succ:  6 1
// DataOut: bp si ds
l0C00_003C:		// block 6, pred: 5
	return
	// succ:  7
// DataOut:
fn0C00_0004_exit:		// block 7, pred: 6
	// succ: 
// DataOut:
