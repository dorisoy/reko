Mem0:Global memory
    def:  def Mem0
    uses: eax_5 = Mem0[0x10003420:word32]
fp:Temporary
eax:Register eax
dwLoc08:Local -0008
ax:Register ax
eax_5: orig: eax
    def:  eax_5 = Mem0[0x10003420:word32]
    uses: ax_7 = fn10000017(eax_5)
dwLoc08_6: orig: dwLoc08
ax_7: orig: ax
    def:  ax_7 = fn10000017(eax_5)
    uses: Mem8[0x10003428:word16] = ax_7
Mem8: orig: Mem0
    def:  Mem8[0x10003428:word16] = ax_7
// fn10000000
void fn10000000()
fn10000000_entry:		// pred:
	def Mem0
	// succ:  l10000000
l10000000:		// pred: fn10000000_entry
	eax_5 = Mem0[0x10003420:word32]
	ax_7 = fn10000017(eax_5)
	Mem8[0x10003428:word16] = ax_7
	return
	// succ:  fn10000000_exit
fn10000000_exit:		// pred: l10000000
	// succ: 

Mem0:Global memory
    def:  def Mem0
    uses: edx_26 = (int32) Mem0[dwArg00 + eax_24:byte]
fp:Temporary
ebp:Register ebp
dwLoc08:Local -0008
ecx:Register ecx
dwLoc0C:Local -000C
wLoc0C:Local -000C
dwArg00:Stack +0000
    def:  def dwArg00
    uses: edx_26 = (int32) Mem0[dwArg00 + eax_24:byte]
          branch dwArg00 != 0x00000000 l1000002F
SCZO:Flags
Z:Flags
eax:Register eax
edx:Register edx
C:Flags
ax:Register ax
SO:Flags
cx:Register cx
dwLoc08_16: orig: dwLoc08
dwLoc0C_17: orig: dwLoc0C
wLoc0C_18: orig: wLoc0C
    def:  wLoc0C_18 = 0x0000
    uses: wLoc0C_23 = PHI(wLoc0C_18, wLoc0C_36)
SCZO_19: orig: SCZO
Z_20: orig: Z
cx_21: orig: cx
SO_22: orig: SO
wLoc0C_23: orig: wLoc0C
    def:  wLoc0C_23 = PHI(wLoc0C_18, wLoc0C_36)
    uses: eax_24 = (int32) wLoc0C_23
          eax_30 = (int32) wLoc0C_23
          ax_40 = wLoc0C_23
          cx_34 = wLoc0C_23 + 0x0001
eax_24: orig: eax
    def:  eax_24 = (int32) wLoc0C_23
    uses: edx_26 = (int32) Mem0[dwArg00 + eax_24:byte]
ecx_25: orig: ecx
edx_26: orig: edx
    def:  edx_26 = (int32) Mem0[dwArg00 + eax_24:byte]
    uses: branch edx_26 == 0x00000000 l1000005A
SCZO_27: orig: SCZO
Z_28: orig: Z
C_29: orig: C
eax_30: orig: eax
    def:  eax_30 = (int32) wLoc0C_23
    uses: branch eax_30 >= 0x00007FFF l1000005A
SCZO_31: orig: SCZO
SO_32: orig: SO
cx_33: orig: cx
cx_34: orig: cx
    def:  cx_34 = wLoc0C_23 + 0x0001
    uses: wLoc0C_36 = cx_34
SCZO_35: orig: SCZO
wLoc0C_36: orig: wLoc0C
    def:  wLoc0C_36 = cx_34
    uses: wLoc0C_23 = PHI(wLoc0C_18, wLoc0C_36)
SO_37: orig: SO
eax_38: orig: eax
SCZO_39: orig: SCZO
ax_40: orig: ax
    def:  ax_40 = wLoc0C_23
    uses: ax_47 = PHI(ax_40, ax_42)
eax_41: orig: eax
ax_42: orig: ax
    def:  ax_42 = 0x0000
    uses: ax_47 = PHI(ax_40, ax_42)
eax_43: orig: eax
SCZO_44: orig: SCZO
cx_45: orig: cx
SO_46: orig: SO
ax_47: orig: ax
    def:  ax_47 = PHI(ax_40, ax_42)
    uses: return ax_47
C_48: orig: C
edx_49: orig: edx
eax_50: orig: eax
Z_51: orig: Z
SCZO_52: orig: SCZO
wLoc0C_53: orig: wLoc0C
ecx_54: orig: ecx
ebp_55: orig: ebp
// fn10000017
word16 fn10000017(word32 dwArg00)
fn10000017_entry:		// pred:
	def Mem0
	def dwArg00
	// succ:  l10000017
l10000017:		// pred: fn10000017_entry
	wLoc0C_18 = 0x0000
	branch dwArg00 != 0x00000000 l1000002F
	// succ:  l10000027 l1000002F
l10000027:		// pred: l10000017
	ax_42 = 0x0000
	// succ:  l1000005E
l1000005E:		// pred: l1000005A l10000027
	ax_47 = PHI(ax_40, ax_42)
	return ax_47
	// succ:  fn10000017_exit
fn10000017_exit:		// pred: l1000005E
	// succ: 
l1000002F:		// pred: l10000017 l10000049
	wLoc0C_23 = PHI(wLoc0C_18, wLoc0C_36)
	eax_24 = (int32) wLoc0C_23
	edx_26 = (int32) Mem0[dwArg00 + eax_24:byte]
	branch edx_26 == 0x00000000 l1000005A
	// succ:  l1000003E l1000005A
l1000003E:		// pred: l1000002F
	eax_30 = (int32) wLoc0C_23
	branch eax_30 >= 0x00007FFF l1000005A
	// succ:  l10000049 l1000005A
l10000049:		// pred: l1000003E
	cx_34 = wLoc0C_23 + 0x0001
	wLoc0C_36 = cx_34
	// succ:  l1000002F
l1000005A:		// pred: l1000002F l1000003E
	ax_40 = wLoc0C_23
	// succ:  l1000005E

