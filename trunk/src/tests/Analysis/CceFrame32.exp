Mem0:Global memory
    def:  def Mem0
    uses: eax_7 = Mem0[0x10003420:word32]
fp:Temporary
esp:esp
eax:eax
SCZO:Flags
ax:ax
dwLoc04:Local -0004
eax_7: orig: eax
    def:  eax_7 = Mem0[0x10003420:word32]
    uses: ax_10 = fn10000017(eax_7)
esp_8: orig: esp
dwLoc04_9: orig: dwLoc04
ax_10: orig: ax
    def:  ax_10 = fn10000017(eax_7)
    uses: Mem13[0x10003428:word16] = ax_10
esp_11: orig: esp
SCZO_12: orig: SCZO
Mem13: orig: Mem0
    def:  Mem13[0x10003428:word16] = ax_10
// fn10000000
void fn10000000()
fn10000000_entry:
	def Mem0
	// succ:  l10000000
l10000000:
	eax_7 = Mem0[0x10003420:word32]
	ax_10 = fn10000017(eax_7)
	Mem13[0x10003428:word16] = ax_10
	return
	// succ:  fn10000000_exit
fn10000000_exit: 

Mem0:Global memory
    def:  def Mem0
    uses: edx_50 = (int32) Mem0[dwArg04 + eax_48:byte]
fp:Temporary
    def:  def fp
    uses: branch Mem0[fp + 0x00000004:word32] != 0x00000000 l1000002F
esp:esp
ebp:ebp
ecx:ecx
SCZO:Flags
Z:Flags
ax:ax
SZO:Flags
C:Flags
eax:eax
edx:edx
SO:Flags
cx:cx
dwLoc04:Local -0004
dwLoc08:Local -0008
wLoc08:Local -0008
dwArg04:Stack +0004
    def:  def dwArg04
    uses: edx_50 = (int32) Mem0[dwArg04 + eax_48:byte]
esp_18: orig: esp
dwLoc04_19: orig: dwLoc04
ebp_20: orig: ebp
esp_21: orig: esp
dwLoc08_22: orig: dwLoc08
wLoc08_23: orig: wLoc08
    def:  wLoc08_23 = 0x0000
    uses: wLoc08_44 = PHI(wLoc08_23, wLoc08_65)
SCZO_24: orig: SCZO
Z_25: orig: Z
wLoc08_26: orig: wLoc08
cx_27: orig: cx
SO_28: orig: SO
edx_29: orig: edx
eax_30: orig: eax
C_31: orig: C
SZO_32: orig: SZO
ax_33: orig: ax
    def:  ax_33 = PHI(ax_40, ax_57)
    uses: return ax_33
Z_34: orig: Z
SCZO_35: orig: SCZO
ecx_36: orig: ecx
esp_37: orig: esp
ebp_38: orig: ebp
esp_39: orig: esp
ax_40: orig: ax
    def:  ax_40 = 0x0000
    uses: ax_33 = PHI(ax_40, ax_57)
eax_41: orig: eax
SZO_42: orig: SZO
C_43: orig: C
wLoc08_44: orig: wLoc08
    def:  wLoc08_44 = PHI(wLoc08_23, wLoc08_65)
    uses: eax_48 = (int32) wLoc08_44
          ax_57 = wLoc08_44
          eax_59 = (int32) wLoc08_44
          wLoc08_65 = wLoc08_44 + 0x0001
cx_45: orig: cx
SO_46: orig: SO
SCZO_47: orig: SCZO
eax_48: orig: eax
    def:  eax_48 = (int32) wLoc08_44
    uses: edx_50 = (int32) Mem0[dwArg04 + eax_48:byte]
ecx_49: orig: ecx
edx_50: orig: edx
    def:  edx_50 = (int32) Mem0[dwArg04 + eax_48:byte]
    uses: branch edx_50 == 0x00000000 l1000005A
SZO_51: orig: SZO
Z_52: orig: Z
C_53: orig: C
SO_54: orig: SO
eax_55: orig: eax
SCZO_56: orig: SCZO
ax_57: orig: ax
    def:  ax_57 = wLoc08_44
    uses: ax_33 = PHI(ax_40, ax_57)
eax_58: orig: eax
eax_59: orig: eax
    def:  eax_59 = (int32) wLoc08_44
    uses: branch eax_59 >= 0x00007FFF l1000005A
SCZO_60: orig: SCZO
SO_61: orig: SO
cx_62: orig: cx
cx_63: orig: cx
SCZO_64: orig: SCZO
wLoc08_65: orig: wLoc08
    def:  wLoc08_65 = wLoc08_44 + 0x0001
    uses: wLoc08_44 = PHI(wLoc08_23, wLoc08_65)

// fn10000017
word16 fn10000017(word32 dwArg04)
fn10000017_entry:
	def Mem0
	def fp
	def dwArg04
	// succ:  l10000017
l10000017:
	wLoc08_23 = 0x0000
	branch dwArg04 != 0x00000000 l1000002F
	// succ:  l10000027 l1000002F
l10000027:
	ax_40 = 0x0000
	goto l1000005E
	// succ:  l1000005E
l1000002F:
	wLoc08_44 = PHI(wLoc08_23, wLoc08_65)
	eax_48 = (int32) wLoc08_44
	edx_50 = (int32) Mem0[dwArg04 + eax_48:byte]
	branch edx_50 == 0x00000000 l1000005A
	// succ:  l1000003E l1000005A
l1000003E:
	eax_59 = (int32) wLoc08_44
	branch eax_59 >= 0x00007FFF l1000005A
	// succ:  l10000049 l1000005A
l10000049:
	wLoc08_65 = wLoc08_44 + 0x0001
	goto l1000002F
	// succ:  l1000002F
l1000005A:
	ax_57 = wLoc08_44
	// succ:  l1000005E
l1000005E:
	ax_33 = PHI(ax_40, ax_57)
	return ax_33
	// succ:  fn10000017_exit
fn10000017_exit:
 

