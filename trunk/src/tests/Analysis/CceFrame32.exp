Mem0: Mem0:Global memory, def: {def Mem0}, uses: {eax_5 = Mem0[0x10003420:word32]}
fp: fp:Temporary
eax: eax:Register eax
dwLoc08: dwLoc08:Local -0008
ax: ax:Register ax
eax_5: orig: eax, def: {eax_5 = Mem0[0x10003420:word32]}, uses: {dwLoc08_6 = eax_5}
dwLoc08_6: orig: dwLoc08, def: {dwLoc08_6 = eax_5}, uses: {ax_7 = fn10000017(dwLoc08_6)}
ax_7: orig: ax, def: {ax_7 = fn10000017(dwLoc08_6)}, uses: {store(Mem8[0x10003428:word16]) = ax_7}
Mem8: orig: Mem0, def: {store(Mem8[0x10003428:word16]) = ax_7}
// fn10000000
void fn10000000()
fn10000000_entry:		// block 0, pred:
	def Mem0
	// succ:  1
l10000000:		// block 1, pred: 0
	eax_5 = Mem0[0x10003420:word32]
	dwLoc08_6 = eax_5
	ax_7 = fn10000017(dwLoc08_6)
	store(Mem8[0x10003428:word16]) = ax_7
	return
	// succ:  2
fn10000000_exit:		// block 2, pred: 1
	// succ: 

Mem0: Mem0:Global memory, def: {def Mem0}, uses: {edx_26 = (int32) Mem0[ecx_25 + eax_24:byte]}
fp: fp:Temporary
ebp: ebp:Register ebp
dwLoc08: dwLoc08:Local -0008
ecx: ecx:Register ecx
dwLoc0C: dwLoc0C:Local -000C
wLoc0C: wLoc0C:Local -000C
dwArg00: dwArg00:Stack +0000, def: {def dwArg00}, uses: {ecx_25 = dwArg00}{branch dwArg00 != 0x00000000}
SCZO: SCZO:Flags
Z: Z:Flags
ax: ax:Register ax
eax: eax:Register eax
edx: edx:Register edx
C: C:Flags
SO: SO:Flags
cx: cx:Register cx
dwLoc08_16: orig: dwLoc08
dwLoc0C_17: orig: dwLoc0C
wLoc0C_18: orig: wLoc0C, def: {wLoc0C_18 = 0x0000}, uses: {wLoc0C_23 = PHI(wLoc0C_18, wLoc0C_36)}
SCZO_19: orig: SCZO
Z_20: orig: Z
cx_21: orig: cx
SO_22: orig: SO
wLoc0C_23: orig: wLoc0C, def: {wLoc0C_23 = PHI(wLoc0C_18, wLoc0C_36)}, uses: {eax_24 = (int32) wLoc0C_23}{eax_30 = (int32) wLoc0C_23}{cx_33 = wLoc0C_23}{ax_40 = wLoc0C_23}
eax_24: orig: eax, def: {eax_24 = (int32) wLoc0C_23}, uses: {edx_26 = (int32) Mem0[ecx_25 + eax_24:byte]}
ecx_25: orig: ecx, def: {ecx_25 = dwArg00}, uses: {edx_26 = (int32) Mem0[ecx_25 + eax_24:byte]}
edx_26: orig: edx, def: {edx_26 = (int32) Mem0[ecx_25 + eax_24:byte]}, uses: {branch edx_26 == 0x00000000}
SCZO_27: orig: SCZO
Z_28: orig: Z
C_29: orig: C
eax_30: orig: eax, def: {eax_30 = (int32) wLoc0C_23}, uses: {branch eax_30 >= 0x00007FFF}
SCZO_31: orig: SCZO
SO_32: orig: SO
cx_33: orig: cx, def: {cx_33 = wLoc0C_23}, uses: {cx_34 = cx_33 + 0x0001}
cx_34: orig: cx, def: {cx_34 = cx_33 + 0x0001}, uses: {wLoc0C_36 = cx_34}
SCZO_35: orig: SCZO
wLoc0C_36: orig: wLoc0C, def: {wLoc0C_36 = cx_34}, uses: {wLoc0C_23 = PHI(wLoc0C_18, wLoc0C_36)}
SO_37: orig: SO
eax_38: orig: eax
SCZO_39: orig: SCZO
ax_40: orig: ax, def: {ax_40 = wLoc0C_23}, uses: {ax_50 = PHI(ax_42, ax_40)}
eax_41: orig: eax
ax_42: orig: ax, def: {ax_42 = 0x0000}, uses: {ax_50 = PHI(ax_42, ax_40)}
eax_43: orig: eax
SCZO_44: orig: SCZO
cx_45: orig: cx
SO_46: orig: SO
C_47: orig: C
edx_48: orig: edx
eax_49: orig: eax
ax_50: orig: ax, def: {ax_50 = PHI(ax_42, ax_40)}, uses: {return ax_50}
Z_51: orig: Z
SCZO_52: orig: SCZO
wLoc0C_53: orig: wLoc0C
ecx_54: orig: ecx
ebp_55: orig: ebp
// fn10000017
word16 fn10000017(word32 dwArg00)
fn10000017_entry:		// block 0, pred:
	def Mem0
	def dwArg00
	// succ:  1
l10000017:		// block 1, pred: 0
	wLoc0C_18 = 0x0000
	branch dwArg00 != 0x00000000
	// succ:  6 2
l1000002F:		// block 2, pred: 1 5
	wLoc0C_23 = PHI(wLoc0C_18, wLoc0C_36)
	eax_24 = (int32) wLoc0C_23
	ecx_25 = dwArg00
	edx_26 = (int32) Mem0[ecx_25 + eax_24:byte]
	branch edx_26 == 0x00000000
	// succ:  3 4
l1000003E:		// block 3, pred: 2
	eax_30 = (int32) wLoc0C_23
	branch eax_30 >= 0x00007FFF
	// succ:  5 4
l1000005A:		// block 4, pred: 3 2
	ax_40 = wLoc0C_23
	// succ:  7
l10000049:		// block 5, pred: 3
	cx_33 = wLoc0C_23
	cx_34 = cx_33 + 0x0001
	wLoc0C_36 = cx_34
	// succ:  2
l10000027:		// block 6, pred: 1
	ax_42 = 0x0000
	// succ:  7
l1000005E:		// block 7, pred: 6 4
	ax_50 = PHI(ax_42, ax_40)
	return ax_50
	// succ:  8
fn10000017_exit:		// block 8, pred: 7
	// succ: 

