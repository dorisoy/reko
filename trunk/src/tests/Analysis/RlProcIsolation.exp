// fn0C00_0000 /////////////////////
	LiveOut:  
	MayUseIn:  di ds
	BypassIn: 
	Trashed:   SCZO ax al ah
	Preserved: di
// fn0C00_0000
void fn0C00_0000()
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
// DataOut: di ds
l0C00_0000:		// block 1, pred: 0
	call fn0C00_000F (depth: 2;)
	wLoc04 = di
	ax = 0x0100
	call fn0C00_0014 (depth: 4;)
	store(Mem0[ds:0x0300:word16]) = ax
	di = wLoc04
	call fn0C00_000F (depth: 2;)
	return
	// succ:  2
// DataOut:
fn0C00_0000_exit:		// block 2, pred: 1
	// succ: 
// DataOut:
// fn0C00_000F /////////////////////
	LiveOut:   di ds
	MayUseIn:  di ds
	BypassIn: 
	Trashed:  
	Preserved:
// fn0C00_000F
void fn0C00_000F()
fn0C00_000F_entry:		// block 0, pred:
	// succ:  1
// DataOut: di ds
l0C00_000F:		// block 1, pred: 0
	store(Mem0[ds:di:word16]) = 0x0000
	return
	// succ:  2
// DataOut: di ds
fn0C00_000F_exit:		// block 2, pred: 1
	// succ: 
// DataOut: di ds
// fn0C00_0014 /////////////////////
	LiveOut:   ax ds
	MayUseIn:  ax
	BypassIn: 
	Trashed:   SCZO ax di al ah
	Preserved:
// fn0C00_0014
void fn0C00_0014()
fn0C00_0014_entry:		// block 0, pred:
	// succ:  1
// DataOut: ax ds
l0C00_0014:		// block 1, pred: 0
	di = 0x0000
	SCZO = cond(di)
	ax = ax - 0x0001
	SZO = cond(ax)
	return
	// succ:  2
// DataOut: ax ds
fn0C00_0014_exit:		// block 2, pred: 1
	// succ: 
// DataOut: ax ds
