// void fn0C00_0000(Register selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: 0
// MayUse:  ds
// LiveOut:
// Trashed: bx bl bh
// Preserved:
// fn0C00_0000
void fn0C00_0000(selector ds)
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	fn0C00_0010(ds, 0x0300, 0x0320)
	fn0C00_0037(ds)
	return
	// succ:  2
fn0C00_0000_exit:		// block 2, pred: 1
	// succ: 

// void fn0C00_0010(Register selector ds, Stack word16 wArg00, Stack word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: 0
// MayUse:  ds
// LiveOut:
// Trashed: bx bl bh
// Preserved: bp
// Stack args: Stack +0000(16) Stack +0002(16)
// fn0C00_0010
void fn0C00_0010(selector ds, word16 wArg00, word16 wArg02)
fn0C00_0010_entry:		// block 0, pred:
	// succ:  1
l0C00_0010:		// block 1, pred: 0
	real64 rLoc1_12 = Mem0[ds:wArg00:real64]
	real64 rLoc2_14 = Mem0[ds:wArg00 + 0x0008:real64]
	real64 rLoc2_17 = Mem0[ds:wArg00 + 0x0010:real64]
	store(Mem21[ds:wArg02:real64]) = rLoc1_12 *s rLoc1_12 + rLoc2_14 *s rLoc2_14 + rLoc2_17 *s rLoc2_17
	store(Mem23[ds:wArg02 + 0x0028:real64]) = (real64) Mem21[ds:wArg02 + 0x0020:word16]
	return
	// succ:  2
fn0C00_0010_exit:		// block 2, pred: 1
	// succ: 

// void fn0C00_0037(Register selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: 0
// MayUse:  ds
// LiveOut:
// Trashed:
// Preserved:
// fn0C00_0037
void fn0C00_0037(selector ds)
fn0C00_0037_entry:		// block 0, pred:
	// succ:  1
l0C00_0037:		// block 1, pred: 0
	store(Mem5[ds:0x0400:real64]) = 0
	store(Mem7[ds:0x0408:word32]) = (word32) 1
	return
	// succ:  2
fn0C00_0037_exit:		// block 2, pred: 1
	// succ: 

