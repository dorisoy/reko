fn0C00_0000
	LiveOut:  
	MayUseIn:  ds
	BypassIn: 
	Trashed:   SCZO ax bx al bl ah bh es
	Preserved: bp
// fn0C00_0000
void fn0C00_0000()
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
// DataOut: ds
// LocalsOut: Stack +0004(32)

l0C00_0000:		// block 1, pred: 0
	es_bx = dwArg04
	wLoc04 = es
	wLoc06 = bx
	call fn0C00_0020 (depth: 6;)
	wLoc04 = ax
	es_bx = dwArg04
	wLoc06 = es
	wLoc08 = bx
	call fn0C00_002E (depth: 8;)
	store(Mem0[ds:0x0200:word16]) = ax
	return
	// succ:  2
// DataOut:
fn0C00_0000_exit:		// block 2, pred: 1
	// succ: 
// DataOut:
fn0C00_0020
	LiveOut:   ax ds
	MayUseIn: 
	BypassIn: 
	Trashed:   ax bx al bl ah bh es
	Preserved: bp
// fn0C00_0020
void fn0C00_0020()
fn0C00_0020_entry:		// block 0, pred:
	// succ:  1
// DataOut: ds
// LocalsOut: Stack +0002(32)

l0C00_0020:		// block 1, pred: 0
	es_bx = dwArg02
	ax = Mem0[es:bx + 0x0004:word16]
	return
	// succ:  2
// DataOut: ax ds
fn0C00_0020_exit:		// block 2, pred: 1
	// succ: 
// DataOut: ax ds
fn0C00_002E
	LiveOut:   ax ds
	MayUseIn: 
	BypassIn: 
	Trashed:   SCZO ax bx al bl ah bh es
	Preserved: bp
// fn0C00_002E
void fn0C00_002E()
fn0C00_002E_entry:		// block 0, pred:
	// succ:  1
// DataOut: ds
// LocalsOut: Stack +0002(32) Stack +0006(16)

l0C00_002E:		// block 1, pred: 0
	es_bx = dwArg02
	ax = wArg06
	ax = ax + Mem0[es:bx + 0x0006:word16]
	SCZO = cond(ax)
	return
	// succ:  2
// DataOut: ax ds
fn0C00_002E_exit:		// block 2, pred: 1
	// succ: 
// DataOut: ax ds
