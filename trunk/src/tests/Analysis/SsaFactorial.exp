Mem0:Global memory
    def:  def Mem0
fp:Temporary
    def:  def fp
sp:Register sp
    def:  def sp
    uses: sp_9 = sp - 0x0002
cx:Register cx
    def:  def cx
ss:Register ss
    def:  def ss
    uses: store(Mem10[ss:sp_9:word16]) = cx_8
          call fn0C00_000F (retsize: 2;)
SCZO:Flags
    def:  def SCZO
    uses: call fn0C00_000F (retsize: 2;)
ax:Register ax
    def:  def ax
    uses: call fn0C00_000F (retsize: 2;)
          store(Mem13[ds:0x0064:word16]) = ax
ds:Register ds
    def:  def ds
    uses: call fn0C00_000F (retsize: 2;)
          store(Mem13[ds:0x0064:word16]) = ax
cx_8: orig: cx
    def:  cx_8 = 0x0064
    uses: store(Mem10[ss:sp_9:word16]) = cx_8
          call fn0C00_000F (retsize: 2;)
sp_9: orig: sp
    def:  sp_9 = sp - 0x0002
    uses: store(Mem10[ss:sp_9:word16]) = cx_8
          call fn0C00_000F (retsize: 2;)
          sp_11 = sp_9 + 0x0002
Mem10: orig: Mem0
    def:  store(Mem10[ss:sp_9:word16]) = cx_8
sp_11: orig: sp
    def:  sp_11 = sp_9 + 0x0002
    uses: SCZO_12 = cond(sp_11)
SCZO_12: orig: SCZO
    def:  SCZO_12 = cond(sp_11)
Mem13: orig: Mem0
    def:  store(Mem13[ds:0x0064:word16]) = ax
// fn0C00_0000
void fn0C00_0000()
fn0C00_0000_entry:
	def Mem0
	def fp
	def sp
	def cx
	def ss
	def SCZO
	def ax
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	cx_8 = 0x0064
	sp_9 = sp - 0x0002
	store(Mem10[ss:sp_9:word16]) = cx_8
	call fn0C00_000F (retsize: 2;)
	sp_11 = sp_9 + 0x0002
	SCZO_12 = cond(sp_11)
	store(Mem13[ds:0x0064:word16]) = ax
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

Mem0:Global memory
    def:  def Mem0
fp:Temporary
    def:  def fp
sp:Register sp
    def:  def sp
    uses: sp_11 = sp - 0x0002
bp:Register bp
    def:  def bp
    uses: store(Mem12[ss:sp_11:word16]) = bp
ss:Register ss
    def:  def ss
    uses: store(Mem12[ss:sp_11:word16]) = bp
          ax_14 = Mem12[ss:bp_13 + 0x0004:word16]
          store(Mem32[ss:sp_31:word16]) = ax_15
          call fn0C00_000F (retsize: 2;)
          dx_37 = Mem32[ss:bp_13 + 0x0004:word16]
          ss_26 = PHI(ss, ss)
          ss_26 = PHI(ss, ss)
ax:Register ax
    def:  def ax
SZO:Flags
    def:  def SZO
Z:Flags
    def:  def Z
dx:Register dx
    def:  def dx
    uses: dx_ax_16 = SEQ(dx, ax_15) (alias)
          call fn0C00_000F (retsize: 2;)
          dx_ax_45 = SEQ(dx, ax_44) (alias)
          dx_22 = PHI(dx_40, dx)
dx_ax:Sequence dx:ax
    def:  def dx_ax
SCZO:Flags
    def:  def SCZO
sp_11: orig: sp
    def:  sp_11 = sp - 0x0002
    uses: store(Mem12[ss:sp_11:word16]) = bp
          bp_13 = sp_11
          sp_31 = sp_11 - 0x0002
          sp_27 = PHI(sp_35, sp_11)
Mem12: orig: Mem0
    def:  store(Mem12[ss:sp_11:word16]) = bp
    uses: ax_14 = Mem12[ss:bp_13 + 0x0004:word16]
          Mem28 = PHI(Mem32, Mem12)
bp_13: orig: bp
    def:  bp_13 = sp_11
    uses: ax_14 = Mem12[ss:bp_13 + 0x0004:word16]
          call fn0C00_000F (retsize: 2;)
          dx_37 = Mem32[ss:bp_13 + 0x0004:word16]
ax_14: orig: ax
    def:  ax_14 = Mem12[ss:bp_13 + 0x0004:word16]
    uses: ax_15 = ax_14 - 0x0001
ax_15: orig: ax
    def:  ax_15 = ax_14 - 0x0001
    uses: dx_ax_16 = SEQ(dx, ax_15) (alias)
          SZO_17 = cond(ax_15)
          store(Mem32[ss:sp_31:word16]) = ax_15
          call fn0C00_000F (retsize: 2;)
          dx_ax_38 = dx_37 *s ax_15
dx_ax_16: orig: dx_ax
    def:  dx_ax_16 = SEQ(dx, ax_15) (alias)
SZO_17: orig: SZO
    def:  SZO_17 = cond(ax_15)
    uses: Z_18 = SZO_17 (alias)
          SCZO_19 = SZO_17 (alias)
          call fn0C00_000F (retsize: 2;)
          SZO_24 = PHI(SZO_42, SZO_17)
Z_18: orig: Z
    def:  Z_18 = SZO_17 (alias)
    uses: branch Test(EQ,Z_18) l0C00_0026
          call fn0C00_000F (retsize: 2;)
          Z_23 = PHI(Z_43, Z_18)
SCZO_19: orig: SCZO
    def:  SCZO_19 = SZO_17 (alias)
    uses: call fn0C00_000F (retsize: 2;)
          SCZO_20 = PHI(SCZO_41, SCZO_19)
SCZO_20: orig: SCZO
    def:  SCZO_20 = PHI(SCZO_41, SCZO_19)
dx_ax_21: orig: dx_ax
    def:  dx_ax_21 = PHI(dx_ax_38, dx_ax_45)
dx_22: orig: dx
    def:  dx_22 = PHI(dx_40, dx)
Z_23: orig: Z
    def:  Z_23 = PHI(Z_43, Z_18)
SZO_24: orig: SZO
    def:  SZO_24 = PHI(SZO_42, SZO_17)
ax_25: orig: ax
    def:  ax_25 = PHI(ax_39, ax_44)
ss_26: orig: ss
    def:  ss_26 = PHI(ss, ss)
    uses: bp_29 = Mem28[ss_26:sp_27:word16]
sp_27: orig: sp
    def:  sp_27 = PHI(sp_35, sp_11)
    uses: bp_29 = Mem28[ss_26:sp_27:word16]
          sp_30 = sp_27 + 0x0002
Mem28: orig: Mem0
    def:  Mem28 = PHI(Mem32, Mem12)
    uses: bp_29 = Mem28[ss_26:sp_27:word16]
bp_29: orig: bp
    def:  bp_29 = Mem28[ss_26:sp_27:word16]
sp_30: orig: sp
    def:  sp_30 = sp_27 + 0x0002
sp_31: orig: sp
    def:  sp_31 = sp_11 - 0x0002
    uses: store(Mem32[ss:sp_31:word16]) = ax_15
          call fn0C00_000F (retsize: 2;)
          sp_33 = sp_31 + 0x0001
Mem32: orig: Mem0
    def:  store(Mem32[ss:sp_31:word16]) = ax_15
    uses: dx_37 = Mem32[ss:bp_13 + 0x0004:word16]
          Mem28 = PHI(Mem32, Mem12)
sp_33: orig: sp
    def:  sp_33 = sp_31 + 0x0001
    uses: SZO_34 = cond(sp_33)
          sp_35 = sp_33 + 0x0001
SZO_34: orig: SZO
    def:  SZO_34 = cond(sp_33)
sp_35: orig: sp
    def:  sp_35 = sp_33 + 0x0001
    uses: SZO_36 = cond(sp_35)
          sp_27 = PHI(sp_35, sp_11)
SZO_36: orig: SZO
    def:  SZO_36 = cond(sp_35)
dx_37: orig: dx
    def:  dx_37 = Mem32[ss:bp_13 + 0x0004:word16]
    uses: dx_ax_38 = dx_37 *s ax_15
dx_ax_38: orig: dx_ax
    def:  dx_ax_38 = dx_37 *s ax_15
    uses: ax_39 = (word16) dx_ax_38 (alias)
          dx_40 = SLICE(dx_ax_38, word16, 16) (alias)
          SCZO_41 = cond(dx_ax_38)
          dx_ax_21 = PHI(dx_ax_38, dx_ax_45)
ax_39: orig: ax
    def:  ax_39 = (word16) dx_ax_38 (alias)
    uses: ax_25 = PHI(ax_39, ax_44)
dx_40: orig: dx
    def:  dx_40 = SLICE(dx_ax_38, word16, 16) (alias)
    uses: dx_22 = PHI(dx_40, dx)
SCZO_41: orig: SCZO
    def:  SCZO_41 = cond(dx_ax_38)
    uses: SZO_42 = SCZO_41 (alias)
          Z_43 = SCZO_41 (alias)
          SCZO_20 = PHI(SCZO_41, SCZO_19)
SZO_42: orig: SZO
    def:  SZO_42 = SCZO_41 (alias)
    uses: SZO_24 = PHI(SZO_42, SZO_17)
Z_43: orig: Z
    def:  Z_43 = SCZO_41 (alias)
    uses: Z_23 = PHI(Z_43, Z_18)
ax_44: orig: ax
    def:  ax_44 = 0x0001
    uses: dx_ax_45 = SEQ(dx, ax_44) (alias)
          ax_25 = PHI(ax_39, ax_44)
dx_ax_45: orig: dx_ax
    def:  dx_ax_45 = SEQ(dx, ax_44) (alias)
    uses: dx_ax_21 = PHI(dx_ax_38, dx_ax_45)
// fn0C00_000F
void fn0C00_000F()
fn0C00_000F_entry:
	def Mem0
	def fp
	def sp
	def bp
	def ss
	def ax
	def SZO
	def Z
	def dx
	def dx_ax
	def SCZO
	// succ:  l0C00_000F
l0C00_000F:
	sp_11 = sp - 0x0002
	store(Mem12[ss:sp_11:word16]) = bp
	bp_13 = sp_11
	ax_14 = Mem12[ss:bp_13 + 0x0004:word16]
	ax_15 = ax_14 - 0x0001
	dx_ax_16 = SEQ(dx, ax_15) (alias)
	SZO_17 = cond(ax_15)
	Z_18 = SZO_17 (alias)
	SCZO_19 = SZO_17 (alias)
	branch Test(EQ,Z_18) l0C00_0026
	// succ:  l0C00_0018 l0C00_0026
l0C00_0018:
	sp_31 = sp_11 - 0x0002
	store(Mem32[ss:sp_31:word16]) = ax_15
	call fn0C00_000F (retsize: 2;)
	sp_33 = sp_31 + 0x0001
	SZO_34 = cond(sp_33)
	sp_35 = sp_33 + 0x0001
	SZO_36 = cond(sp_35)
	dx_37 = Mem32[ss:bp_13 + 0x0004:word16]
	dx_ax_38 = dx_37 *s ax_15
	ax_39 = (word16) dx_ax_38 (alias)
	dx_40 = SLICE(dx_ax_38, word16, 16) (alias)
	SCZO_41 = cond(dx_ax_38)
	SZO_42 = SCZO_41 (alias)
	Z_43 = SCZO_41 (alias)
	goto l0C00_0029
	// succ:  l0C00_0029
l0C00_0026:
	ax_44 = 0x0001
	dx_ax_45 = SEQ(dx, ax_44) (alias)
	// succ:  l0C00_0029
l0C00_0029:
	SCZO_20 = PHI(SCZO_41, SCZO_19)
	dx_ax_21 = PHI(dx_ax_38, dx_ax_45)
	dx_22 = PHI(dx_40, dx)
	Z_23 = PHI(Z_43, Z_18)
	SZO_24 = PHI(SZO_42, SZO_17)
	ax_25 = PHI(ax_39, ax_44)
	ss_26 = PHI(ss, ss)
	sp_27 = PHI(sp_35, sp_11)
	Mem28 = PHI(Mem32, Mem12)
	bp_29 = Mem28[ss_26:sp_27:word16]
	sp_30 = sp_27 + 0x0002
	return
	// succ:  fn0C00_000F_exit
fn0C00_000F_exit:

