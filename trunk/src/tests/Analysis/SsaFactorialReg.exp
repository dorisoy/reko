Mem0:Global memory
    def:  def Mem0
fp:Temporary
    def:  def fp
sp:sp
    def:  def sp
cx:cx
    def:  def cx
ax:ax
    def:  def ax
ds:ds
    def:  def ds
    uses: Mem8[ds:0x0064:word16] = ax_7
cx_6: orig: cx
    def:  cx_6 = 0x0005
    uses: ax_7 = fn0C00_000B(cx_6)
ax_7: orig: ax
    def:  ax_7 = fn0C00_000B(cx_6)
    uses: Mem8[ds:0x0064:word16] = ax_7
Mem8: orig: Mem0
    def:  Mem8[ds:0x0064:word16] = ax_7
// fn0C00_0000
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def Mem0
	def fp
	def sp
	def cx
	def ax
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	cx_6 = 0x0005
	ax_7 = fn0C00_000B(cx_6)
	Mem8[ds:0x0064:word16] = ax_7
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

Mem0:Global memory
    def:  def Mem0
fp:Temporary
    def:  def fp
    uses: sp_12 = fp - 0x0002
          sp_23 = fp
sp:sp
    def:  def sp
si:si
    def:  def si
    uses: wLoc02_13 = si
ss:ss
    def:  def ss
cx:cx
    def:  def cx
    uses: SCZO_14 = cond(cx - 0x0001)
          si_24 = cx
          cx_25 = cx - 0x0001
          cx_21 = PHI(cx_25, cx)
SCZO:Flags
    def:  def SCZO
SZO:Flags
    def:  def SZO
ax:ax
    def:  def ax
dx:dx
    def:  def dx
    uses: dx_ax_34 = SEQ(dx, ax_33) (alias)
          dx_17 = PHI(dx_30, dx)
dx_ax:Sequence dx:ax
    def:  def dx_ax
wLoc02:Local -0002
    def:  def wLoc02
sp_12: orig: sp
    def:  sp_12 = fp - 0x0002
wLoc02_13: orig: wLoc02
    def:  wLoc02_13 = si
    uses: si_22 = wLoc02_13
SCZO_14: orig: SCZO
    def:  SCZO_14 = cond(cx - 0x0001)
    uses: SZO_15 = SCZO_14 (alias)
          SCZO_20 = PHI(SCZO_31, SCZO_14)
SZO_15: orig: SZO
    def:  SZO_15 = SCZO_14 (alias)
    uses: branch Test(LE,SZO_15) l0C00_001C
          SZO_19 = PHI(SZO_32, SZO_15)
dx_ax_16: orig: dx_ax
    def:  dx_ax_16 = PHI(dx_ax_28, dx_ax_34)
dx_17: orig: dx
    def:  dx_17 = PHI(dx_30, dx)
ax_18: orig: ax
    def:  ax_18 = PHI(ax_29, ax_33)
    uses: return ax_18
SZO_19: orig: SZO
    def:  SZO_19 = PHI(SZO_32, SZO_15)
SCZO_20: orig: SCZO
    def:  SCZO_20 = PHI(SCZO_31, SCZO_14)
cx_21: orig: cx
    def:  cx_21 = PHI(cx_25, cx)
si_22: orig: si
    def:  si_22 = wLoc02_13
sp_23: orig: sp
    def:  sp_23 = fp
si_24: orig: si
    def:  si_24 = cx
    uses: dx_ax_28 = si_24 *s ax_27
cx_25: orig: cx
    def:  cx_25 = cx - 0x0001
    uses: SZO_26 = cond(cx_25)
          ax_27 = fn0C00_000B(cx_25)
          cx_21 = PHI(cx_25, cx)
SZO_26: orig: SZO
    def:  SZO_26 = cond(cx_25)
ax_27: orig: ax
    def:  ax_27 = fn0C00_000B(cx_25)
    uses: dx_ax_28 = si_24 *s ax_27
dx_ax_28: orig: dx_ax
    def:  dx_ax_28 = si_24 *s ax_27
    uses: ax_29 = (word16) dx_ax_28 (alias)
          dx_30 = SLICE(dx_ax_28, word16, 16) (alias)
          SCZO_31 = cond(dx_ax_28)
          dx_ax_16 = PHI(dx_ax_28, dx_ax_34)
ax_29: orig: ax
    def:  ax_29 = (word16) dx_ax_28 (alias)
    uses: ax_18 = PHI(ax_29, ax_33)
dx_30: orig: dx
    def:  dx_30 = SLICE(dx_ax_28, word16, 16) (alias)
    uses: dx_17 = PHI(dx_30, dx)
SCZO_31: orig: SCZO
    def:  SCZO_31 = cond(dx_ax_28)
    uses: SZO_32 = SCZO_31 (alias)
          SCZO_20 = PHI(SCZO_31, SCZO_14)
SZO_32: orig: SZO
    def:  SZO_32 = SCZO_31 (alias)
    uses: SZO_19 = PHI(SZO_32, SZO_15)
ax_33: orig: ax
    def:  ax_33 = 0x0001
    uses: dx_ax_34 = SEQ(dx, ax_33) (alias)
          ax_18 = PHI(ax_29, ax_33)
dx_ax_34: orig: dx_ax
    def:  dx_ax_34 = SEQ(dx, ax_33) (alias)
    uses: dx_ax_16 = PHI(dx_ax_28, dx_ax_34)
// fn0C00_000B
word16 fn0C00_000B(word16 cx)
fn0C00_000B_entry:
	def Mem0
	def fp
	def sp
	def si
	def ss
	def cx
	def SCZO
	def SZO
	def ax
	def dx
	def dx_ax
	def wLoc02
	// succ:  l0C00_000B
l0C00_000B:
	sp_12 = fp - 0x0002
	wLoc02_13 = si
	SCZO_14 = cond(cx - 0x0001)
	SZO_15 = SCZO_14 (alias)
	branch Test(LE,SZO_15) l0C00_001C
	// succ:  l0C00_0011 l0C00_001C
l0C00_0011:
	si_24 = cx
	cx_25 = cx - 0x0001
	SZO_26 = cond(cx_25)
	ax_27 = fn0C00_000B(cx_25)
	dx_ax_28 = si_24 *s ax_27
	ax_29 = (word16) dx_ax_28 (alias)
	dx_30 = SLICE(dx_ax_28, word16, 16) (alias)
	SCZO_31 = cond(dx_ax_28)
	SZO_32 = SCZO_31 (alias)
	goto l0C00_001F
	// succ:  l0C00_001F
l0C00_001C:
	ax_33 = 0x0001
	dx_ax_34 = SEQ(dx, ax_33) (alias)
	// succ:  l0C00_001F
l0C00_001F:
	dx_ax_16 = PHI(dx_ax_28, dx_ax_34)
	dx_17 = PHI(dx_30, dx)
	ax_18 = PHI(ax_29, ax_33)
	SZO_19 = PHI(SZO_32, SZO_15)
	SCZO_20 = PHI(SCZO_31, SCZO_14)
	cx_21 = PHI(cx_25, cx)
	si_22 = wLoc02_13
	sp_23 = fp
	return ax_18
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:

