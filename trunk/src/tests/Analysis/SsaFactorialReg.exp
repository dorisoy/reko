Mem0:Global memory
    def:  def Mem0
fp:Temporary
    def:  def fp
sp:sp
    def:  def sp
cx:cx
    def:  def cx
ax:ax
    def:  def ax
ds:ds
    def:  def ds
    uses: Mem9[ds:0x0064:word16] = ax_8
cx_6: orig: cx
    def:  cx_6 = 0x0005
Mem7: orig: Mem0
    def:  Mem7[ds:0x0064:word16] = ax
// fn0C00_0000
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def Mem0
	def fp
	def sp
	def cx
	def ax
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	cx_6 = 0x0005
	ax_8 = fn0C00_000B(cx_6)
	Mem9[ds:0x0064:word16] = ax_8
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

Mem0:Global memory
    def:  def Mem0
fp:Temporary
    def:  def fp
    uses: sp_12 = fp - 0x0002
          sp_24 = fp
sp:sp
    def:  def sp
si:si
    def:  def si
    uses: wLoc02_13 = si
ss:ss
    def:  def ss
    uses: Mem12[ss:sp_11:word16] = si
          call fn0C00_000B (retsize: 2; depth: 4)
cx:cx
    def:  def cx
    uses: SCZO_13 = cond(cx - 0x0001)
          si_25 = cx
          cx_26 = cx - 0x0001
          cx_20 = PHI(cx_26, cx)
SCZO:Flags
    def:  def SCZO
SZO:Flags
    def:  def SZO
ax:Register ax
    def:  def ax
    uses: call fn0C00_000B (retsize: 2;)
          dx_ax_28 = si_25 *s ax
dx:Register dx
    def:  def dx
    uses: call fn0C00_000B (retsize: 2;)
          dx_ax_34 = SEQ(dx, ax_33) (alias)
          dx_16 = PHI(dx_30, dx)
dx_ax:Sequence dx:ax
    def:  def dx_ax
sp_11: orig: sp
    def:  sp_11 = sp - 0x0002
    uses: Mem12[ss:sp_11:word16] = si
          call fn0C00_000B (retsize: 2;)
          sp_22 = PHI(sp_11, sp_11)
          sp_22 = PHI(sp_11, sp_11)
Mem12: orig: Mem0
    def:  Mem12[ss:sp_11:word16] = si
    uses: si_23 = Mem12[ss_21:sp_22:word16]
SCZO_13: orig: SCZO
    def:  SCZO_13 = cond(cx - 0x0001)
    uses: SZO_14 = SCZO_13 (alias)
          call fn0C00_000B (retsize: 2;)
          SCZO_19 = PHI(SCZO_31, SCZO_13)
SZO_14: orig: SZO
    def:  SZO_14 = SCZO_13 (alias)
    uses: branch Test(LE,SZO_14) l0C00_001C
          SZO_18 = PHI(SZO_32, SZO_14)
dx_ax_15: orig: dx_ax
    def:  dx_ax_15 = PHI(dx_ax_28, dx_ax_34)
dx_16: orig: dx
    def:  dx_16 = PHI(dx_30, dx)
ax_17: orig: ax
    def:  ax_17 = PHI(ax_29, ax_33)
SZO_18: orig: SZO
    def:  SZO_18 = PHI(SZO_32, SZO_14)
SCZO_19: orig: SCZO
    def:  SCZO_19 = PHI(SCZO_31, SCZO_13)
cx_20: orig: cx
    def:  cx_20 = PHI(cx_26, cx)
ss_21: orig: ss
    def:  ss_21 = PHI(ss, ss)
    uses: si_23 = Mem12[ss_21:sp_22:word16]
sp_22: orig: sp
    def:  sp_22 = PHI(sp_11, sp_11)
    uses: si_23 = Mem12[ss_21:sp_22:word16]
          sp_24 = sp_22 + 0x0002
si_23: orig: si
    def:  si_23 = Mem12[ss_21:sp_22:word16]
sp_24: orig: sp
    def:  sp_24 = fp
si_25: orig: si
    def:  si_25 = cx
    uses: call fn0C00_000B (retsize: 2; depth: 4)
          dx_ax_28 = si_25 *s ax
cx_26: orig: cx
    def:  cx_26 = cx - 0x0001
    uses: SZO_27 = cond(cx_26)
          call fn0C00_000B (retsize: 2; depth: 4)
          dx_ax_28 = cx_26 *s ax
          cx_20 = PHI(cx_26, cx)
SZO_27: orig: SZO
    def:  SZO_27 = cond(cx_26)
    uses: call fn0C00_000B (retsize: 2; depth: 4)
dx_ax_28: orig: dx_ax
    def:  dx_ax_28 = cx_26 *s ax
    uses: ax_29 = (word16) dx_ax_28 (alias)
          dx_30 = SLICE(dx_ax_28, word16, 16) (alias)
          SCZO_31 = cond(dx_ax_28)
          dx_ax_15 = PHI(dx_ax_28, dx_ax_34)
ax_29: orig: ax
    def:  ax_29 = (word16) dx_ax_28 (alias)
    uses: ax_17 = PHI(ax_29, ax_33)
dx_30: orig: dx
    def:  dx_30 = SLICE(dx_ax_28, word16, 16) (alias)
    uses: dx_16 = PHI(dx_30, dx)
SCZO_31: orig: SCZO
    def:  SCZO_31 = cond(dx_ax_28)
    uses: SZO_32 = SCZO_31 (alias)
          SCZO_20 = PHI(SCZO_31, SCZO_13)
SZO_32: orig: SZO
    def:  SZO_32 = SCZO_31 (alias)
    uses: SZO_19 = PHI(SZO_32, SZO_15)
ax_33: orig: ax
    def:  ax_33 = 0x0001
    uses: dx_ax_34 = SEQ(dx, ax_33) (alias)
          ax_18 = PHI(ax_29, ax_33)
dx_ax_34: orig: dx_ax
    def:  dx_ax_34 = SEQ(dx, ax_33) (alias)
    uses: dx_ax_16 = PHI(dx_ax_28, dx_ax_34)
// fn0C00_000B
void fn0C00_000B(word16 cx)
fn0C00_000B_entry:
	def Mem0
	def fp
	def sp
	def si
	def ss
	def cx
	def SCZO
	def SZO
	def ax
	def dx
	def dx_ax
	def wLoc02
	// succ:  l0C00_000B
l0C00_000B:
	sp_13 = fp - 0x0002
	wLoc02_14 = si
	SCZO_15 = cond(cx - 0x0001)
	SZO_16 = SCZO_15 (alias)
	branch Test(LE,SZO_16) l0C00_001C
	// succ:  l0C00_0011 l0C00_001C
l0C00_0011:
	si_25 = cx
	cx_26 = cx - 0x0001
	SZO_27 = cond(cx_26)
	ax_29 = fn0C00_000B(cx_26)
	dx_ax_30 = cx_28 *s ax_29
	ax_31 = (word16) dx_ax_30 (alias)
	dx_32 = SLICE(dx_ax_30, word16, 16) (alias)
	SCZO_33 = cond(dx_ax_30)
	SZO_34 = SCZO_33 (alias)
	goto l0C00_001F
	// succ:  l0C00_001F
l0C00_001C:
	ax_35 = 0x0001
	dx_ax_36 = SEQ(dx, ax_35) (alias)
	// succ:  l0C00_001F
l0C00_001F:
	dx_ax_17 = PHI(dx_ax_30, dx_ax_36)
	dx_18 = PHI(dx_32, dx)
	ax_19 = PHI(ax_31, ax_35)
	SZO_20 = PHI(SZO_34, SZO_16)
	SCZO_21 = PHI(SCZO_33, SCZO_15)
	cx_22 = PHI(cx_28, cx)
	si_23 = wLoc02_14
	sp_24 = fp
	return ax_19
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:

