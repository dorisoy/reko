fp:fp
    def:  def fp
    uses: sp_1 = fp
sp_1: orig: sp
    def:  sp_1 = fp
cx_2: orig: cx
    def:  cx_2 = 0x0005
    uses: ax_3 = fn0C00_000B(cx_2)
ax_3: orig: ax
    def:  ax_3 = fn0C00_000B(cx_2)
    uses: Mem4[ds:0x0064:word16] = ax_3
Mem4: orig: Mem0
    def:  Mem4[ds:0x0064:word16] = ax_3
ds:ds
    def:  def ds
    uses: Mem4[ds:0x0064:word16] = ax_3
// fn0C00_0000
// Return size: 0
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def fp
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	sp_1 = fp
	cx_2 = 0x0005
	ax_3 = fn0C00_000B(cx_2)
	Mem4[ds:0x0064:word16] = ax_3
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
    def:  def fp
    uses: sp_1 = fp
          sp_2 = fp - 0x0002
          sp_15 = fp
sp_1: orig: sp
    def:  sp_1 = fp
sp_2: orig: sp
    def:  sp_2 = fp - 0x0002
si:si
    def:  def si
    uses: wLoc02_4 = si
wLoc02_4: orig: wLoc02
    def:  wLoc02_4 = si
    uses: si_14 = wLoc02_4
cx:cx
    def:  def cx
    uses: SCZO_6 = cond(cx - 0x0001)
          si_16 = cx
          cx_17 = cx - 0x0001
          cx_8 = PHI(cx_17, cx)
SCZO_6: orig: SCZO
    def:  SCZO_6 = cond(cx - 0x0001)
    uses: SZO_7 = SCZO_6 (alias)
          SCZO_12 = PHI(SCZO_23, SCZO_6)
SZO_7: orig: SZO
    def:  SZO_7 = SCZO_6 (alias)
    uses: branch Test(LE,SZO_7) l0C00_001C
          SZO_13 = PHI(SZO_24, SZO_7)
cx_8: orig: cx
    def:  cx_8 = PHI(cx_17, cx)
dx_ax_9: orig: dx_ax
    def:  dx_ax_9 = PHI(dx_ax_20, dx_ax_27)
ax_10: orig: ax
    def:  ax_10 = PHI(ax_21, ax_25)
    uses: return ax_10
dx_11: orig: dx
    def:  dx_11 = PHI(dx_22, dx)
SCZO_12: orig: SCZO
    def:  SCZO_12 = PHI(SCZO_23, SCZO_6)
SZO_13: orig: SZO
    def:  SZO_13 = PHI(SZO_24, SZO_7)
si_14: orig: si
    def:  si_14 = wLoc02_4
sp_15: orig: sp
    def:  sp_15 = fp
si_16: orig: si
    def:  si_16 = cx
    uses: dx_ax_20 = si_16 *s ax_19
cx_17: orig: cx
    def:  cx_17 = cx - 0x0001
    uses: SZO_18 = cond(cx_17)
          ax_19 = fn0C00_000B(cx_17)
          cx_8 = PHI(cx_17, cx)
SZO_18: orig: SZO
    def:  SZO_18 = cond(cx_17)
ax_19: orig: ax
    def:  ax_19 = fn0C00_000B(cx_17)
    uses: dx_ax_20 = si_16 *s ax_19
dx_ax_20: orig: dx_ax
    def:  dx_ax_20 = si_16 *s ax_19
    uses: ax_21 = (word16) dx_ax_20 (alias)
          dx_22 = SLICE(dx_ax_20, word16, 16) (alias)
          SCZO_23 = cond(dx_ax_20)
          dx_ax_9 = PHI(dx_ax_20, dx_ax_27)
ax_21: orig: ax
    def:  ax_21 = (word16) dx_ax_20 (alias)
    uses: ax_10 = PHI(ax_21, ax_25)
dx_22: orig: dx
    def:  dx_22 = SLICE(dx_ax_20, word16, 16) (alias)
    uses: dx_11 = PHI(dx_22, dx)
SCZO_23: orig: SCZO
    def:  SCZO_23 = cond(dx_ax_20)
    uses: SZO_24 = SCZO_23 (alias)
          SCZO_12 = PHI(SCZO_23, SCZO_6)
SZO_24: orig: SZO
    def:  SZO_24 = SCZO_23 (alias)
    uses: SZO_13 = PHI(SZO_24, SZO_7)
ax_25: orig: ax
    def:  ax_25 = 0x0001
    uses: dx_ax_27 = SEQ(dx, ax_25) (alias)
          ax_10 = PHI(ax_21, ax_25)
dx:dx
    def:  def dx
    uses: dx_ax_27 = SEQ(dx, ax_25) (alias)
          dx_11 = PHI(dx_22, dx)
dx_ax_27: orig: dx_ax
    def:  dx_ax_27 = SEQ(dx, ax_25) (alias)
    uses: dx_ax_9 = PHI(dx_ax_20, dx_ax_27)
// fn0C00_000B
// Return size: 0
word16 fn0C00_000B(word16 cx)
fn0C00_000B_entry:
	def fp
	def si
	def cx
	def dx
	// succ:  l0C00_000B
l0C00_000B:
	sp_1 = fp
	sp_2 = fp - 0x0002
	wLoc02_4 = si
	SCZO_6 = cond(cx - 0x0001)
	SZO_7 = SCZO_6 (alias)
	branch Test(LE,SZO_7) l0C00_001C
	// succ:  l0C00_0011 l0C00_001C
l0C00_0011:
	si_16 = cx
	cx_17 = cx - 0x0001
	SZO_18 = cond(cx_17)
	ax_19 = fn0C00_000B(cx_17)
	dx_ax_20 = si_16 *s ax_19
	ax_21 = (word16) dx_ax_20 (alias)
	dx_22 = SLICE(dx_ax_20, word16, 16) (alias)
	SCZO_23 = cond(dx_ax_20)
	SZO_24 = SCZO_23 (alias)
	goto l0C00_001F
	// succ:  l0C00_001F
l0C00_001C:
	ax_25 = 0x0001
	dx_ax_27 = SEQ(dx, ax_25) (alias)
	// succ:  l0C00_001F
l0C00_001F:
	cx_8 = PHI(cx_17, cx)
	dx_ax_9 = PHI(dx_ax_20, dx_ax_27)
	ax_10 = PHI(ax_21, ax_25)
	dx_11 = PHI(dx_22, dx)
	SCZO_12 = PHI(SCZO_23, SCZO_6)
	SZO_13 = PHI(SZO_24, SZO_7)
	si_14 = wLoc02_4
	sp_15 = fp
	return ax_10
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:

