Mem0: Mem0:Global memory
fp: fp:Temporary
bx: bx:Register
ds: ds:Register, def: {def ds}, uses: {bx_6 = fn0C00_000C(ds, &cl_5)}{store(Mem7[ds:0x0300:word16]) = bx_6}{store(Mem8[ds:0x0302:byte]) = cl_5}
cl: cl:Register
cl_5: orig: cl, def: {bx_6 = fn0C00_000C(ds, &cl_5)}, uses: {store(Mem8[ds:0x0302:byte]) = cl_5}
bx_6: orig: bx, def: {bx_6 = fn0C00_000C(ds, &cl_5)}, uses: {store(Mem7[ds:0x0300:word16]) = bx_6}
Mem7: orig: Mem0, def: {store(Mem7[ds:0x0300:word16]) = bx_6}
Mem8: orig: Mem0, def: {store(Mem8[ds:0x0302:byte]) = cl_5}
// fn0C00_0000
void fn0C00_0000(segment ds)
fn0C00_0000_entry:		// block 0, pred:
	def ds
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	bx_6 = fn0C00_000C(ds, &cl_5)
	store(Mem7[ds:0x0300:word16]) = bx_6
	store(Mem8[ds:0x0302:byte]) = cl_5
	return
	// succ:  2
fn0C00_0000_exit:		// block 2, pred: 1
	// succ: 

Mem0: Mem0:Global memory, def: {def Mem0}, uses: {SCZO_31 = cond(al_20 - Mem0[es_16:di_27:byte])}{ah_43 = Mem0[ds:di_37 + 0x0001:byte]}{branch al_20 == Mem0[es_16:di_27:byte]}
fp: fp:Temporary
ds: ds:Register, def: {def ds}, uses: {cx_15 = ds}{ah_43 = Mem0[ds:di_37 + 0x0001:byte]}
cx: cx:Register
es: es:Register
di: di:Register
al: al:Register
SCZO: SCZO:Flags
v8: v8:Temporary
Z: Z:Flags
ah: ah:Register
ax: ax:Register, def: {def ax}, uses: {ax_21 = DPB(ax, al_20, 0, 8) (alias)}
bx: bx:Register
cl: cl:Register
clOut: clOut:Out:Register
cx_15: orig: cx, def: {cx_15 = ds}, uses: {es_16 = cx_15}
es_16: orig: es, def: {es_16 = cx_15}, uses: {SCZO_31 = cond(al_20 - Mem0[es_16:di_27:byte])}{branch al_20 == Mem0[es_16:di_27:byte]}
di_17: orig: di, def: {di_17 = 0x7E0F}, uses: {di_27 = PHI(di_17, di_33)}
cx_18: orig: cx, def: {cx_18 = 0x000C}, uses: {cx_28 = PHI(cx_18, cx_29)}
cl_19: orig: cl
al_20: orig: al, def: {al_20 = 0x00}, uses: {ax_21 = DPB(ax, al_20, 0, 8) (alias)}{SCZO_22 = cond(al_20)}{SCZO_31 = cond(al_20 - Mem0[es_16:di_27:byte])}{branch al_20 == Mem0[es_16:di_27:byte]}
ax_21: orig: ax, def: {ax_21 = DPB(ax, al_20, 0, 8) (alias)}, uses: {ax_44 = DPB(ax_21, ah_43, 8, 8) (alias)}
SCZO_22: orig: SCZO, def: {SCZO_22 = cond(al_20)}, uses: {Z_23 = SCZO_22 (alias)}
Z_23: orig: Z, def: {Z_23 = SCZO_22 (alias)}, uses: {Z_25 = PHI(Z_23, Z_32)}
cl_24: orig: cl
Z_25: orig: Z, def: {Z_25 = PHI(Z_23, Z_32)}, uses: {Z_35 = PHI(Z_25, Z_32)}
SCZO_26: orig: SCZO
di_27: orig: di, def: {di_27 = PHI(di_17, di_33)}, uses: {di_37 = PHI(di_27, di_33)}{SCZO_31 = cond(al_20 - Mem0[es_16:di_27:byte])}{di_33 = di_27 + 0x0001}{branch al_20 == Mem0[es_16:di_27:byte]}
cx_28: orig: cx, def: {cx_28 = PHI(cx_18, cx_29)}, uses: {branch cx_28 == 0x0000}{cx_29 = cx_28 - 0x0001}
cx_29: orig: cx, def: {cx_29 = cx_28 - 0x0001}, uses: {cx_28 = PHI(cx_18, cx_29)}
cl_30: orig: cl
SCZO_31: orig: SCZO, def: {SCZO_31 = cond(al_20 - Mem0[es_16:di_27:byte])}, uses: {Z_32 = SCZO_31 (alias)}
Z_32: orig: Z, def: {Z_32 = SCZO_31 (alias)}, uses: {Z_35 = PHI(Z_25, Z_32)}{Z_25 = PHI(Z_23, Z_32)}
di_33: orig: di, def: {di_33 = di_27 + 0x0001}, uses: {di_37 = PHI(di_27, di_33)}{di_27 = PHI(di_17, di_33)}
cl_34: orig: cl
Z_35: orig: Z, def: {Z_35 = PHI(Z_25, Z_32)}, uses: {branch Z_35}
SCZO_36: orig: SCZO
di_37: orig: di, def: {di_37 = PHI(di_27, di_33)}, uses: {ah_43 = Mem0[ds:di_37 + 0x0001:byte]}{bx_49 = di_37}
cx_38: orig: cx
bx_39: orig: bx, def: {bx_39 = 0x0000}, uses: {return bx_39}
cl_40: orig: cl, def: {cl_40 = 0x00}, uses: {cl_52 = PHI(cl_48, cl_40)}
cx_41: orig: cx
SCZO_42: orig: SCZO
ah_43: orig: ah, def: {ah_43 = Mem0[ds:di_37 + 0x0001:byte]}, uses: {ax_44 = DPB(ax_21, ah_43, 8, 8) (alias)}
ax_44: orig: ax, def: {ax_44 = DPB(ax_21, ah_43, 8, 8) (alias)}, uses: {cx_45 = __bsr(ax_44)}
cx_45: orig: cx, def: {cx_45 = __bsr(ax_44)}, uses: {cx_47 = cx_45 - 0x0008}
Z_46: orig: Z
cx_47: orig: cx, def: {cx_47 = cx_45 - 0x0008}, uses: {cl_48 = (byte) cx_47 (alias)}
cl_48: orig: cl, def: {cl_48 = (byte) cx_47 (alias)}, uses: {cl_52 = PHI(cl_48, cl_40)}
bx_49: orig: bx, def: {bx_49 = di_37}, uses: {bx_50 = bx_49 - 0x7E03}
bx_50: orig: bx, def: {bx_50 = bx_49 - 0x7E03}, uses: {return bx_50}
SCZO_51: orig: SCZO
cl_52: orig: cl, def: {cl_52 = PHI(cl_48, cl_40)}, uses: {use cl_52 (=> clOut)}
bx_53: orig: bx
ax_54: orig: ax
ah_55: orig: ah
Z_56: orig: Z
SCZO_57: orig: SCZO
cx_58: orig: cx
// fn0C00_000C
word16 fn0C00_000C(segment ds, ptr0 clOut)
fn0C00_000C_entry:		// block 0, pred:
	def Mem0
	def ds
	def ax
	// succ:  1
l0C00_000C:		// block 1, pred: 0
	cx_15 = ds
	es_16 = cx_15
	di_17 = 0x7E0F
	cx_18 = 0x000C
	al_20 = 0x00
	ax_21 = DPB(ax, al_20, 0, 8) (alias)
	SCZO_22 = cond(al_20)
	Z_23 = SCZO_22 (alias)
	// succ:  2
l0C00_0019:		// block 2, pred: 1 3
	Z_25 = PHI(Z_23, Z_32)
	di_27 = PHI(di_17, di_33)
	cx_28 = PHI(cx_18, cx_29)
	branch cx_28 == 0x0000
	// succ:  4 3
l0C00_0019_rep:		// block 3, pred: 2
	cx_29 = cx_28 - 0x0001
	SCZO_31 = cond(al_20 - Mem0[es_16:di_27:byte])
	Z_32 = SCZO_31 (alias)
	di_33 = di_27 + 0x0001
	branch al_20 == Mem0[es_16:di_27:byte]
	// succ:  4 2
l0C00_001B:		// block 4, pred: 2 3
	Z_35 = PHI(Z_25, Z_32)
	di_37 = PHI(di_27, di_33)
	branch Z_35
	// succ:  6 5
l0C00_002D:		// block 5, pred: 4
	bx_39 = 0x0000
	cl_40 = 0x00
	return bx_39
	// succ:  7
l0C00_001D:		// block 6, pred: 4
	ah_43 = Mem0[ds:di_37 + 0x0001:byte]
	ax_44 = DPB(ax_21, ah_43, 8, 8) (alias)
	cx_45 = __bsr(ax_44)
	cx_47 = cx_45 - 0x0008
	cl_48 = (byte) cx_47 (alias)
	bx_49 = di_37
	bx_50 = bx_49 - 0x7E03
	return bx_50
	// succ:  7
fn0C00_000C_exit:		// block 7, pred: 6 5
	cl_52 = PHI(cl_48, cl_40)
	use cl_52 (=> clOut)
	// succ: 

