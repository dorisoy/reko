Mem0: Mem0:Global memory
fp: fp:Temporary
tmp: tmp:Local -0004
reg: reg:Local -0008, def: {def reg}, uses: {branch (reg & 0x00000001) == 0x00000000 even}{reg_6 = PHI(reg, reg_5)}{reg_5 = reg + 0x00000002}{return reg_6 - reg}
tmp_4: orig: tmp
reg_5: orig: reg, def: {reg_5 = reg + 0x00000002}, uses: {reg_6 = PHI(reg, reg_5)}
reg_6: orig: reg, def: {reg_6 = PHI(reg, reg_5)}, uses: {return reg_6 - reg}
// LiveCopyMock
void LiveCopyMock()
LiveCopyMock_entry:		// block 0, pred:
	def reg
	// succ:  1
l1:		// block 1, pred: 0
	branch (reg & 0x00000001) == 0x00000000 even
	// succ:  2 3
l2:		// block 2, pred: 1
	reg_5 = reg + 0x00000002
	// succ:  3
even:		// block 3, pred: 1 2
	reg_6 = PHI(reg, reg_5)
	return reg_6 - reg
	// succ:  4
LiveCopyMock_exit:		// block 4, pred: 3
	// succ: 
