Mem0:Global memory
    def:  def Mem0
fp:Temporary
    def:  def fp
sp:Register sp
    def:  def sp
bx:Register bx
    def:  def bx
    uses: SCZO_10 = cond(bx - 0x0000)
SCZO:Flags
    def:  def SCZO
Z:Flags
    def:  def Z
SZO:Flags
    def:  def SZO
ax:Register ax
    def:  def ax
    uses: ax_22 = ax ^ ax
          ax_22 = ax ^ ax
C:Flags
    def:  def C
ds:Register ds
    def:  def ds
    uses: Mem19[ds:0x0100:word16] = ax_15
SCZO_10: orig: SCZO
    def:  SCZO_10 = cond(bx - 0x0000)
    uses: Z_11 = SCZO_10 (alias)
          SZO_12 = SCZO_10 (alias)
          C_13 = SCZO_10 (alias)
          SCZO_18 = PHI(SCZO_10, SCZO_26, SCZO_10)
          SCZO_18 = PHI(SCZO_10, SCZO_26, SCZO_10)
Z_11: orig: Z
    def:  Z_11 = SCZO_10 (alias)
    uses: branch Test(EQ,Z_11) l0C00_0013
          Z_17 = PHI(Z_11, Z_24, Z_11)
          Z_17 = PHI(Z_11, Z_24, Z_11)
SZO_12: orig: SZO
    def:  SZO_12 = SCZO_10 (alias)
    uses: branch Test(GT,SZO_12) l0C00_000D
          SZO_16 = PHI(SZO_12, SZO_23, SZO_12)
          SZO_16 = PHI(SZO_12, SZO_23, SZO_12)
C_13: orig: C
    def:  C_13 = SCZO_10 (alias)
    uses: C_14 = PHI(C_13, C_25, C_13)
          C_14 = PHI(C_13, C_25, C_13)
C_14: orig: C
    def:  C_14 = PHI(C_13, C_25, C_13)
ax_15: orig: ax
    def:  ax_15 = PHI(ax_20, ax_22, ax_21)
    uses: Mem19[ds:0x0100:word16] = ax_15
SZO_16: orig: SZO
    def:  SZO_16 = PHI(SZO_12, SZO_23, SZO_12)
Z_17: orig: Z
    def:  Z_17 = PHI(Z_11, Z_24, Z_11)
SCZO_18: orig: SCZO
    def:  SCZO_18 = PHI(SCZO_10, SCZO_26, SCZO_10)
Mem19: orig: Mem0
    def:  Mem19[ds:0x0100:word16] = ax_15
ax_20: orig: ax
    def:  ax_20 = 0xFFFF
    uses: ax_15 = PHI(ax_20, ax_22, ax_21)
ax_21: orig: ax
    def:  ax_21 = 0x0001
    uses: ax_15 = PHI(ax_20, ax_22, ax_21)
ax_22: orig: ax
    def:  ax_22 = ax ^ ax
    uses: SZO_23 = cond(ax_22)
          ax_15 = PHI(ax_20, ax_22, ax_21)
SZO_23: orig: SZO
    def:  SZO_23 = cond(ax_22)
    uses: Z_24 = SZO_23 (alias)
          SZO_16 = PHI(SZO_12, SZO_23, SZO_12)
Z_24: orig: Z
    def:  Z_24 = SZO_23 (alias)
    uses: Z_17 = PHI(Z_11, Z_24, Z_11)
C_25: orig: C
    def:  C_25 = false
    uses: SCZO_26 = C_25 (alias)
          C_14 = PHI(C_13, C_25, C_13)
SCZO_26: orig: SCZO
    def:  SCZO_26 = C_25 (alias)
    uses: SCZO_18 = PHI(SCZO_10, SCZO_26, SCZO_10)
// fn0C00_0000
void fn0C00_0000()
fn0C00_0000_entry:
	def Mem0
	def fp
	def sp
	def bx
	def SCZO
	def Z
	def SZO
	def ax
	def C
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	SCZO_10 = cond(bx - 0x0000)
	Z_11 = SCZO_10 (alias)
	SZO_12 = SCZO_10 (alias)
	C_13 = SCZO_10 (alias)
	branch Test(EQ,Z_11) l0C00_0013
	// succ:  l0C00_0005 l0C00_0013
l0C00_0005:
	branch Test(GT,SZO_12) l0C00_000D
	// succ:  l0C00_0007 l0C00_000D
l0C00_0007:
	ax_20 = 0xFFFF
	goto l0C00_0015
	// succ:  l0C00_0015
l0C00_000D:
	ax_21 = 0x0001
	goto l0C00_0015
	// succ:  l0C00_0015
l0C00_0013:
	ax_22 = ax ^ ax
	SZO_23 = cond(ax_22)
	Z_24 = SZO_23 (alias)
	C_25 = false
	SCZO_26 = C_25 (alias)
	// succ:  l0C00_0015
l0C00_0015:
	C_14 = PHI(C_13, C_25, C_13)
	ax_15 = PHI(ax_20, ax_22, ax_21)
	SZO_16 = PHI(SZO_12, SZO_23, SZO_12)
	Z_17 = PHI(Z_11, Z_24, Z_11)
	SCZO_18 = PHI(SCZO_10, SCZO_26, SCZO_10)
	Mem19[ds:0x0100:word16] = ax_15
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

