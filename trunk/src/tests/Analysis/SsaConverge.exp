Mem0: Mem0:Global memory, def: {def Mem0}
fp: fp:Temporary, def: {def fp}
bx: bx:Register, def: {def bx}, uses: {SCZO_8 = cond(bx - 0x0000)}
SCZO: SCZO:Flags, def: {def SCZO}
Z: Z:Flags, def: {def Z}
SZO: SZO:Flags, def: {def SZO}
ax: ax:Register, def: {def ax}
ds: ds:Register, def: {def ds}, uses: {store(Mem21[ds:0x0100:word16]) = ax_17}
SCZO_8: orig: SCZO, def: {SCZO_8 = cond(bx - 0x0000)}, uses: {Z_9 = SCZO_8 (alias)}{SZO_10 = SCZO_8 (alias)}{SCZO_20 = PHI(SCZO_8, SCZO_8, SCZO_12)}{SCZO_20 = PHI(SCZO_8, SCZO_8, SCZO_12)}
Z_9: orig: Z, def: {Z_9 = SCZO_8 (alias)}, uses: {branch Test(EQ,Z_9)}{Z_19 = PHI(Z_9, Z_9, Z_13)}{Z_19 = PHI(Z_9, Z_9, Z_13)}
SZO_10: orig: SZO, def: {SZO_10 = SCZO_8 (alias)}, uses: {branch Test(GT,SZO_10)}{SZO_18 = PHI(SZO_10, SZO_10, SZO_14)}{SZO_18 = PHI(SZO_10, SZO_10, SZO_14)}
ax_11: orig: ax, def: {ax_11 = 0x0000}, uses: {SCZO_12 = cond(ax_11)}{ax_17 = PHI(ax_16, ax_15, ax_11)}
SCZO_12: orig: SCZO, def: {SCZO_12 = cond(ax_11)}, uses: {Z_13 = SCZO_12 (alias)}{SZO_14 = SCZO_12 (alias)}{SCZO_20 = PHI(SCZO_8, SCZO_8, SCZO_12)}
Z_13: orig: Z, def: {Z_13 = SCZO_12 (alias)}, uses: {Z_19 = PHI(Z_9, Z_9, Z_13)}
SZO_14: orig: SZO, def: {SZO_14 = SCZO_12 (alias)}, uses: {SZO_18 = PHI(SZO_10, SZO_10, SZO_14)}
ax_15: orig: ax, def: {ax_15 = 0x0001}, uses: {ax_17 = PHI(ax_16, ax_15, ax_11)}
ax_16: orig: ax, def: {ax_16 = 0xFFFF}, uses: {ax_17 = PHI(ax_16, ax_15, ax_11)}
ax_17: orig: ax, def: {ax_17 = PHI(ax_16, ax_15, ax_11)}, uses: {store(Mem21[ds:0x0100:word16]) = ax_17}
SZO_18: orig: SZO, def: {SZO_18 = PHI(SZO_10, SZO_10, SZO_14)}
Z_19: orig: Z, def: {Z_19 = PHI(Z_9, Z_9, Z_13)}
SCZO_20: orig: SCZO, def: {SCZO_20 = PHI(SCZO_8, SCZO_8, SCZO_12)}
Mem21: orig: Mem0, def: {store(Mem21[ds:0x0100:word16]) = ax_17}
// fn0C00_0000
void fn0C00_0000()
fn0C00_0000_entry:		// block 0, pred:
	def Mem0
	def fp
	def bx
	def SCZO
	def Z
	def SZO
	def ax
	def ds
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	SCZO_8 = cond(bx - 0x0000)
	Z_9 = SCZO_8 (alias)
	SZO_10 = SCZO_8 (alias)
	branch Test(EQ,Z_9)
	// succ:  3 2
l0C00_0013:		// block 2, pred: 1
	ax_11 = 0x0000
	SCZO_12 = cond(ax_11)
	Z_13 = SCZO_12 (alias)
	SZO_14 = SCZO_12 (alias)
	// succ:  6
l0C00_0005:		// block 3, pred: 1
	branch Test(GT,SZO_10)
	// succ:  5 4
l0C00_000D:		// block 4, pred: 3
	ax_15 = 0x0001
	// succ:  6
l0C00_0007:		// block 5, pred: 3
	ax_16 = 0xFFFF
	// succ:  6
l0C00_0015:		// block 6, pred: 5 4 2
	ax_17 = PHI(ax_16, ax_15, ax_11)
	SZO_18 = PHI(SZO_10, SZO_10, SZO_14)
	Z_19 = PHI(Z_9, Z_9, Z_13)
	SCZO_20 = PHI(SCZO_8, SCZO_8, SCZO_12)
	store(Mem21[ds:0x0100:word16]) = ax_17
	return
	// succ:  7
fn0C00_0000_exit:		// block 7, pred: 6
	// succ: 

