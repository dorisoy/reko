// fn0C00_0000
void fn0C00_0000(byte al, selector ds)
fn0C00_0000_entry:
	def Mem0
	def fp
	def sp
	def C
	def ds
	def al
	// succ:  l0C00_0000
l0C00_0000:
	C_7 = fn0C00_000A(al, &al_6)
	branch Test(ULT,C_7) l0C00_0009
	// succ:  l0C00_0005 l0C00_0009
l0C00_0005:
	Mem8[ds:0x0300:byte] = al_6
	// succ:  l0C00_0009
l0C00_0009:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

// fn0C00_0000
void fn0C00_0000(byte al, selector ds)
fn0C00_0000_entry:
	def ds
	def al
	// succ:  l0C00_0000
l0C00_0000:
	C_7 = fn0C00_000A(al, &al_6)
	branch Test(ULT,C_7) l0C00_0009
	// succ:  l0C00_0005 l0C00_0009
l0C00_0005:
	Mem8[ds:0x0300:byte] = al_6
	// succ:  l0C00_0009
l0C00_0009:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
====================
// fn0C00_000A
byte fn0C00_000A(byte al, ptr16 alOut)
fn0C00_000A_entry:
	def Mem0
	def fp
	def sp
	def al
	def SCZO
	def C
	def CZ
	def alOut
	// succ:  l0C00_000A
l0C00_000A:
	SCZO_8 = cond(al - 0x30)
	C_9 = SCZO_8 (alias)
	CZ_10 = SCZO_8 (alias)
	branch Test(ULT,C_9) l0C00_0032
	// succ:  l0C00_000E l0C00_0032
l0C00_000E:
	SCZO_18 = cond(al - 0x39)
	C_19 = SCZO_18 (alias)
	CZ_20 = SCZO_18 (alias)
	branch Test(ULE,CZ_20) l0C00_0022
	// succ:  l0C00_0012 l0C00_0022
l0C00_0012:
	SCZO_39 = cond(al - 0x41)
	C_40 = SCZO_39 (alias)
	CZ_41 = SCZO_39 (alias)
	branch Test(ULT,C_40) l0C00_0032
	// succ:  l0C00_0016 l0C00_0032
l0C00_0016:
	SCZO_42 = cond(al - 0x46)
	C_43 = SCZO_42 (alias)
	CZ_44 = SCZO_42 (alias)
	branch Test(ULE,CZ_44) l0C00_0022
	// succ:  l0C00_001A l0C00_0022
l0C00_001A:
	SCZO_45 = cond(al - 0x61)
	C_46 = SCZO_45 (alias)
	CZ_47 = SCZO_45 (alias)
	branch Test(ULT,C_46) l0C00_0032
	// succ:  l0C00_001E l0C00_0032
l0C00_001E:
	SCZO_48 = cond(al - 0x66)
	C_49 = SCZO_48 (alias)
	CZ_50 = SCZO_48 (alias)
	branch Test(UGT,CZ_50) l0C00_0032
	// succ:  l0C00_0022 l0C00_0032
l0C00_0022:
	al_21 = al - 0x30
	SCZO_22 = cond(al_21)
	SCZO_23 = cond(al_21 - 0x0A)
	C_24 = SCZO_23 (alias)
	CZ_25 = SCZO_23 (alias)
	branch Test(ULT,C_24) l0C00_0030
	// succ:  l0C00_0028 l0C00_0030
l0C00_0028:
	al_30 = al_21 - 0x07
	SCZO_31 = cond(al_30)
	SCZO_32 = cond(al_30 - 0x10)
	C_33 = SCZO_32 (alias)
	CZ_34 = SCZO_32 (alias)
	branch Test(ULT,C_33) l0C00_0030
	// succ:  l0C00_002E l0C00_0030
l0C00_002E:
	al_35 = al_30 - 0x20
	SCZO_36 = cond(al_35)
	C_37 = SCZO_36 (alias)
	CZ_38 = SCZO_36 (alias)
	// succ:  l0C00_0030
l0C00_0030:
	al_26 = PHI(al_21, al_30, al_35)
	C_27 = false
	SCZO_28 = C_27 (alias)
	CZ_29 = C_27 (alias)
	return C_27
	// succ:  fn0C00_000A_exit
l0C00_0032:
	C_15 = true
	SCZO_16 = C_15 (alias)
	CZ_17 = C_15 (alias)
	return C_15
	// succ:  fn0C00_000A_exit
fn0C00_000A_exit:
	CZ_11 = PHI(CZ_17, CZ_29)
	C_12 = PHI(C_15, C_27)
	SCZO_13 = PHI(SCZO_16, SCZO_28)
	al_14 = PHI(al, al_26)
	use al_14 (=> alOut)

// fn0C00_000A
byte fn0C00_000A(byte al, ptr16 alOut)
fn0C00_000A_entry:
	def Mem0
	def al
	Mem0[alOut:byte] = al
	def alOut
	// succ:  l0C00_000A
l0C00_000A:
	SCZO_8 = cond(al - 0x30)
	C_9 = SCZO_8 (alias)
	branch Test(ULT,C_9) l0C00_0032
	// succ:  l0C00_000E l0C00_0032
l0C00_000E:
	SCZO_18 = cond(al - 0x39)
	CZ_20 = SCZO_18 (alias)
	branch Test(ULE,CZ_20) l0C00_0022
	// succ:  l0C00_0012 l0C00_0022
l0C00_0012:
	SCZO_39 = cond(al - 0x41)
	C_40 = SCZO_39 (alias)
	branch Test(ULT,C_40) l0C00_0032
	// succ:  l0C00_0016 l0C00_0032
l0C00_0016:
	SCZO_42 = cond(al - 0x46)
	CZ_44 = SCZO_42 (alias)
	branch Test(ULE,CZ_44) l0C00_0022
	// succ:  l0C00_001A l0C00_0022
l0C00_001A:
	SCZO_45 = cond(al - 0x61)
	C_46 = SCZO_45 (alias)
	branch Test(ULT,C_46) l0C00_0032
	// succ:  l0C00_001E l0C00_0032
l0C00_001E:
	SCZO_48 = cond(al - 0x66)
	CZ_50 = SCZO_48 (alias)
	branch Test(UGT,CZ_50) l0C00_0032
	// succ:  l0C00_0022 l0C00_0032
l0C00_0022:
	al_21 = al - 0x30
	Mem0[alOut:byte] = al_21
	SCZO_23 = cond(al_21 - 0x0A)
	C_24 = SCZO_23 (alias)
	branch Test(ULT,C_24) l0C00_0030
	// succ:  l0C00_0028 l0C00_0030
l0C00_0028:
	al_30 = al_21 - 0x07
	Mem0[alOut:byte] = al_30
	SCZO_32 = cond(al_30 - 0x10)
	C_33 = SCZO_32 (alias)
	branch Test(ULT,C_33) l0C00_0030
	// succ:  l0C00_002E l0C00_0030
l0C00_002E:
	al_35 = al_30 - 0x20
	Mem0[alOut:byte] = al_35
	// succ:  l0C00_0030
l0C00_0030:
	C_27 = false
	return C_27
	// succ:  fn0C00_000A_exit
l0C00_0032:
	C_15 = true
	return C_15
	// succ:  fn0C00_000A_exit
fn0C00_000A_exit:
====================
