fp:fp
sp_1: orig: sp
cx_2: orig: cx
    def:  cx_2 = 0x0014
    uses: ax_5 = fn0C00_0008(cx_2, di, ds)
          fn0C00_0008(cx_2, di, ds)
di:di
    def:  def di
    uses: ax_5 = fn0C00_0008(cx_2, di, ds)
          fn0C00_0008(cx_2, di, ds)
ds:ds
    def:  def ds
    uses: ax_5 = fn0C00_0008(cx_2, di, ds)
          Mem6[ds:si:word16] = ax_5
          fn0C00_0008(cx_2, di, ds)
ax_5: orig: ax
    def:  ax_5 = fn0C00_0008(cx_2, di, ds)
    uses: Mem6[ds:si:word16] = ax_5
Mem6: orig: Mem0
    def:  Mem6[ds:si:word16] = ax_5
si:si
    def:  def si
    uses: Mem6[ds:si:word16] = ax_5
ax_8: orig: ax
// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 si, word16 di, selector ds)
fn0C00_0000_entry:
	def di
	def ds
	def si
	// succ:  l0C00_0000
l0C00_0000:
	cx_2 = 0x0014
	ax_5 = fn0C00_0008(cx_2, di, ds)
	Mem6[ds:si:word16] = ax_5
	// succ:  l0C00_0006_thunk_fn0C00_0008
l0C00_0006_thunk_fn0C00_0008:
	fn0C00_0008(cx_2, di, ds)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
fp:fp
sp_1: orig: sp
sp_2: orig: sp
si:si
wLoc02_4: orig: wLoc02
sp_5: orig: sp
di:di
    def:  def di
    uses: di_10 = PHI(di, di_17)
wLoc04_7: orig: wLoc04
si_8: orig: si
    def:  si_8 = 0x0000
    uses: si_9 = PHI(si_8, si_16)
si_9: orig: si
    def:  si_9 = PHI(si_8, si_16)
    uses: si_16 = si_9 + Mem0[ds:di_10:word16]
          ax_20 = si_9
di_10: orig: di
    def:  di_10 = PHI(di, di_17)
    uses: si_16 = si_9 + Mem0[ds:di_10:word16]
          di_17 = di_10 + 0x0002
cx:cx
    def:  def cx
    uses: branch cx == 0x0000 l0C00_001A
SCZO_12: orig: SCZO
Z_13: orig: Z
ds:ds
    def:  def ds
    uses: si_16 = si_9 + Mem0[ds:di_10:word16]
Mem0:Global memory
    def:  def Mem0
    uses: si_16 = si_9 + Mem0[ds:di_10:word16]
si_16: orig: si
    def:  si_16 = si_9 + Mem0[ds:di_10:word16]
    uses: si_9 = PHI(si_8, si_16)
di_17: orig: di
    def:  di_17 = di_10 + 0x0002
    uses: di_10 = PHI(di, di_17)
SCZO_18: orig: SCZO
Z_19: orig: Z
ax_20: orig: ax
    def:  ax_20 = si_9
    uses: return ax_20
di_21: orig: di
sp_22: orig: sp
si_23: orig: si
sp_24: orig: sp
// fn0C00_0008
// Return size: 0
word16 fn0C00_0008(word16 cx, word16 di, selector ds)
fn0C00_0008_entry:
	def di
	def cx
	def ds
	def Mem0
	// succ:  l0C00_0008
l0C00_0008:
	si_8 = 0x0000
	// succ:  l0C00_000D
l0C00_000D:
	si_9 = PHI(si_8, si_16)
	di_10 = PHI(di, di_17)
	branch cx == 0x0000 l0C00_001A
	// succ:  l0C00_0012 l0C00_001A
l0C00_0012:
	si_16 = si_9 + Mem0[ds:di_10:word16]
	di_17 = di_10 + 0x0002
	goto l0C00_000D
	// succ:  l0C00_000D
l0C00_001A:
	ax_20 = si_9
	return ax_20
	// succ:  fn0C00_0008_exit
fn0C00_0008_exit:
