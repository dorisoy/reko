// void fn0C00_0000(Register word16 si, Register word16 di, Register selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: 0
// MayUse:  si di ds
// LiveOut:
// Trashed: SCZO ax bx si al bl ah bh
// Preserved:
// fn0C00_0000
void fn0C00_0000(word16 si, word16 di, selector ds)
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	si_13 = si
	// succ:  2
l0C00_001A:		// block 2, pred: 1 4 5
	word16 ax_27
	word16 si_13
	word16 ax_15 = Mem14[ds:si_13:word16]
	si_13 = si_13 + 0x0002
	branch ax_15 != 0x0020 l0C00_0005
	// succ:  7 3
l0C00_0005:		// block 3, pred: 2
	store(Mem19[ds:di:word16]) = ax_15
	branch ax_15 != 0x0000 l0C00_0011
	// succ:  6 4
l0C00_0011:		// block 4, pred: 3
	branch ax_15 != 0x000D l0C00_001A
	// succ:  5 2
l0C00_0016:		// block 5, pred: 4
	store(Mem25[ds:0x0302:word16]) = Mem19[ds:0x0302:word16] + 0x0001
	// succ:  2
l0C00_000B:		// block 6, pred: 3
	ax_27 = 0xFFFF
	// succ:  8
l0C00_0020:		// block 7, pred: 2
	ax_27 = si_13 - si
	// succ:  8
l0C00_0024:		// block 8, pred: 6 7
	store(Mem35[ds:0x0300:word16]) = ax_27
	return
	// succ:  9
fn0C00_0000_exit:		// block 9, pred: 8
	// succ: 

