// void fn0C00_0000(Register word16 si, Register word16 di, Register selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  si di ds
// LiveOut:
// Trashed: SCZO ax bx si al bl ah bh
// Preserved: sp
// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 si, word16 di, selector ds)
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	si_12 = si
	goto l0C00_001A
	// succ:  l0C00_001A
l0C00_0005:
	Mem24[ds:di:word16] = ax_11
	branch ax_11 != 0x0000 l0C00_0011
	// succ:  l0C00_000B l0C00_0011
l0C00_000B:
	ax_18 = 0xFFFF
	goto l0C00_0024
	// succ:  l0C00_0024
l0C00_0011:
	branch ax_11 != 0x000D l0C00_001A
	// succ:  l0C00_0016 l0C00_001A
l0C00_0016:
	Mem34[ds:0x0302:word16] = Mem24[ds:0x0302:word16] + 0x0001
	// succ:  l0C00_001A
l0C00_001A:
	word16 ax_18
	word16 si_12
	word16 ax_11 = Mem0[ds:si_12:word16]
	si_12 = si_12 + 0x0002
	branch ax_11 != 0x0020 l0C00_0005
	// succ:  l0C00_0020 l0C00_0005
l0C00_0020:
	ax_18 = si_12 - si
	// succ:  l0C00_0024
l0C00_0024:
	Mem20[ds:0x0300:word16] = ax_18
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

