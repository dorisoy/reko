Mem0:Global memory
    def:  def Mem0
    uses: Mem13 = PHI(Mem0, Mem19, Mem27)
fp:Temporary
si:Register si
    def:  def si
    uses: si_12 = PHI(si, si_15, si_15)
          ax_33 = si_15 - si
bx:Register bx
ax:Register ax
ds:Register ds
    def:  def ds
    uses: ax_14 = Mem13[ds:si_12:word16]
          Mem19[ds:di:word16] = ax_14
          Mem27[ds:0x0302:word16] = Mem19[ds:0x0302:word16] + 0x0001
          Mem27[ds:0x0302:word16] = Mem19[ds:0x0302:word16] + 0x0001
          Mem42[ds:0x0300:word16] = ax_40
SCZO:Flags
Z:Flags
di:Register di
    def:  def di
    uses: Mem19[ds:di:word16] = ax_14
v9:Temporary
SZO:Flags
bx_11: orig: bx
si_12: orig: si
    def:  si_12 = PHI(si, si_15, si_15)
    uses: ax_14 = Mem13[ds:si_12:word16]
          si_15 = si_12 + 0x0002
Mem13: orig: Mem0
    def:  Mem13 = PHI(Mem0, Mem19, Mem27)
    uses: ax_14 = Mem13[ds:si_12:word16]
ax_14: orig: ax
    def:  ax_14 = Mem13[ds:si_12:word16]
    uses: Mem19[ds:di:word16] = ax_14
          branch ax_14 != 0x0020 l0C00_0005
          branch ax_14 != 0x0000 l0C00_0011
          branch ax_14 != 0x000D l0C00_001A
si_15: orig: si
    def:  si_15 = si_12 + 0x0002
    uses: si_12 = PHI(si, si_15, si_15)
          si_12 = PHI(si, si_15, si_15)
          ax_33 = si_15 - si
SCZO_16: orig: SCZO
Z_17: orig: Z
SZO_18: orig: SZO
Mem19: orig: Mem0
    def:  Mem19[ds:di:word16] = ax_14
    uses: Mem13 = PHI(Mem0, Mem19, Mem27)
          Mem27[ds:0x0302:word16] = Mem19[ds:0x0302:word16] + 0x0001
SCZO_20: orig: SCZO
Z_21: orig: Z
SZO_22: orig: SZO
SCZO_23: orig: SCZO
Z_24: orig: Z
SZO_25: orig: SZO
v9_26: orig: v9
    uses: Mem27[ds:0x0302:word16] = Mem19[ds:0x0302:word16] + 0x0001
Mem27: orig: Mem0
    def:  Mem27[ds:0x0302:word16] = Mem19[ds:0x0302:word16] + 0x0001
    uses: Mem13 = PHI(Mem0, Mem19, Mem27)
SZO_28: orig: SZO
SCZO_29: orig: SCZO
Z_30: orig: Z
ax_31: orig: ax
    def:  ax_31 = 0xFFFF
    uses: ax_40 = PHI(ax_31, ax_33)
ax_32: orig: ax
ax_33: orig: ax
    def:  ax_33 = si_15 - si
    uses: ax_40 = PHI(ax_31, ax_33)
SCZO_34: orig: SCZO
Z_35: orig: Z
SZO_36: orig: SZO
SZO_37: orig: SZO
Z_38: orig: Z
SCZO_39: orig: SCZO
ax_40: orig: ax
    def:  ax_40 = PHI(ax_31, ax_33)
    uses: Mem42[ds:0x0300:word16] = ax_40
Mem41: orig: Mem0
Mem42: orig: Mem0
    def:  Mem42[ds:0x0300:word16] = ax_40
liveIn: 
fn0C00_0000_entry:		// pred:
	def Mem0
	def si
	def ds
	def di
	// succ:  l0C00_0000
liveOut: Mem0 si ds di

liveIn:  Mem0 si ds di
l0C00_0000:		// pred: fn0C00_0000_entry
	// succ:  l0C00_001A
liveOut: Mem0 si ds di v9_26

liveIn:  si ds di v9_26
l0C00_001A:		// pred: l0C00_0000 l0C00_0011 l0C00_0016
	si_12 = PHI(si, si_15, si_15)
	Mem13 = PHI(Mem0, Mem19, Mem27)
	ax_14 = Mem13[ds:si_12:word16]
	si_15 = si_12 + 0x0002
	branch ax_14 != 0x0020 l0C00_0005
	// succ:  l0C00_0020 l0C00_0005
liveOut: si ds di ax_14 si_15 v9_26

liveIn:  si ds di ax_14 si_15 v9_26
l0C00_0005:		// pred: l0C00_001A
	Mem19[ds:di:word16] = ax_14
	branch ax_14 != 0x0000 l0C00_0011
	// succ:  l0C00_000B l0C00_0011
liveOut: si ds di ax_14 si_15 Mem19 v9_26

liveIn:  si ds di ax_14 si_15 Mem19 v9_26
l0C00_0011:		// pred: l0C00_0005
	branch ax_14 != 0x000D l0C00_001A
	// succ:  l0C00_0016 l0C00_001A
liveOut: si ds di si_15 Mem19 v9_26

liveIn:  si ds di Mem19 v9_26
l0C00_0016:		// pred: l0C00_0011
	Mem27[ds:0x0302:word16] = Mem19[ds:0x0302:word16] + 0x0001
	// succ:  l0C00_001A
liveOut: si ds di v9_26 Mem27

liveIn:  ds
l0C00_000B:		// pred: l0C00_0005
	ax_31 = 0xFFFF
	// succ:  l0C00_0024
liveOut: ds ax_31

liveIn:  si ds si_15
l0C00_0020:		// pred: l0C00_001A
	ax_33 = si_15 - si
	// succ:  l0C00_0024
liveOut: ds ax_33

liveIn:  ds
l0C00_0024:		// pred: l0C00_000B l0C00_0020
	ax_40 = PHI(ax_31, ax_33)
	Mem42[ds:0x0300:word16] = ax_40
	return
	// succ:  fn0C00_0000_exit
liveOut:

liveIn: 
fn0C00_0000_exit:		// pred: l0C00_0024
	// succ: 
liveOut:


