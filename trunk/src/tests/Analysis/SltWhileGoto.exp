fp:fp
sp_1: orig: sp
si:si
    def:  def si
    uses: si_4 = PHI(si, si_8, si_8)
          ax_20 = si_8 - si
bx_3: orig: bx
si_4: orig: si
    def:  si_4 = PHI(si, si_8, si_8)
    uses: ax_7 = Mem0[ds:si_4:word16]
          si_8 = si_4 + 0x0002
ds:ds
    def:  def ds
    uses: ax_7 = Mem0[ds:si_4:word16]
          Mem18[ds:0x0300:word16] = ax_13
          Mem25[ds:di:word16] = ax_7
          Mem38[ds:0x0302:word16] = Mem25[ds:0x0302:word16] + 0x0001
          Mem38[ds:0x0302:word16] = Mem25[ds:0x0302:word16] + 0x0001
Mem0:Global memory
    def:  def Mem0
    uses: ax_7 = Mem0[ds:si_4:word16]
ax_7: orig: ax
    def:  ax_7 = Mem0[ds:si_4:word16]
    uses: Mem25[ds:di:word16] = ax_7
          branch ax_7 != 0x0020 l0C00_0005
          branch ax_7 != 0x0000 l0C00_0011
          branch ax_7 != 0x000D l0C00_001A
si_8: orig: si
    def:  si_8 = si_4 + 0x0002
    uses: si_4 = PHI(si, si_8, si_8)
          si_4 = PHI(si, si_8, si_8)
          ax_20 = si_8 - si
SCZO_9: orig: SCZO
Z_10: orig: Z
SZO_11: orig: SZO
C_12: orig: C
ax_13: orig: ax
    def:  ax_13 = PHI(ax_20, ax_32)
    uses: Mem18[ds:0x0300:word16] = ax_13
SCZO_14: orig: SCZO
Z_15: orig: Z
SZO_16: orig: SZO
C_17: orig: C
Mem18: orig: Mem0
    def:  Mem18[ds:0x0300:word16] = ax_13
ax_19: orig: ax
ax_20: orig: ax
    def:  ax_20 = si_8 - si
    uses: ax_13 = PHI(ax_20, ax_32)
SCZO_21: orig: SCZO
Z_22: orig: Z
SZO_23: orig: SZO
C_24: orig: C
Mem25: orig: Mem0
    def:  Mem25[ds:di:word16] = ax_7
    uses: Mem38[ds:0x0302:word16] = Mem25[ds:0x0302:word16] + 0x0001
di:di
    def:  def di
    uses: Mem25[ds:di:word16] = ax_7
ax_27: orig: ax
SZO_28: orig: SZO
Z_29: orig: Z
C_30: orig: C
SCZO_31: orig: SCZO
ax_32: orig: ax
    def:  ax_32 = 0xFFFF
    uses: ax_13 = PHI(ax_20, ax_32)
SCZO_33: orig: SCZO
Z_34: orig: Z
SZO_35: orig: SZO
C_36: orig: C
v12_37: orig: v12
Mem38: orig: Mem0
    def:  Mem38[ds:0x0302:word16] = Mem25[ds:0x0302:word16] + 0x0001
SZO_39: orig: SZO
SCZO_40: orig: SCZO
Z_41: orig: Z
// fn0C00_0000
void fn0C00_0000()
	// liveIn: 
fn0C00_0000_entry:
	def si
	def ds
	def Mem0
	def di
	// liveOut: si ds Mem0 di
	// liveIn: si ds Mem0 di
l0C00_0000:
	goto l0C00_001A
	// liveOut: si ds Mem0 di
	// liveIn: si ds Mem0 ax_7 si_8 di
l0C00_0005:
	Mem25[ds:di:word16] = ax_7
	branch ax_7 != 0x0000 l0C00_0011
	// liveOut: si ds Mem0 ax_7 si_8 Mem25 di
	// liveIn: ds
l0C00_000B:
	ax_32 = 0xFFFF
	goto l0C00_0024
	// liveOut: ds ax_32
	// liveIn: si ds Mem0 ax_7 si_8 Mem25 di
l0C00_0011:
	branch ax_7 != 0x000D l0C00_001A
	// liveOut: si ds Mem0 si_8 Mem25 di
	// liveIn: si ds Mem0 Mem25 di
l0C00_0016:
	Mem38[ds:0x0302:word16] = Mem25[ds:0x0302:word16] + 0x0001
	// liveOut: si ds Mem0 di
	// liveIn: si ds Mem0 di
l0C00_001A:
	si_4 = PHI(si, si_8, si_8)
	ax_7 = Mem0[ds:si_4:word16]
	si_8 = si_4 + 0x0002
	branch ax_7 != 0x0020 l0C00_0005
	// liveOut: si ds Mem0 ax_7 si_8 di
	// liveIn: si ds si_8
l0C00_0020:
	ax_20 = si_8 - si
	// liveOut: ds ax_20
	// liveIn: ds
l0C00_0024:
	ax_13 = PHI(ax_20, ax_32)
	Mem18[ds:0x0300:word16] = ax_13
	return
	// liveOut: 
	// liveIn: 
fn0C00_0000_exit:
	// liveOut: 

