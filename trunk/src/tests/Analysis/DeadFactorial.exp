Mem0: Mem0:Global memory
fp: fp:Temporary
cx: cx:Register
wLoc02: wLoc02:Local -0002
ax: ax:Register
ds: ds:Register, def: {def ds}, uses: {store(Mem9[ds:0x0064:word16]) = ax_8}
cx_6: orig: cx, def: {cx_6 = 0x0064}, uses: {wLoc02_7 = cx_6}
wLoc02_7: orig: wLoc02, def: {wLoc02_7 = cx_6}, uses: {ax_8 = fn0C00_000F(wLoc02_7)}
ax_8: orig: ax, def: {ax_8 = fn0C00_000F(wLoc02_7)}, uses: {store(Mem9[ds:0x0064:word16]) = ax_8}
Mem9: orig: Mem0, def: {store(Mem9[ds:0x0064:word16]) = ax_8}
// fn0C00_0000
void fn0C00_0000(segment ds)
fn0C00_0000_entry:		// block 0, pred:
	def ds
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	cx_6 = 0x0064
	wLoc02_7 = cx_6
	ax_8 = fn0C00_000F(wLoc02_7)
	store(Mem9[ds:0x0064:word16]) = ax_8
	return
	// succ:  2
fn0C00_0000_exit:		// block 2, pred: 1
	// succ: 
Mem0: Mem0:Global memory
fp: fp:Temporary
bp: bp:Register
wLoc02: wLoc02:Local -0002
wArg02: wArg02:Stack +0002, def: {def wArg02}, uses: {ax_12 = wArg02}{dx_22 = wArg02}
ax: ax:Register
SZO: SZO:Flags
Z: Z:Flags
wLoc04: wLoc04:Local -0004
dx: dx:Register
dx_ax: dx_ax:Sequence dx:ax
SCZO: SCZO:Flags
ax_12: orig: ax, def: {ax_12 = wArg02}, uses: {ax_13 = ax_12 - 0x0001}
ax_13: orig: ax, def: {ax_13 = ax_12 - 0x0001}, uses: {wLoc04_20 = ax_13}{branch ax_13 == 0x0000}
dx_ax_14: orig: dx_ax
SZO_15: orig: SZO
Z_16: orig: Z
SCZO_17: orig: SCZO
ax_18: orig: ax, def: {ax_18 = 0x0001}, uses: {ax_35 = PHI(ax_24, ax_18)}
dx_ax_19: orig: dx_ax
wLoc04_20: orig: wLoc04, def: {wLoc04_20 = ax_13}, uses: {ax_21 = fn0C00_000F(wLoc04_20)}
ax_21: orig: ax, def: {ax_21 = fn0C00_000F(wLoc04_20)}, uses: {dx_ax_23 = dx_22 * ax_21}
dx_22: orig: dx, def: {dx_22 = wArg02}, uses: {dx_ax_23 = dx_22 * ax_21}
dx_ax_23: orig: dx_ax, def: {dx_ax_23 = dx_22 * ax_21}, uses: {ax_24 = (word16) dx_ax_23 (alias)}
ax_24: orig: ax, def: {ax_24 = (word16) dx_ax_23 (alias)}, uses: {ax_35 = PHI(ax_24, ax_18)}
dx_25: orig: dx
SCZO_26: orig: SCZO
SZO_27: orig: SZO
Z_28: orig: Z
SCZO_29: orig: SCZO
dx_ax_30: orig: dx_ax
dx_31: orig: dx
wLoc04_32: orig: wLoc04
Z_33: orig: Z
SZO_34: orig: SZO
ax_35: orig: ax, def: {ax_35 = PHI(ax_24, ax_18)}, uses: {return ax_35}
// fn0C00_000F
word16 fn0C00_000F(word16 wArg02)
fn0C00_000F_entry:		// block 0, pred:
	def wArg02
	// succ:  1
l0C00_000F:		// block 1, pred: 0
	ax_12 = wArg02
	ax_13 = ax_12 - 0x0001
	branch ax_13 == 0x0000
	// succ:  3 2
l0C00_0026:		// block 2, pred: 1
	ax_18 = 0x0001
	// succ:  4
l0C00_0018:		// block 3, pred: 1
	wLoc04_20 = ax_13
	ax_21 = fn0C00_000F(wLoc04_20)
	dx_22 = wArg02
	dx_ax_23 = dx_22 * ax_21
	ax_24 = (word16) dx_ax_23 (alias)
	// succ:  4
l0C00_0029:		// block 4, pred: 3 2
	ax_35 = PHI(ax_24, ax_18)
	return ax_35
	// succ:  5
fn0C00_000F_exit:		// block 5, pred: 4
	// succ: 
