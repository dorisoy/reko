fn0C00_0000
	LiveOut:  
	MayUseIn:  ds
	BypassIn: 
	Trashed:   ax si al ah
	Preserved:
// fn0C00_0000
void fn0C00_0000()
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
// DataOut: ds
l0C00_0000:		// block 1, pred: 0
	si = 0x1234
	call fn0C00_000B (depth: 0;)
	store(Mem0[ds:0x5431:word16]) = ax
	return
	// succ:  2
// DataOut:
fn0C00_0000_exit:		// block 2, pred: 1
	// succ: 
// DataOut:
fn0C00_000B
	LiveOut:   ax ds
	MayUseIn:  si ds
	BypassIn: 
	Trashed:   ax al ah
	Preserved: si
// fn0C00_000B
void fn0C00_000B()
fn0C00_000B_entry:		// block 0, pred:
	// succ:  1
// DataOut: si ds
l0C00_000B:		// block 1, pred: 0
	call fn0C00_0011 (depth: 2;)
	return
	// succ:  2
// DataOut: ax ds
fn0C00_000B_exit:		// block 2, pred: 1
	// succ: 
// DataOut: ax ds
fn0C00_0011
	LiveOut:   ax ds
	MayUseIn:  si ds
	BypassIn: 
	Trashed:   ax al ah
	Preserved:
// fn0C00_0011
void fn0C00_0011()
fn0C00_0011_entry:		// block 0, pred:
	// succ:  1
// DataOut: si ds
l0C00_0011:		// block 1, pred: 0
	ax = Mem0[ds:si + 0x0004:word16]
	return
	// succ:  2
// DataOut: ax ds
fn0C00_0011_exit:		// block 2, pred: 1
	// succ: 
// DataOut: ax ds
