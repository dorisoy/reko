Mem0:Global memory
    def:  def Mem0
    uses: branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          v7_23 = Mem0[ds:0x0106:word16] - Mem0[ds:0x0104:word16]
          v7_23 = Mem0[ds:0x0106:word16] - Mem0[ds:0x0104:word16]
          branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
fp:fp
sp:sp
ax:ax
ds:ds
    def:  def ds
    uses: branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          v7_23 = Mem0[ds:0x0106:word16] - Mem0[ds:0x0104:word16]
          v7_23 = Mem0[ds:0x0106:word16] - Mem0[ds:0x0104:word16]
          Mem24[ds:0x0106:word16] = v7_23
          branch (Mem24[ds:0x0106:word16] & Mem24[ds:0x0108:word16]) == 0x0000 l0C00_002D
          branch (Mem24[ds:0x0106:word16] & Mem24[ds:0x0108:word16]) == 0x0000 l0C00_002D
          branch Mem24[ds:0x010A:word16] >=u Mem24[ds:0x010C:word16] l0C00_003D
          Mem72[ds:0x0F07:byte] = 0x01
          Mem74[ds:0x0F05:byte] = 0x01
          Mem75[ds:0x0F04:byte] = 0x01
          Mem76[ds:0x0F03:byte] = 0x01
          Mem77[ds:0x0F02:byte] = 0x01
          Mem78[ds:0x0F01:byte] = 0x01
          Mem79[ds:0x0F00:byte] = 0x01
          branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          branch Mem24[ds:0x010A:word16] >=u Mem24[ds:0x010C:word16] l0C00_003D
          branch (Mem24[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056
SCZO:Flags
Z:Flags
v7:v7
SZO:Flags
C:Flags
ss:ss
    def:  def ss
    uses: Mem73[ss:bp - 0x000A:byte] = 0x01
bp:bp
    def:  def bp
    uses: branch bp < 0x0010 l0C00_005F
          branch !OVERFLOW((bp - 0x0010) * 0x0002) l0C00_0068
          Mem73[ss:bp - 0x000A:byte] = 0x01
          Mem73[ss:bp - 0x000A:byte] = 0x01
SO:Flags
O:Flags
wLoc02:Local -0002
ax_15: orig: ax
SCZO_16: orig: SCZO
Z_17: orig: Z
SZO_18: orig: SZO
C_19: orig: C
SO_20: orig: SO
O_21: orig: O
ax_22: orig: ax
v7_23: orig: v7
    def:  v7_23 = Mem0[ds:0x0106:word16] - Mem0[ds:0x0104:word16]
    uses: Mem24[ds:0x0106:word16] = v7_23
          branch v7_23 <= 0x0000 l0C00_001E
Mem24: orig: Mem0
    def:  Mem24[ds:0x0106:word16] = v7_23
    uses: branch (Mem24[ds:0x0106:word16] & Mem24[ds:0x0108:word16]) == 0x0000 l0C00_002D
          branch (Mem24[ds:0x0106:word16] & Mem24[ds:0x0108:word16]) == 0x0000 l0C00_002D
          branch Mem24[ds:0x010A:word16] >=u Mem24[ds:0x010C:word16] l0C00_003D
          branch Mem24[ds:0x010A:word16] >=u Mem24[ds:0x010C:word16] l0C00_003D
          branch (Mem24[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056
SCZO_25: orig: SCZO
Z_26: orig: Z
SZO_27: orig: SZO
C_28: orig: C
SO_29: orig: SO
O_30: orig: O
ax_31: orig: ax
ax_32: orig: ax
SZO_33: orig: SZO
Z_34: orig: Z
SO_35: orig: SO
O_36: orig: O
C_37: orig: C
SCZO_38: orig: SCZO
ax_39: orig: ax
SCZO_40: orig: SCZO
Z_41: orig: Z
SZO_42: orig: SZO
C_43: orig: C
SO_44: orig: SO
O_45: orig: O
C_46: orig: C
SCZO_47: orig: SCZO
sp_48: orig: sp
wLoc02_49: orig: wLoc02
C_50: orig: C
SCZO_51: orig: SCZO
SZO_52: orig: SZO
Z_53: orig: Z
SO_54: orig: SO
O_55: orig: O
C_56: orig: C
SCZO_57: orig: SCZO
bp_58: orig: bp
SCZO_59: orig: SCZO
Z_60: orig: Z
SZO_61: orig: SZO
C_62: orig: C
SO_63: orig: SO
O_64: orig: O
bp_65: orig: bp
SCZO_66: orig: SCZO
Z_67: orig: Z
SZO_68: orig: SZO
C_69: orig: C
SO_70: orig: SO
O_71: orig: O
Mem72: orig: Mem0
    def:  Mem72[ds:0x0F07:byte] = 0x01
Mem73: orig: Mem0
    def:  Mem73[ss:bp - 0x000A:byte] = 0x01
Mem74: orig: Mem0
    def:  Mem74[ds:0x0F05:byte] = 0x01
Mem75: orig: Mem0
    def:  Mem75[ds:0x0F04:byte] = 0x01
Mem76: orig: Mem0
    def:  Mem76[ds:0x0F03:byte] = 0x01
Mem77: orig: Mem0
    def:  Mem77[ds:0x0F02:byte] = 0x01
Mem78: orig: Mem0
    def:  Mem78[ds:0x0F01:byte] = 0x01
Mem79: orig: Mem0
    def:  Mem79[ds:0x0F00:byte] = 0x01
// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 bp, selector ds)
fn0C00_0000_entry:
	def Mem0
	def ds
	def ss
	def bp
	// succ:  l0C00_0000
l0C00_0000:
	branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
	// succ:  l0C00_000A l0C00_000F
l0C00_000A:
	Mem79[ds:0x0F00:byte] = 0x01
	// succ:  l0C00_000F
l0C00_000F:
	v7_23 = Mem0[ds:0x0106:word16] - Mem0[ds:0x0104:word16]
	Mem24[ds:0x0106:word16] = v7_23
	branch v7_23 <= 0x0000 l0C00_001E
	// succ:  l0C00_0019 l0C00_001E
l0C00_0019:
	Mem78[ds:0x0F01:byte] = 0x01
	// succ:  l0C00_001E
l0C00_001E:
	branch (Mem24[ds:0x0106:word16] & Mem24[ds:0x0108:word16]) == 0x0000 l0C00_002D
	// succ:  l0C00_0028 l0C00_002D
l0C00_0028:
	Mem77[ds:0x0F02:byte] = 0x01
	// succ:  l0C00_002D
l0C00_002D:
	branch Mem24[ds:0x010A:word16] >=u Mem24[ds:0x010C:word16] l0C00_003D
	// succ:  l0C00_0038 l0C00_003D
l0C00_0038:
	Mem76[ds:0x0F03:byte] = 0x01
	// succ:  l0C00_003D
l0C00_003D:
	branch fn0C00_0069(0x0003) l0C00_0049
	// succ:  l0C00_0044 l0C00_0049
l0C00_0044:
	Mem75[ds:0x0F04:byte] = 0x01
	// succ:  l0C00_0049
l0C00_0049:
	branch (Mem24[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056
	// succ:  l0C00_0051 l0C00_0056
l0C00_0051:
	Mem74[ds:0x0F05:byte] = 0x01
	// succ:  l0C00_0056
l0C00_0056:
	branch bp < 0x0010 l0C00_005F
	// succ:  l0C00_005B l0C00_005F
l0C00_005B:
	Mem73[ss:bp - 0x000A:byte] = 0x01
	// succ:  l0C00_005F
l0C00_005F:
	branch !OVERFLOW((bp - 0x0010) * 0x0002) l0C00_0068
	// succ:  l0C00_0063 l0C00_0068
l0C00_0063:
	Mem72[ds:0x0F07:byte] = 0x01
	// succ:  l0C00_0068
l0C00_0068:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

Mem0:Global memory
fp:fp
sp:sp
bp:bp
ss:ss
SCZO:Flags
wLoc02:Local -0002
wArg02:Stack +0002
    def:  def wArg02
    uses: return cond(wArg02)
C:Flags
sp_9: orig: sp
wLoc02_10: orig: wLoc02
bp_11: orig: bp
SCZO_12: orig: SCZO
C_13: orig: C
bp_14: orig: bp
sp_15: orig: sp
// fn0C00_0069
// Return size: 0
bool fn0C00_0069(word16 wArg02)
fn0C00_0069_entry:
	def wArg02
	// succ:  l0C00_0069
l0C00_0069:
	return cond(wArg02)
	// succ:  fn0C00_0069_exit
fn0C00_0069_exit:

