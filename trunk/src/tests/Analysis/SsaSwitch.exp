Mem0: Mem0:Global memory, def: {def Mem0}, uses: {bl_13 = Mem0[ds_12:si:byte]}
fp: fp:Temporary, def: {def fp}
wLoc02: wLoc02:Local -0002, def: {def wLoc02}
ds: ds:Register, def: {def ds}
si: si:Register, def: {def si}, uses: {bl_13 = Mem0[ds_12:si:byte]}
bl: bl:Register, def: {def bl}
SCZO: SCZO:Flags, def: {def SCZO}
CZ: CZ:Flags, def: {def CZ}
bh: bh:Register, def: {def bh}, uses: {bh_30 = PHI(bh_22, bh_22, bh_22, bh)}
bx: bx:Register, def: {def bx}, uses: {bx_14 = DPB(bx, bl_13, 0, 8) (alias)}
ax: ax:Register, def: {def ax}
wLoc02_11: orig: wLoc02, def: {wLoc02_11 = 0x0C00}, uses: {ds_12 = wLoc02_11}
ds_12: orig: ds, def: {ds_12 = wLoc02_11}, uses: {bl_13 = Mem0[ds_12:si:byte]}
bl_13: orig: bl, def: {bl_13 = Mem0[ds_12:si:byte]}, uses: {bx_14 = DPB(bx, bl_13, 0, 8) (alias)}{SCZO_15 = cond(bl_13 - 0x02)}{bl_33 = PHI(bl_21, bl_21, bl_21, bl_13)}
bx_14: orig: bx, def: {bx_14 = DPB(bx, bl_13, 0, 8) (alias)}, uses: {bx_29 = PHI(bx_20, bx_20, bx_20, bx_14)}{bx_19 = DPB(bx_14, bh_18, 8, 8) (alias)}
SCZO_15: orig: SCZO, def: {SCZO_15 = cond(bl_13 - 0x02)}, uses: {CZ_16 = SCZO_15 (alias)}{SCZO_32 = PHI(SCZO_23, SCZO_23, SCZO_23, SCZO_15)}
CZ_16: orig: CZ, def: {CZ_16 = SCZO_15 (alias)}, uses: {branch Test(UGT,CZ_16)}{CZ_31 = PHI(CZ_24, CZ_24, CZ_24, CZ_16)}
ax_17: orig: ax, def: {ax_17 = 0x0000}, uses: {ax_28 = PHI(ax_27, ax_26, ax_25, ax_17)}
bh_18: orig: bh, def: {bh_18 = 0x00}, uses: {bx_19 = DPB(bx_14, bh_18, 8, 8) (alias)}
bx_19: orig: bx, def: {bx_19 = DPB(bx_14, bh_18, 8, 8) (alias)}, uses: {bx_20 = bx_19 + bx_19}{bx_20 = bx_19 + bx_19}
bx_20: orig: bx, def: {bx_20 = bx_19 + bx_19}, uses: {bl_21 = (byte) bx_20 (alias)}{bh_22 = SLICE(bx_20, byte, 8) (alias)}{SCZO_23 = cond(bx_20)}{bx_29 = PHI(bx_20, bx_20, bx_20, bx_14)}{bx_29 = PHI(bx_20, bx_20, bx_20, bx_14)}{bx_29 = PHI(bx_20, bx_20, bx_20, bx_14)}
bl_21: orig: bl, def: {bl_21 = (byte) bx_20 (alias)}, uses: {switch (bl_21) { 6 5 4 }}{bl_33 = PHI(bl_21, bl_21, bl_21, bl_13)}{bl_33 = PHI(bl_21, bl_21, bl_21, bl_13)}{bl_33 = PHI(bl_21, bl_21, bl_21, bl_13)}
bh_22: orig: bh, def: {bh_22 = SLICE(bx_20, byte, 8) (alias)}, uses: {bh_30 = PHI(bh_22, bh_22, bh_22, bh)}{bh_30 = PHI(bh_22, bh_22, bh_22, bh)}{bh_30 = PHI(bh_22, bh_22, bh_22, bh)}
SCZO_23: orig: SCZO, def: {SCZO_23 = cond(bx_20)}, uses: {CZ_24 = SCZO_23 (alias)}{SCZO_32 = PHI(SCZO_23, SCZO_23, SCZO_23, SCZO_15)}{SCZO_32 = PHI(SCZO_23, SCZO_23, SCZO_23, SCZO_15)}{SCZO_32 = PHI(SCZO_23, SCZO_23, SCZO_23, SCZO_15)}
CZ_24: orig: CZ, def: {CZ_24 = SCZO_23 (alias)}, uses: {CZ_31 = PHI(CZ_24, CZ_24, CZ_24, CZ_16)}{CZ_31 = PHI(CZ_24, CZ_24, CZ_24, CZ_16)}{CZ_31 = PHI(CZ_24, CZ_24, CZ_24, CZ_16)}
ax_25: orig: ax, def: {ax_25 = 0x0003}, uses: {ax_28 = PHI(ax_27, ax_26, ax_25, ax_17)}
ax_26: orig: ax, def: {ax_26 = 0x0002}, uses: {ax_28 = PHI(ax_27, ax_26, ax_25, ax_17)}
ax_27: orig: ax, def: {ax_27 = 0x0001}, uses: {ax_28 = PHI(ax_27, ax_26, ax_25, ax_17)}
ax_28: orig: ax, def: {ax_28 = PHI(ax_27, ax_26, ax_25, ax_17)}
bx_29: orig: bx, def: {bx_29 = PHI(bx_20, bx_20, bx_20, bx_14)}
bh_30: orig: bh, def: {bh_30 = PHI(bh_22, bh_22, bh_22, bh)}
CZ_31: orig: CZ, def: {CZ_31 = PHI(CZ_24, CZ_24, CZ_24, CZ_16)}
SCZO_32: orig: SCZO, def: {SCZO_32 = PHI(SCZO_23, SCZO_23, SCZO_23, SCZO_15)}
bl_33: orig: bl, def: {bl_33 = PHI(bl_21, bl_21, bl_21, bl_13)}
// fn0C00_0000
void fn0C00_0000()
fn0C00_0000_entry:		// block 0, pred:
	def Mem0
	def fp
	def wLoc02
	def ds
	def si
	def bl
	def SCZO
	def CZ
	def bh
	def bx
	def ax
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	wLoc02_11 = 0x0C00
	ds_12 = wLoc02_11
	bl_13 = Mem0[ds_12:si:byte]
	bx_14 = DPB(bx, bl_13, 0, 8) (alias)
	SCZO_15 = cond(bl_13 - 0x02)
	CZ_16 = SCZO_15 (alias)
	branch Test(UGT,CZ_16)
	// succ:  3 2
l0C00_0023:		// block 2, pred: 1
	ax_17 = 0x0000
	return
	// succ:  7
l0C00_0009:		// block 3, pred: 1
	bh_18 = 0x00
	bx_19 = DPB(bx_14, bh_18, 8, 8) (alias)
	bx_20 = bx_19 + bx_19
	bl_21 = (byte) bx_20 (alias)
	bh_22 = SLICE(bx_20, byte, 8) (alias)
	SCZO_23 = cond(bx_20)
	CZ_24 = SCZO_23 (alias)
	switch (bl_21) { 6 5 4 }
	// succ:  6 5 4
l0C00_001F:		// block 4, pred: 3
	ax_25 = 0x0003
	return
	// succ:  7
l0C00_001B:		// block 5, pred: 3
	ax_26 = 0x0002
	return
	// succ:  7
l0C00_0017:		// block 6, pred: 3
	ax_27 = 0x0001
	return
	// succ:  7
fn0C00_0000_exit:		// block 7, pred: 6 5 4 2
	ax_28 = PHI(ax_27, ax_26, ax_25, ax_17)
	bx_29 = PHI(bx_20, bx_20, bx_20, bx_14)
	bh_30 = PHI(bh_22, bh_22, bh_22, bh)
	CZ_31 = PHI(CZ_24, CZ_24, CZ_24, CZ_16)
	SCZO_32 = PHI(SCZO_23, SCZO_23, SCZO_23, SCZO_15)
	bl_33 = PHI(bl_21, bl_21, bl_21, bl_13)
	// succ: 

