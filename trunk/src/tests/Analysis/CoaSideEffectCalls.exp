Mem0: Mem0:Global memory
fp: fp:Temporary
bx: bx:Register bx
ds: ds:Register ds, def: {def ds}, uses: {store(Mem7[ds:0x0300:word16]) = bx_5}{fn0C00_0015(fn0C00_000E(&bx_8), ds)}
ax: ax:Register ax
bx_5: orig: bx, def: {fn0C00_000E(&bx_5)}, uses: {store(Mem7[ds:0x0300:word16]) = bx_5}
ax_6: orig: ax
Mem7: orig: Mem0, def: {store(Mem7[ds:0x0300:word16]) = bx_5}
bx_8: orig: bx, def: {fn0C00_0015(fn0C00_000E(&bx_8), ds)}
ax_9: orig: ax, uses: {fn0C00_0015(fn0C00_000E(&bx_8), ds)}
// fn0C00_0000
void fn0C00_0000(segment ds)
fn0C00_0000_entry:		// block 0, pred:
	def ds
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	fn0C00_000E(&bx_5)
	store(Mem7[ds:0x0300:word16]) = bx_5
	ax_9 = fn0C00_000E(&bx_8)
	fn0C00_0015(ax_9, ds)
	return
	// succ:  2
fn0C00_0000_exit:		// block 2, pred: 1
	// succ: 

Mem0: Mem0:Global memory
fp: fp:Temporary
ax: ax:Register ax
bx: bx:Register bx
bxOut: bxOut:Out:Register bx
ax_5: orig: ax
bx_6: orig: bx, def: {bx_6 = 0x002B}, uses: {use bx_6 (=> bxOut)}
// fn0C00_000E
word16 fn0C00_000E(ptr0 bxOut)
fn0C00_000E_entry:		// block 0, pred:
	// succ:  1
l0C00_000E:		// block 1, pred: 0
	bx_6 = 0x002B
	return 0x002A
	// succ:  2
fn0C00_000E_exit:		// block 2, pred: 1
	use bx_6 (=> bxOut)
	// succ: 

Mem0: Mem0:Global memory
fp: fp:Temporary
ax: ax:Register ax, def: {def ax}, uses: {store(Mem4[ds:0x0400:word16]) = ax}
ds: ds:Register ds, def: {def ds}, uses: {store(Mem4[ds:0x0400:word16]) = ax}
Mem4: orig: Mem0, def: {store(Mem4[ds:0x0400:word16]) = ax}
// fn0C00_0015
void fn0C00_0015(word16 ax, segment ds)
fn0C00_0015_entry:		// block 0, pred:
	def ax
	def ds
	// succ:  1
l0C00_0015:		// block 1, pred: 0
	store(Mem4[ds:0x0400:word16]) = ax
	return
	// succ:  2
fn0C00_0015_exit:		// block 2, pred: 1
	// succ: 

