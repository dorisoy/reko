// void fn0C00_0000(Register segment ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: 0
// MayUse:  ds
// LiveOut:
// Trashed: SCZO ax dx al dl ah dh
// Preserved:
// fn0C00_0000
void fn0C00_0000(segment ds)
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	store(Mem7[ds:0x012C:word16]) = fn0C00_000B(0x001E)
	return
	// succ:  2
fn0C00_0000_exit:		// block 2, pred: 1
	// succ: 

// Register word16 fn0C00_000B(Register word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: 0
// MayUse:  dx
// LiveOut: ax
// Trashed: SCZO ax dx al dl ah dh
// Preserved:
// fn0C00_000B
word16 fn0C00_000B(word16 dx)
fn0C00_000B_entry:		// block 0, pred:
	// succ:  1
l0C00_000B:		// block 1, pred: 0
	return fn0C00_000F(dx)
	// succ:  2
fn0C00_000B_exit:		// block 2, pred: 1
	// succ: 

// Register word16 fn0C00_000F(Register word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: 0
// MayUse:  dx
// LiveOut: ax
// Trashed: SCZO ax dx al dl ah dh
// Preserved: si
// fn0C00_000F
word16 fn0C00_000F(word16 dx)
fn0C00_000F_entry:		// block 0, pred:
	// succ:  1
l0C00_000F:		// block 1, pred: 0
	word16 si_9 = 0x0000
	// succ:  2
l0C00_0018:		// block 2, pred: 1 3
	branch dx >= 0x0000
	// succ:  4 3
l0C00_0015:		// block 3, pred: 2
	si_9 = si_9 + dx
	dx = dx - 0x0001
	// succ:  2
l0C00_001D:		// block 4, pred: 2
	return si_9
	// succ:  5
fn0C00_000F_exit:		// block 5, pred: 4
	// succ: 

