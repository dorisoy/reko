Mem0:Global memory
    def:  def Mem0
    uses: ax_13 = Mem0[ss:bp + 0x0006:word16]
fp:Temporary
bx:Register bx
bp:Register bp
    def:  def bp
    uses: ax_13 = Mem0[ss:bp + 0x0006:word16]
ss:Register ss
    def:  def ss
    uses: ax_13 = Mem0[ss:bp + 0x0006:word16]
ax:Register ax
SCZO:Flags
SZO:Flags
C:Flags
ds:Register ds
    def:  def ds
    uses: Mem34[ds:0x0300:word16] = bx_33
cx:Register cx
Z:Flags
bx_12: orig: bx
    def:  bx_12 = 0x0000
    uses: bx_22 = PHI(bx_12, bx_23)
ax_13: orig: ax
    def:  ax_13 = Mem0[ss:bp + 0x0006:word16]
    uses: ax_16 = -ax_13
          cx_20 = ax_13
          branch ax_13 <= 0x0000 l0C00_0012
SCZO_14: orig: SCZO
SZO_15: orig: SZO
ax_16: orig: ax
    def:  ax_16 = -ax_13
    uses: bx_19 = ax_16
SZO_17: orig: SZO
C_18: orig: C
bx_19: orig: bx
    def:  bx_19 = ax_16
    uses: bx_33 = PHI(bx_19, bx_23)
cx_20: orig: cx
    def:  cx_20 = ax_13
    uses: cx_21 = PHI(cx_20, cx_25)
cx_21: orig: cx
    def:  cx_21 = PHI(cx_20, cx_25)
    uses: bx_23 = bx_22 + cx_21
          cx_25 = cx_21 - 0x0001
bx_22: orig: bx
    def:  bx_22 = PHI(bx_12, bx_23)
    uses: bx_23 = bx_22 + cx_21
bx_23: orig: bx
    def:  bx_23 = bx_22 + cx_21
    uses: bx_22 = PHI(bx_12, bx_23)
          bx_33 = PHI(bx_19, bx_23)
SCZO_24: orig: SCZO
cx_25: orig: cx
    def:  cx_25 = cx_21 - 0x0001
    uses: cx_21 = PHI(cx_20, cx_25)
          branch cx_25 != 0x0000 l0C00_000B
Z_26: orig: Z
Z_27: orig: Z
cx_28: orig: cx
C_29: orig: C
SZO_30: orig: SZO
SCZO_31: orig: SCZO
ax_32: orig: ax
bx_33: orig: bx
    def:  bx_33 = PHI(bx_19, bx_23)
    uses: Mem34[ds:0x0300:word16] = bx_33
Mem34: orig: Mem0
    def:  Mem34[ds:0x0300:word16] = bx_33
// fn0C00_0000
void fn0C00_0000(selector ds, word16 wArg04)
fn0C00_0000_entry:
	def ds
	def wArg04
	// succ:  l0C00_0000
l0C00_0000:
	bx_17 = 0x0000
	branch wArg04 <= 0x0000 l0C00_0015
	// succ:  l0C00_000C l0C00_0015
l0C00_000C:
	cx_32 = wArg04
	// succ:  l0C00_000E
l0C00_000E:
	cx_33 = PHI(cx_32, cx_37)
	bx_34 = PHI(bx_17, bx_35)
	bx_35 = bx_34 + cx_33
	cx_37 = cx_33 - 0x0001
	branch cx_37 != 0x0001 l0C00_000E
	// succ:  l0C00_0012 l0C00_000E
l0C00_0012:
	goto l0C00_0019
	// succ:  l0C00_0019
l0C00_0015:
	ax_38 = -wArg04
	bx_41 = ax_38
	// succ:  l0C00_0019
l0C00_0019:
	bx_28 = PHI(bx_35, bx_41)
	Mem29[ds:0x0300:word16] = bx_28
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

