Mem0:Global memory
    def:  def Mem0
    uses: ax_15 = Mem0[ds:si_14:word16]
fp:Temporary
sp:sp
bx:bx
si:si
    def:  def si
    uses: si_14 = PHI(si, si_16, si_16)
          ax_28 = si_14 + 0x0002 - si
ax:ax
ds:ds
    def:  def ds
    uses: ax_15 = Mem0[ds:si_14:word16]
          Mem26[ds:0x0300:word16] = ax_25
          Mem33[ds:di:word16] = ax_15
          Mem45[ds:0x0302:word16] = Mem33[ds:0x0302:word16] + 0x0001
          Mem45[ds:0x0302:word16] = Mem33[ds:0x0302:word16] + 0x0001
SCZO:Flags
Z:Flags
di:di
    def:  def di
    uses: Mem33[ds:di:word16] = ax_15
SZO:Flags
C:Flags
v12:Temporary
bx_13: orig: bx
si_14: orig: si
    def:  si_14 = PHI(si, si_16, si_16)
    uses: ax_15 = Mem0[ds:si_14:word16]
          si_16 = si_14 + 0x0002
          ax_28 = si_14 + 0x0002 - si
ax_15: orig: ax
    def:  ax_15 = Mem0[ds:si_14:word16]
    uses: Mem33[ds:di:word16] = ax_15
          branch ax_15 != 0x0020 l0C00_0005
          branch ax_15 != 0x0000 l0C00_0011
          branch ax_15 != 0x000D l0C00_001A
si_16: orig: si
    def:  si_16 = si_14 + 0x0002
    uses: si_14 = PHI(si, si_16, si_16)
          si_14 = PHI(si, si_16, si_16)
SCZO_17: orig: SCZO
Z_18: orig: Z
SZO_19: orig: SZO
C_20: orig: C
C_21: orig: C
SZO_22: orig: SZO
Z_23: orig: Z
SCZO_24: orig: SCZO
ax_25: orig: ax
    def:  ax_25 = PHI(ax_28, ax_39)
    uses: Mem26[ds:0x0300:word16] = ax_25
Mem26: orig: Mem0
    def:  Mem26[ds:0x0300:word16] = ax_25
ax_27: orig: ax
ax_28: orig: ax
    def:  ax_28 = si_14 + 0x0002 - si
    uses: ax_25 = PHI(ax_28, ax_39)
SCZO_29: orig: SCZO
Z_30: orig: Z
SZO_31: orig: SZO
C_32: orig: C
Mem33: orig: Mem0
    def:  Mem33[ds:di:word16] = ax_15
    uses: Mem45[ds:0x0302:word16] = Mem33[ds:0x0302:word16] + 0x0001
ax_34: orig: ax
SZO_35: orig: SZO
Z_36: orig: Z
C_37: orig: C
SCZO_38: orig: SCZO
ax_39: orig: ax
    def:  ax_39 = 0xFFFF
    uses: ax_25 = PHI(ax_28, ax_39)
SCZO_40: orig: SCZO
Z_41: orig: Z
SZO_42: orig: SZO
C_43: orig: C
v12_44: orig: v12
    uses: Mem45[ds:0x0302:word16] = Mem33[ds:0x0302:word16] + 0x0001
Mem45: orig: Mem0
    def:  Mem45[ds:0x0302:word16] = Mem33[ds:0x0302:word16] + 0x0001
SZO_46: orig: SZO
SCZO_47: orig: SCZO
Z_48: orig: Z
// fn0C00_0000
void fn0C00_0000(word16 si, word16 di, selector ds)
fn0C00_0000_entry:
	def Mem0
	def si
	def ds
	def di
	// succ:  l0C00_0000
l0C00_0000:
	goto l0C00_001A
	// succ:  l0C00_001A
l0C00_0005:
	Mem33[ds:di:word16] = ax_15
	branch ax_15 != 0x0000 l0C00_0011
	// succ:  l0C00_000B l0C00_0011
l0C00_000B:
	ax_39 = 0xFFFF
	goto l0C00_0024
	// succ:  l0C00_0024
l0C00_0011:
	branch ax_15 != 0x000D l0C00_001A
	// succ:  l0C00_0016 l0C00_001A
l0C00_0016:
	Mem45[ds:0x0302:word16] = Mem33[ds:0x0302:word16] + 0x0001
	// succ:  l0C00_001A
l0C00_001A:
	si_14 = PHI(si, si_16, si_16)
	ax_15 = Mem0[ds:si_14:word16]
	si_16 = si_14 + 0x0002
	branch ax_15 != 0x0020 l0C00_0005
	// succ:  l0C00_0020 l0C00_0005
l0C00_0020:
	ax_28 = si_14 + 0x0002 - si
	// succ:  l0C00_0024
l0C00_0024:
	ax_25 = PHI(ax_28, ax_39)
	Mem26[ds:0x0300:word16] = ax_25
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

