// fn0C00_0000
void fn0C00_0000(word16 ax, selector ds)
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	word16 ax_12
	branch ax != 0x0001
	// succ:  2 4
l0C00_0005:		// block 2, pred: 1
	branch ax != 0x0002
	// succ:  3 4
l0C00_000A:		// block 3, pred: 2
	branch ax != 0x0003
	// succ:  5 4
l0C00_0015:		// block 4, pred: 3 2 1
	ax_12 = 0x0000
	// succ:  6
l0C00_000F:		// block 5, pred: 3
	ax_12 = 0x0001
	// succ:  6
l0C00_001A:		// block 6, pred: 5 4
	word16 ax_22
	store(Mem17[ds:0x0300:word16]) = ax_12
	branch ax_12 != 0x000A
	// succ:  7 8
l0C00_0023:		// block 7, pred: 6
	branch ax_12 != 0x000B
	// succ:  9 8
l0C00_002E:		// block 8, pred: 7 6
	ax_22 = 0x0000
	// succ:  10
l0C00_0028:		// block 9, pred: 7
	ax_22 = 0x0001
	// succ:  10
l0C00_0030:		// block 10, pred: 9 8
	store(Mem29[ds:0x0302:word16]) = ax_22
	// succ:  11
fn0C00_0000_exit:		// block 11, pred: 10
	// succ: 

// fn0C00_0000
void fn0C00_0000(word16 ax, selector ds)
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	word16 ax_12
	branch ax != 0x0001 || ax != 0x0002 || ax != 0x0003
	// succ:  5 4
l0C00_0005:		// block 2
l0C00_000A:		// block 3
l0C00_0015:		// block 4, pred: 1
	ax_12 = 0x0000
	// succ:  6
l0C00_000F:		// block 5, pred: 1
	ax_12 = 0x0001
	// succ:  6
l0C00_001A:		// block 6, pred: 5 4
	word16 ax_22
	store(Mem17[ds:0x0300:word16]) = ax_12
	branch ax_12 != 0x000A || ax_12 != 0x000B
	// succ:  9 8
l0C00_0023:		// block 7
l0C00_002E:		// block 8, pred: 6
	ax_22 = 0x0000
	// succ:  10
l0C00_0028:		// block 9, pred: 6
	ax_22 = 0x0001
	// succ:  10
l0C00_0030:		// block 10, pred: 9 8
	store(Mem29[ds:0x0302:word16]) = ax_22
	// succ:  11
fn0C00_0000_exit:		// block 11, pred: 10
	// succ: 
================
