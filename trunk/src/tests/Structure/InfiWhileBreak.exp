// fn0C00_0000
void fn0C00_0000(segment ds)
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	word16 ax_8 = 0x0000
	word16 bx_10 = Mem0[ds:0x0200:word16]
	// succ:  2
l0C00_0006:		// block 2, pred: 1 6
	branch bx_10 == 0x0000
	// succ:  3 4
l0C00_000A:		// block 3, pred: 2
	store(Mem17[ds:0x0204:word16]) = bx_10
	branch Mem17[ds:bx_10:word16] == 0xFFFF
	// succ:  6 4
l0C00_001A:		// block 4, pred: 3 2
	store(Mem26[ds:0x0300:word16]) = ax_8
	return
	// succ:  5
fn0C00_0000_exit:		// block 5, pred: 4
	// succ: 
l0C00_0013:		// block 6, pred: 3
	bx_10 = Mem17[ds:bx_10 + 0x0004:word16]
	ax_8 = ax_8 + 0x0001
	// succ:  2
Header 0, blocks: 0 1
Header 2, blocks: 2 3 4 5 6
Interval of block 0: Header 0, blocks: 0 1
Interval of block 1: Header 0, blocks: 0 1
Interval of block 2: Header 2, blocks: 2 3 4 5 6
Interval of block 3: Header 2, blocks: 2 3 4 5 6
Interval of block 4: Header 2, blocks: 2 3 4 5 6
Interval of block 5: Header 2, blocks: 2 3 4 5 6
Interval of block 6: Header 2, blocks: 2 3 4 5 6

