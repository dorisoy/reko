// fn0C00_0000
void fn0C00_0000(word16 bx, word16 si, selector ds)
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	word16 ax_8 = 0x0000
	// succ:  2
l0C00_000A:		// block 2, pred: 1 3
	branch bx != 0x0000
	// succ:  4 3
l0C00_0005:		// block 3, pred: 2
	ax_8 = ax_8 + Mem0[ds:bx:word16]
	bx = Mem0[ds:bx + 0x0002:word16]
	// succ:  2
l0C00_000E:		// block 4, pred: 2
	store(Mem17[ds:0x0300:word16]) = ax_8
	word16 ax_18 = 0x0000
	// succ:  5
l0C00_0014:		// block 5, pred: 4 5
	ax_18 = ax_18 + Mem17[ds:si:word16]
	si = Mem17[ds:si + 0x0002:word16]
	branch si != 0x0000
	// succ:  6 5
l0C00_001D:		// block 6, pred: 5
	store(Mem26[ds:0x0302:word16]) = ax_18
	return
	// succ:  7
fn0C00_0000_exit:		// block 7, pred: 6
	// succ: 
Header 0, blocks: 0 1
Header 2, blocks: 2 3 4
Header 5, blocks: 5 6 7
Interval of block 0: Header 0, blocks: 0 1
Interval of block 1: Header 0, blocks: 0 1
Interval of block 2: Header 2, blocks: 2 3 4
Interval of block 3: Header 2, blocks: 2 3 4
Interval of block 4: Header 2, blocks: 2 3 4
Interval of block 5: Header 5, blocks: 5 6 7
Interval of block 6: Header 5, blocks: 5 6 7
Interval of block 7: Header 5, blocks: 5 6 7

