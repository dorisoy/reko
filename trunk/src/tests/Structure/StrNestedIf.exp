// fn0C00_0000
void fn0C00_0000(word16 ax, selector ds)
fn0C00_0000_entry:		// block 0, pred:
	byte cl_10
	branch ax < 0x0000 l0C00_0012
	// succ:  3 1
l0C00_0012:		// block 1, pred: 0
	cl_10 = 0x01
	branch ax >= 0xFFF4 l0C00_001C
	// succ:  2 5
l0C00_0019:		// block 2, pred: 1
	ax = 0xFFF4
	// succ:  5
l0C00_0005:		// block 3, pred: 0
	cl_10 = 0x00
	branch ax <= 0x000C l0C00_000F
	// succ:  4 5
l0C00_000C:		// block 4, pred: 3
	ax = 0x000C
	// succ:  5
l0C00_001C:		// block 5, pred: 2 1 4 3
	store(Mem24[ds:0x0300:word16]) = ax
	store(Mem25[ds:0x0302:byte]) = cl_10
	return
	// succ:  6
fn0C00_0000_exit:		// block 6, pred: 5
	// succ: 

void fn0C00_0000(word16 ax, selector ds)
{
	byte cl_10;
	if (ax < 0x0000)
	{
		cl_10 = 0x01;
		if (ax < 0xFFF4)
			ax = 0xFFF4;
	}
	else
	{
		cl_10 = 0x00;
		if (ax > 0x000C)
			ax = 0x000C;
	}
	Mem24[ds:0x0300:word16] = ax;
	Mem25[ds:0x0302:byte] = cl_10;
	return;
}
===========================
