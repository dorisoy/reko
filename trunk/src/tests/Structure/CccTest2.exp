// fn0C00_0000
void fn0C00_0000(word16 ax, word16 cx, word16 bx, selector ds)
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	branch ax == 0x0001
	// succ:  2 3
l0C00_0005:		// block 2, pred: 1
	branch bx == 0x0002
	// succ:  3 4
l0C00_000A:		// block 3, pred: 2 1
	branch cx == 0x0003
	// succ:  5 4
l0C00_0016:		// block 4, pred: 3 2
	store(Mem17[ds:0x0302:word16]) = cx
	// succ:  6
l0C00_000F:		// block 5, pred: 3
	store(Mem14[ds:0x0300:word16]) = ax
	// succ:  6
l0C00_001A:		// block 6, pred: 5 4
	return
	// succ:  7
fn0C00_0000_exit:		// block 7, pred: 6
	// succ: 

// fn0C00_0000
void fn0C00_0000(word16 ax, word16 cx, word16 bx, selector ds)
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	branch (ax == 0x0001 || bx != 0x0002) && cx != 0x0003
	// succ:  4 5
l0C00_0005:		// block 2
l0C00_000A:		// block 3
l0C00_0016:		// block 4, pred: 1
	store(Mem17[ds:0x0302:word16]) = cx
	// succ:  6
l0C00_000F:		// block 5, pred: 1
	store(Mem14[ds:0x0300:word16]) = ax
	// succ:  6
l0C00_001A:		// block 6, pred: 5 4
	return
	// succ:  7
fn0C00_0000_exit:		// block 7, pred: 6
	// succ: 
================
