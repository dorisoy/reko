// fn0C00_0000
void fn0C00_0000(word16 si, segment ds)
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
l0C00_0000:		// block 1, pred: 0
	word16 dx_11 = 0x0000
	word16 cx_13 = 0x0004
	word16 di_14 = 0x0004
	// succ:  2
l0C00_0008:		// block 2, pred: 1 3 2
	si = si + 0x0002
	dx_11 = dx_11 + Mem0[ds:si:word16]
	cx_13 = cx_13 - 0x0001
	branch cx_13 != 0x0000
	// succ:  3 2
l0C00_000D:		// block 3, pred: 2
	cx_13 = 0x0004
	di_14 = di_14 - 0x0001
	branch di_14 != 0x0000
	// succ:  4 2
l0C00_0013:		// block 4, pred: 3
	store(Mem30[ds:0x0300:word16]) = dx_11
	return
	// succ:  5
fn0C00_0000_exit:		// block 5, pred: 4
	// succ: 
-----------
hdr: 2, end: 3 [2, 3]

void fn0C00_0000(word16 si, segment ds)
{
	word16 dx_11 = 0x0000
	word16 cx_13 = 0x0004
	word16 di_14 = 0x0004
	do
	{
		si = si + 0x0002;
		dx_11 = dx_11 + Mem0[ds:si:word16];
		cx_13 = cx_13 - 0x0001;
		if (cx_13 == 0x0000)
		{
			cx_13 = 0x0004;
			di_14 = di_14 - 0x0001;
		}
	}
	while (di_14 != 0x0000);
	store(Mem30[ds:0x0300:word16]) = dx_11
	return
}
===========
