// FactorialMock
// Mem0:Global memory
// fp:Temporary
// r2:Local -0004
// r3:Local -0008
// Z:Flags
// r1:Local -000C
// return address size: 0
void FactorialMock()
FactorialMock_entry:		// pred:
	// succ:  l1
l1:		// pred: FactorialMock_entry
	r3 = 0x00000001
	// succ:  test
test:		// pred: l1 l2
	Z = cond(r2 - 0x00000000)
	branch Test(EQ,Z) done
	// succ:  l2 done
l2:		// pred: test
	r3 = r3 *s r2
	r2 = r2 - 0x00000001
	// succ:  test
done:		// pred: test
	return r3
	// succ:  FactorialMock_exit
FactorialMock_exit:		// pred: done
	// succ: 
