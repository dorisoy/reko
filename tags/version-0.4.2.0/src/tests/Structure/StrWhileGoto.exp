// fn0C00_0000
void fn0C00_0000(word16 si, word16 di, selector ds)
fn0C00_0000_entry:
	si_16 = si
	goto l0C00_001A
	// succ:  l0C00_001A
l0C00_0000:
	// succ:
l0C00_0005:
	Mem30[ds:di:word16] = ax_17
	branch ax_17 != 0x0000 l0C00_0011
	// succ:  l0C00_000B l0C00_0011
l0C00_000B:
	ax_25 = 0xFFFF
	goto l0C00_0024
	// succ:  l0C00_0024
l0C00_0011:
	branch ax_17 != 0x000D l0C00_001A
	// succ:  l0C00_0016 l0C00_001A
l0C00_0016:
	Mem39[ds:0x0302:word16] = Mem30[ds:0x0302:word16] + 0x0001
	// succ:  l0C00_001A
l0C00_001A:
	word16 ax_25
	word16 si_16
	word16 ax_17 = Mem0[ds:si_16:word16]
	si_16 = si_16 + 0x0002
	branch ax_17 != 0x0020 l0C00_0005
	// succ:  l0C00_0020 l0C00_0005
l0C00_0020:
	ax_27 = si_16 - si
	// succ:  l0C00_0024
l0C00_0024:
	Mem26[ds:0x0300:word16] = ax_25
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

void fn0C00_0000(word16 si, word16 di, selector ds)
{
	word16 si_16 = si;
	word16 ax_25;
	word16 ax_17 = Mem0[ds:si_16:word16];
	si_16 = si_16 + 0x0002;
	while (ax_17 != 0x0020)
        {
		Mem30[ds:di:word16] = ax_17;
		if (ax_17 == 0x0000)
		{
			ax_25 = 0xFFFF;
			goto l0C00_0024;
		}
		if (ax_17 != 0x000D)
			continue;
		Mem39[ds:0x0302:word16] = Mem30[ds:0x0302:word16] + 0x0001;
		ax_17 = Mem0[ds:si_16:word16];
		si_16 = si_16 + 0x0002;
	}
	ax_25 = si_16 - si;
l0C00_0024:
	Mem26[ds:0x0300:word16] = ax_25;
	return;
}
===========================
