// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 ax, selector ds)
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	word16 ax_28
	branch ax != 0x0001 l0C00_0015
	// succ:  l0C00_0005 l0C00_0015
l0C00_0005:
	branch ax != 0x0002 l0C00_0015
	// succ:  l0C00_000A l0C00_0015
l0C00_000A:
	branch ax != 0x0003 l0C00_0015
	// succ:  l0C00_000F l0C00_0015
l0C00_000F:
	ax_28 = 0x0001
	goto l0C00_001A
	// succ:  l0C00_001A
l0C00_0015:
	ax_28 = 0x0000
	// succ:  l0C00_001A
l0C00_001A:
	word16 ax_16
	Mem8[ds:0x0300:word16] = ax_28
	branch ax_28 != 0x000A l0C00_002E
	// succ:  l0C00_0023 l0C00_002E
l0C00_0023:
	branch ax_28 != 0x000B l0C00_002E
	// succ:  l0C00_0028 l0C00_002E
l0C00_0028:
	ax_16 = 0x0001
	goto l0C00_0030
	// succ:  l0C00_0030
l0C00_002E:
	ax_16 = 0x0000
	// succ:  l0C00_0030
l0C00_0030:
	Mem17[ds:0x0302:word16] = ax_16
fn0C00_0000_exit:

// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 ax, selector ds)
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	word16 ax_28
	branch ax != 0x0001 || (ax != 0x0002 || ax != 0x0003) l0C00_0015
	goto l0C00_000F
	// succ:  l0C00_000F l0C00_0015
l0C00_0005:
l0C00_000A:
l0C00_000F:
	ax_28 = 0x0001
	goto l0C00_001A
	// succ:  l0C00_001A
l0C00_0015:
	ax_28 = 0x0000
	// succ:  l0C00_001A
l0C00_001A:
	word16 ax_16
	Mem8[ds:0x0300:word16] = ax_28
	branch ax_28 != 0x000A || ax_28 != 0x000B l0C00_002E
	goto l0C00_0028
	// succ:  l0C00_0028 l0C00_002E
l0C00_0023:
l0C00_0028:
	ax_16 = 0x0001
	goto l0C00_0030
	// succ:  l0C00_0030
l0C00_002E:
	ax_16 = 0x0000
	// succ:  l0C00_0030
l0C00_0030:
	Mem17[ds:0x0302:word16] = ax_16
fn0C00_0000_exit:
================
