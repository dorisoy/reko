Mem0:Global memory
    def:  def Mem0
fp:Temporary
    def:  def fp
r0:Register r0
    def:  def r0
r1:Register r1
    def:  def r1
    uses: Z_10 = cond(r1 - 0x00000003)
Z:Flags
    def:  def Z
r0_5: orig: r0
    def:  r0_5 = 0x00000000
    uses: r0_6 = PHI(r0_5, r0_9)
r0_6: orig: r0
    def:  r0_6 = PHI(r0_5, r0_9)
    uses: Z_7 = cond(r0_6 - 0x00000002)
          r0_9 = PHI(r0_6, r0_8)
Z_7: orig: Z
    def:  Z_7 = cond(r0_6 - 0x00000002)
    uses: branch Test(NE,Z_7) skip
r0_8: orig: r0
    def:  r0_8 = 0x00000000
    uses: r0_9 = PHI(r0_6, r0_8)
r0_9: orig: r0
    def:  r0_9 = PHI(r0_6, r0_8)
    uses: r0_6 = PHI(r0_5, r0_9)
Z_10: orig: Z
    def:  Z_10 = cond(r1 - 0x00000003)
    uses: branch Test(NE,Z_10) top
// SsaMock
void SsaMock(word32 r1)
SsaMock_entry:		// pred:
	def Mem0
	def fp
	def r0
	def r1
	def Z
	// succ:  l1
l1:		// pred: SsaMock_entry
	r0_5 = 0x00000000
	// succ:  top
top:		// pred: l1 skip
	r0_6 = PHI(r0_5, r0_9)
	Z_7 = cond(r0_6 - 0x00000002)
	branch Test(NE,Z_7) skip
	// succ:  l2 skip
l2:		// pred: top
	r0_8 = 0x00000000
	// succ:  skip
skip:		// pred: top l2
	r0_9 = PHI(r0_6, r0_8)
	Z_10 = cond(r1 - 0x00000003)
	branch Test(NE,Z_10) top
	// succ:  l3 top
l3:		// pred: skip
	return
	// succ:  SsaMock_exit
SsaMock_exit:		// pred: l3
	// succ: 

