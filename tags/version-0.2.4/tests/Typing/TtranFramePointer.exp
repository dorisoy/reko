// FramePointerMock
void FramePointerMock()
FramePointerMock_entry:		// block 0, pred:
	// succ:  1
l1:		// block 1, pred: 0
	fp = &frame
	Mem0[fp + 0x00000004:word32] = Mem0[fp + 0x00000008:word32]
	// succ: 

// Equivalence classes ////////////
Eq_2: (struct "frame_t")
	T_2 (in frame : (struct "frame_t"))
Eq_3: (struct (0 Eq_2 t0000) (4 word32 dw0004) (8 word32 dw0008))
	T_3 (in &frame : ptr0)
	T_4 (in fp : word32)
// Type Variables ////////////
Globals:(in globals)
  Class: Eq_1
  DataType: Eq_1
  OrigDataType: 
T_2:(in frame)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: (struct "frame_t")
T_3:(in &frame)
  Class: Eq_3
  DataType: (ptr Eq_3)
  OrigDataType: (ptr T_2)
T_4:(in fp)
  Class: Eq_3
  DataType: (ptr Eq_3)
  OrigDataType: (ptr (struct (0 Eq_2 t0000) (4 word32 dw0004) (8 word32 dw0008)))
T_5:(in 0x00000008)
  Class: Eq_5
  DataType: word32
  OrigDataType: word32
T_6:(in fp + 0x00000008)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_7:(in Mem0[fp + 0x00000008:word32])
  Class: Eq_7
  DataType: word32
  OrigDataType: word32
T_8:(in 0x00000004)
  Class: Eq_8
  DataType: word32
  OrigDataType: word32
T_9:(in fp + 0x00000004)
  Class: Eq_9
  DataType: word32
  OrigDataType: word32
T_10:(in Mem0[fp + 0x00000004:word32])
  Class: Eq_7
  DataType: word32
  OrigDataType: word32
