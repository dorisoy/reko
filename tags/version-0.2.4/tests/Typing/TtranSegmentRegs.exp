// ProcedureMock
void ProcedureMock()
ProcedureMock_entry:		// block 0, pred:
	// succ:  1
l1:		// block 1, pred: 0
	Mem0[0x1000:0x0001:word16] = 0x0800
	Mem0[0x0800:0x5422:word16] = ds
	// succ: 

// Equivalence classes ////////////
Eq_2: (segment (5422 (ptr Eq_6) ptr5422))
	T_2 (in 0x0800 : selector)
	T_5 (in Mem0[0x1000:0x0001:word16] : word16)
Eq_3: (struct (1 (ptr Eq_2) ptr0001))
	T_3 (in 0x1000 : word16)
Eq_6: (segment)
	T_6 (in ds : selector)
	T_8 (in Mem0[0x0800:0x5422:word16] : word16)
// Type Variables ////////////
Globals:(in globals)
  Class: Eq_1
  DataType: Eq_1
  OrigDataType: 
T_2:(in 0x0800)
  Class: Eq_2
  DataType: (ptr Eq_2)
  OrigDataType: (ptr (segment (5422 T_8 t5422)))
T_3:(in 0x1000)
  Class: Eq_3
  DataType: (ptr Eq_3)
  OrigDataType: (ptr (struct (1 T_5 t0001)))
T_4:(in 0x0001)
  Class: Eq_4
  DataType: (memptr (ptr Eq_3) (ptr Eq_2))
  OrigDataType: (memptr T_3 (struct (0 T_5 t0000)))
T_5:(in Mem0[0x1000:0x0001:word16])
  Class: Eq_2
  DataType: (ptr Eq_2)
  OrigDataType: word16
T_6:(in ds)
  Class: Eq_6
  DataType: (ptr Eq_6)
  OrigDataType: (ptr (segment))
T_7:(in 0x5422)
  Class: Eq_7
  DataType: (memptr (ptr Eq_2) (ptr Eq_6))
  OrigDataType: (memptr T_2 (struct (0 T_8 t0000)))
T_8:(in Mem0[0x0800:0x5422:word16])
  Class: Eq_6
  DataType: (ptr Eq_6)
  OrigDataType: word16
