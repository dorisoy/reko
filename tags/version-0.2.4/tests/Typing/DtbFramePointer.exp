// FramePointerMock
void FramePointerMock()
FramePointerMock_entry:		// block 0, pred:
	// succ:  1
l1:		// block 1, pred: 0
	(struct "frame_t") frame_4
	word32 fp_5 = &frame_4
	Mem6[fp_5 + 0x00000004:word32] = Mem0[fp_5 + 0x00000008:word32]
	// succ: 

// Equivalence classes ////////////
Eq_2: (struct "frame_t")
	T_2 (in frame_4 : (struct "frame_t"))
Eq_3: (ptr (struct (0 T_2 t0000) (4 T_10 t0004) (8 T_7 t0008)))
	T_3 (in fp_5 : word32)
	T_4 (in &frame_4 : ptr0)
Eq_5: word32
	T_5 (in 0x00000008 : word32)
Eq_6: word32
	T_6 (in fp_5 + 0x00000008 : word32)
Eq_7: word32
	T_7 (in Mem0[fp_5 + 0x00000008:word32] : word32)
	T_10 (in Mem6[fp_5 + 0x00000004:word32] : word32)
Eq_8: word32
	T_8 (in 0x00000004 : word32)
Eq_9: word32
	T_9 (in fp_5 + 0x00000004 : word32)
// Type Variables ////////////
Globals:(in globals)
  Class: Eq_1
  DataType: 
  OrigDataType: 
T_2:(in frame_4)
  Class: Eq_2
  DataType: (struct "frame_t")
  OrigDataType: (struct "frame_t")
T_3:(in fp_5)
  Class: Eq_3
  DataType: (ptr (struct (0 T_2 t0000) (4 T_10 t0004) (8 T_7 t0008)))
  OrigDataType: (ptr (struct (4 T_10 t0004) (8 T_7 t0008)))
T_4:(in &frame_4)
  Class: Eq_3
  DataType: (ptr (struct (0 T_2 t0000) (4 T_10 t0004) (8 T_7 t0008)))
  OrigDataType: (ptr T_2)
T_5:(in 0x00000008)
  Class: Eq_5
  DataType: word32
  OrigDataType: word32
T_6:(in fp_5 + 0x00000008)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_7:(in Mem0[fp_5 + 0x00000008:word32])
  Class: Eq_7
  DataType: word32
  OrigDataType: word32
T_8:(in 0x00000004)
  Class: Eq_8
  DataType: word32
  OrigDataType: word32
T_9:(in fp_5 + 0x00000004)
  Class: Eq_9
  DataType: word32
  OrigDataType: word32
T_10:(in Mem6[fp_5 + 0x00000004:word32])
  Class: Eq_7
  DataType: word32
  OrigDataType: word32
