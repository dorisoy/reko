// SegmentedMemoryPointerMock
void SegmentedMemoryPointerMock()
SegmentedMemoryPointerMock_entry:
	// succ:  l1
l1:
	si = 0x0001
	ax = Mem0[cs:si + 0x0000:word16]
	si2 = 0x0005
	ax = Mem0[cs:si2 + 0x0000:word16]
	Mem0[cs:0x1234:word16] = ax
	Mem0[cs:si + 0x0002:word16] = ax
	// succ: 
SegmentedMemoryPointerMock_exit:

// Equivalence classes ////////////
Eq_2: (memptr T_4 (struct (0 T_7 t0000) (2 T_18 t0002)))
	T_2 (in 0x0001 : word16)
	T_3 (in si : word16)
Eq_4: (ptr (segment (1234 T_15 t1234)))
	T_4 (in cs : selector)
Eq_5: word16
	T_5 (in 0x0000 : word16)
Eq_6: word16
	T_6 (in si + 0x0000 : word16)
Eq_7: word16
	T_7 (in Mem0[cs:si + 0x0000:word16] : word16)
	T_8 (in ax : word16)
	T_13 (in Mem0[cs:si2 + 0x0000:word16] : word16)
	T_15 (in Mem0[cs:0x1234:word16] : word16)
	T_18 (in Mem0[cs:si + 0x0002:word16] : word16)
Eq_9: (memptr T_4 (struct (0 T_13 t0000)))
	T_9 (in 0x0005 : word16)
	T_10 (in si2 : word16)
Eq_11: word16
	T_11 (in 0x0000 : word16)
Eq_12: word16
	T_12 (in si2 + 0x0000 : word16)
Eq_14: (memptr T_4 (struct (0 T_15 t0000)))
	T_14 (in 0x1234 : word16)
Eq_16: word16
	T_16 (in 0x0002 : word16)
Eq_17: word16
	T_17 (in si + 0x0002 : word16)
// Type Variables ////////////
Globals: (in globals : ptr32)
  Class: Eq_1
  DataType: 
  OrigDataType: 
T_2: (in 0x0001 : word16)
  Class: Eq_2
  DataType: (memptr T_4 (struct (0 T_7 t0000) (2 T_18 t0002)))
  OrigDataType: word16
T_3: (in si : word16)
  Class: Eq_2
  DataType: (memptr T_4 (struct (0 T_7 t0000) (2 T_18 t0002)))
  OrigDataType: (memptr T_4 (struct (0 T_7 t0000) (2 T_18 t0002)))
T_4: (in cs : selector)
  Class: Eq_4
  DataType: (ptr (segment (1234 T_15 t1234)))
  OrigDataType: (ptr (segment (1234 T_15 t1234)))
T_5: (in 0x0000 : word16)
  Class: Eq_5
  DataType: word16
  OrigDataType: word16
T_6: (in si + 0x0000 : word16)
  Class: Eq_6
  DataType: word16
  OrigDataType: word16
T_7: (in Mem0[cs:si + 0x0000:word16] : word16)
  Class: Eq_7
  DataType: word16
  OrigDataType: word16
T_8: (in ax : word16)
  Class: Eq_7
  DataType: word16
  OrigDataType: word16
T_9: (in 0x0005 : word16)
  Class: Eq_9
  DataType: (memptr T_4 (struct (0 T_13 t0000)))
  OrigDataType: word16
T_10: (in si2 : word16)
  Class: Eq_9
  DataType: (memptr T_4 (struct (0 T_13 t0000)))
  OrigDataType: (memptr T_4 (struct (0 T_13 t0000)))
T_11: (in 0x0000 : word16)
  Class: Eq_11
  DataType: word16
  OrigDataType: word16
T_12: (in si2 + 0x0000 : word16)
  Class: Eq_12
  DataType: word16
  OrigDataType: word16
T_13: (in Mem0[cs:si2 + 0x0000:word16] : word16)
  Class: Eq_7
  DataType: word16
  OrigDataType: word16
T_14: (in 0x1234 : word16)
  Class: Eq_14
  DataType: (memptr T_4 (struct (0 T_15 t0000)))
  OrigDataType: (memptr T_4 (struct (0 T_15 t0000)))
T_15: (in Mem0[cs:0x1234:word16] : word16)
  Class: Eq_7
  DataType: word16
  OrigDataType: word16
T_16: (in 0x0002 : word16)
  Class: Eq_16
  DataType: word16
  OrigDataType: word16
T_17: (in si + 0x0002 : word16)
  Class: Eq_17
  DataType: word16
  OrigDataType: word16
T_18: (in Mem0[cs:si + 0x0002:word16] : word16)
  Class: Eq_7
  DataType: word16
  OrigDataType: word16
