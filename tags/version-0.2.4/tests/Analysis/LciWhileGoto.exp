// fn0C00_0000
void fn0C00_0000()
fn0C00_0000_entry:		// pred:
	def Mem0
	def si
	def ds
	def di
	// succ:  l0C00_0000
l0C00_0000:		// pred: fn0C00_0000_entry
	si_12 = si
	// succ:  l0C00_001A
l0C00_001A:		// pred: l0C00_0000 l0C00_0011 l0C00_0016
	si_12 = PHI(si_12, si_15, si_15)
	Mem13 = PHI(Mem0, Mem19, Mem27)
	ax_14 = Mem13[ds:si_12:word16]
	si_15 = si_12 + 0x0002
	branch ax_14 != 0x0020 l0C00_0005
	// succ:  l0C00_0020 l0C00_0005
l0C00_0020:		// pred: l0C00_001A
	ax_33 = si_15 - si
	// succ:  l0C00_0024
l0C00_0024:		// pred: l0C00_000B l0C00_0020
	ax_40 = PHI(ax_31, ax_33)
	Mem42[ds:0x0300:word16] = ax_40
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:		// pred: l0C00_0024
	// succ: 
l0C00_0005:		// pred: l0C00_001A
	Mem19[ds:di:word16] = ax_14
	branch ax_14 != 0x0000 l0C00_0011
	// succ:  l0C00_000B l0C00_0011
l0C00_000B:		// pred: l0C00_0005
	ax_31 = 0xFFFF
	// succ:  l0C00_0024
l0C00_0011:		// pred: l0C00_0005
	branch ax_14 != 0x000D l0C00_001A
	// succ:  l0C00_0016 l0C00_001A
l0C00_0016:		// pred: l0C00_0011
	Mem27[ds:0x0302:word16] = Mem19[ds:0x0302:word16] + 0x0001
	// succ:  l0C00_001A
