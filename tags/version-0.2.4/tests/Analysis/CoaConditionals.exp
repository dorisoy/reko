Mem0: Mem0:Global memory, def: {def Mem0}, uses: {branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F}{Mem22 = PHI(Mem0, Mem21)}{branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F}
fp: fp:Temporary
ds: ds:Register ds, def: {def ds}, uses: {branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F}{Mem21[ds:0x0F00:byte]) = 0x01}{v6_24 = Mem22[ds:0x0106:word16] - Mem22[ds:0x0104:word16]}{v6_24 = Mem22[ds:0x0106:word16] - Mem22[ds:0x0104:word16]}{Mem25[ds:0x0106:word16]) = v6_24}{store(Mem32[ds:0x0F01:byte]) = 0x01}{branch (Mem33[ds:0x0106:word16] & Mem33[ds:0x0108:word16]) == 0x0000 l0C00_002D}{branch (Mem33[ds:0x0106:word16] & Mem33[ds:0x0108:word16]) == 0x0000 l0C00_002D}{store(Mem43[ds:0x0F02:byte]) = 0x01}{branch Mem44[ds:0x010A:word16] >=u Mem44[ds:0x010C:word16] l0C00_003D}{store(Mem54[ds:0x0F03:byte]) = 0x01}{store(Mem59[ds:0x0F04:byte]) = 0x01}{store(Mem68[ds:0x0F05:byte]) = 0x01}{store(Mem86[ds:0x0F07:byte] = 0x01}{branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F}{branch Mem44[ds:0x010A:word16] >=u Mem44[ds:0x010C:word16] l0C00_003D}{branch (Mem60[ds:0x010E:word16] & 0x01FF == 0x0000 l0C00_0056}
ax: ax:Register ax
SCZO: SCZO:Flags
Z: Z:Flags
v6: v6:Temporary
SZO: SZO:Flags
C: C:Flags
wLoc04: wLoc04:Local -0004
bp: bp:Register bp, def: {def bp}, uses: {bp_70 = bp - 0x0010}{Mem77[ss:bp + 0xFFF6:byte] = 0x01}
SO: SO:Flags
O: O:Flags
ss: ss:Register ss, def: {def ss}, uses: {Mem77[ss:bp + 0xFFF6:byte] = 0x01}
ax_14: orig: ax, uses: {branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F}
SCZO_15: orig: SCZO
Z_16: orig: Z
SZO_17: orig: SZO
C_18: orig: C
SO_19: orig: SO
O_20: orig: O
Mem21: orig: Mem0, def: {Mem21[ds:0x0F00:byte] = 0x01}, uses: {Mem22 = PHI(Mem0, Mem21)}
Mem22: orig: Mem0, def: {Mem22 = PHI(Mem0, Mem21)}, uses: {v6_24 = Mem22[ds:0x0106:word16] - Mem22[ds:0x0104:word16]}{v6_24 = Mem22[ds:0x0106:word16] - Mem22[ds:0x0104:word16]}
ax_23: orig: ax, uses: {v6_24 = Mem22[ds:0x0106:word16] - Mem22[ds:0x0104:word16]}
v6_24: orig: v6, def: {v6_24 = Mem22[ds:0x0106:word16] - Mem22[ds:0x0104:word16]}, uses: {Mem25[ds:0x0106:word16] = v6_24}{branch v6_24 <= 0x0000 l0C00_001E}
Mem25: orig: Mem0, def: {Mem25[ds:0x0106:word16] = v6_24}, uses: {Mem33 = PHI(Mem25, Mem32)}
SCZO_26: orig: SCZO
Z_27: orig: Z
SZO_28: orig: SZO
C_29: orig: C
SO_30: orig: SO
O_31: orig: O
Mem32: orig: Mem0, def: {Mem32[ds:0x0F01:byte] = 0x01}, uses: {Mem33 = PHI(Mem25, Mem32)}
Mem33: orig: Mem0, def: {Mem33 = PHI(Mem25, Mem32)}, uses: {branch (Mem33[ds:0x0106:word16] & Mem33[ds:0x0108:word16]) == 0x0000 l0C00_002D}{branch (Mem33[ds:0x0106:word16] & Mem33[ds:0x0108:word16]) == 0x0000 l0C00_002D}{Mem44 = PHI(Mem33, Mem43)}
ax_34: orig: ax
ax_35: orig: ax, uses: {branch (Mem33[ds:0x0106:word16] & Mem33[ds:0x0108:word16]) == 0x0000 l0C00_002D}
SCZO_36: orig: SCZO
Z_37: orig: Z
SZO_38: orig: SZO
SO_39: orig: SO
O_40: orig: O
C_41: orig: C
SCZO_42: orig: SCZO
Mem43: orig: Mem0, def: {Mem43[ds:0x0F02:byte] = 0x01}, uses: {Mem44 = PHI(Mem33, Mem43)}
Mem44: orig: Mem0, def: {Mem44 = PHI(Mem33, Mem43)}, uses: {branch Mem44[ds:0x010A:word16] >=u Mem44[ds:0x010C:word16] l0C00_003D}{Mem55 = PHI(Mem44, Mem54)}{branch Mem44[ds:0x010A:word16] >=u Mem44[ds:0x010C:word16] l0C00_003D}
ax_45: orig: ax, uses: {branch Mem44[ds:0x010A:word16] >=u Mem44[ds:0x010C:word16] l0C00_003D}
SCZO_46: orig: SCZO
Z_47: orig: Z
SZO_48: orig: SZO
C_49: orig: C
SO_50: orig: SO
O_51: orig: O
C_52: orig: C
SCZO_53: orig: SCZO
Mem54: orig: Mem0, def: {Mem54[ds:0x0F03:byte] = 0x01}, uses: {Mem55 = PHI(Mem44, Mem54)}
Mem55: orig: Mem0, def: {Mem55 = PHI(Mem44, Mem54)}, uses: {Mem60 = PHI(Mem55, Mem59)}
wLoc04_56: orig: wLoc04
C_57: orig: C, uses: {branch fn0C00_0069(0x0003) l0C00_0049}
SCZO_58: orig: SCZO
Mem59: orig: Mem0, def: {Mem59[ds:0x0F04:byte] = 0x01}, uses: {Mem60 = PHI(Mem55, Mem59)}
Mem60: orig: Mem0, def: {Mem60 = PHI(Mem55, Mem59)}, uses: {branch (Mem60[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056}
SCZO_61: orig: SCZO
Z_62: orig: Z
SZO_63: orig: SZO
SO_64: orig: SO
O_65: orig: O
C_66: orig: C
SCZO_67: orig: SCZO
Mem68: orig: Mem0, def: {Mem68[ds:0x0F05:byte] = 0x01}
Mem69: orig: Mem0
bp_70: orig: bp, def: {bp_70 = bp - 0x0010}, uses: {branch bp_70 < 0x0000 l0C00_005F}{branch !OVERFLOW(bp_70 * 0x0002) l0C00_0068}
SCZO_71: orig: SCZO
Z_72: orig: Z
SZO_73: orig: SZO
C_74: orig: C
SO_75: orig: SO
O_76: orig: O
Mem77: orig: Mem0, def: {Mem77[ss:bp + 0xFFF6:byte] = 0x01}
Mem78: orig: Mem0
bp_79: orig: bp
SCZO_80: orig: SCZO
Z_81: orig: Z
SZO_82: orig: SZO
C_83: orig: C
SO_84: orig: SO
O_85: orig: O
Mem86: orig: Mem0, def: {Mem86[ds:0x0F07:byte] = 0x01}
Mem87: orig: Mem0
// fn0C00_0000
void fn0C00_0000(word16 bp, selector ds)
fn0C00_0000_entry:
	def Mem0
	def ds
	def ss
	def bp
	// succ:  l0C00_0000
l0C00_0000:
	branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
	// succ:  l0C00_000A l0C00_000F
l0C00_000A:
	Mem79[ds:0x0F00:byte] = 0x01
	// succ:  l0C00_000F
l0C00_000F:
	Mem22 = PHI(Mem0, Mem21)
	v7_23 = Mem0[ds:0x0106:word16] - Mem0[ds:0x0104:word16]
	Mem24[ds:0x0106:word16] = v7_23
	branch v7_23 <= 0x0000 l0C00_001E
	// succ:  l0C00_0019 l0C00_001E
l0C00_0019:
	Mem78[ds:0x0F01:byte] = 0x01
	// succ:  l0C00_001E
l0C00_001E:
	Mem33 = PHI(Mem25, Mem32)
	branch (Mem24[ds:0x0106:word16] & Mem24[ds:0x0108:word16]) == 0x0000 l0C00_002D
	// succ:  6 7
l0C00_0028:
	Mem43[ds:0x0F02:byte] = 0x01
	// succ:  7
l0C00_002D:
	Mem44 = PHI(Mem33, Mem43)
	branch Mem44[ds:0x010A:word16] >=u Mem44[ds:0x010C:word16] l0C00_003D
	// succ:  8 9
l0C00_0038:
	Mem54[ds:0x0F03:byte] = 0x01
	// succ:  9
l0C00_003D:
	Mem55 = PHI(Mem44, Mem54)
	branch fn0C00_0069(0x0003) l0C00_0049
	// succ:  10 11
l0C00_0044:
	Mem59[ds:0x0F04:byte] = 0x01
	// succ:  11
l0C00_0049:
	Mem60 = PHI(Mem55, Mem59)
	branch (Mem60[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056
	// succ:  12 13
l0C00_0051:
	Mem68[ds:0x0F05:byte] = 0x01
	// succ:  13
l0C00_0056:
	bp_70 = bp - 0x0010
	branch bp_70 < 0x0000 l0C00_005F
	// succ:  14 15
l0C00_005B:
	Mem77[ss:bp - 0x000A:byte] = 0x01
	// succ:  15
l0C00_005F:
	branch !OVERFLOW(bp_70 * 0x0002) l0C00_0068
	// succ:  l0C00_0063 l0C00_0068
l0C00_0063:
	Mem72[ds:0x0F07:byte] = 0x01
	// succ:  l0C00_0068
l0C00_0068:
	return
	// succ:  18
fn0C00_0000_exit:
	// succ: 

Mem0: Mem0:Global memory
fp: fp:Temporary
bp: bp:Register bp
wLoc04: wLoc04:Local -0004
wArg00: wArg00:Stack +0000, def: {def wArg00}, uses: {return cond(wArg00)}
SCZO: SCZO:Flags
C: C:Flags
wLoc04_7: orig: wLoc04
SCZO_8: orig: SCZO, uses: {return cond(wArg00)}
C_9: orig: C
bp_10: orig: bp
// fn0C00_0069
bool fn0C00_0069(word16 wArg00)
fn0C00_0069_entry:
	def wArg00
l0C00_0069:
	return cond(wArg00)
	// succ:  2
fn0C00_0069_exit:

