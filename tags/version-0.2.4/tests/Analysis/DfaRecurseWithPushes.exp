// void fn0C00_0000(Register word16 di, Register selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: 0
// MayUse:  di ds
// LiveOut:
// Trashed: SCZO esi ax si di al ah
// Preserved:
// fn0C00_0000
void fn0C00_0000(word16 di, selector ds)
fn0C00_0000_entry:		// pred:
	// succ:  l0C00_0000
l0C00_0000:		// pred: fn0C00_0000_entry
	fn0C00_0007(0x1230, di, ds)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:		// pred: l0C00_0000
	// succ: 

// void fn0C00_0007(Register word16 si, Register word16 di, Register selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: 0
// MayUse:  si di ds
// LiveOut:
// Trashed: SCZO esi ax si di al ah
// Preserved: si
// fn0C00_0007
void fn0C00_0007(word16 si, word16 di, selector ds)
fn0C00_0007_entry:		// pred:
	// succ:  l0C00_0007
l0C00_0007:		// pred: fn0C00_0007_entry
	fn0C00_0020(ds)
	Mem14[ds:0x1444:word16] = Mem0[ds:0x1444:word16] + Mem0[ds:si + 0x0028:word16]
	branch Mem14[ds:di + 0x0030:byte] == 0x00 l0C00_001F
	// succ:  l0C00_0019 l0C00_001F
l0C00_0019:		// pred: l0C00_0007
	fn0C00_0007(si, Mem14[ds:di + 0x0030:word16], ds)
	// succ:  l0C00_001F
l0C00_001F:		// pred: l0C00_0007 l0C00_0019
	return
	// succ:  fn0C00_0007_exit
fn0C00_0007_exit:		// pred: l0C00_001F
	// succ: 

// void fn0C00_0020(Register selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: 0
// MayUse:  ds
// LiveOut:
// Trashed: esi si
// Preserved:
// fn0C00_0020
void fn0C00_0020(selector ds)
fn0C00_0020_entry:		// pred:
	// succ:  l0C00_0020
l0C00_0020:		// pred: fn0C00_0020_entry
	Mem5[ds:0x4321:word32] = 0x00001234
	// succ:  fn0C00_0020_exit
fn0C00_0020_exit:		// pred: l0C00_0020
	// succ: 

