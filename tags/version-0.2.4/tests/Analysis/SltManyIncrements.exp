Mem0:Global memory
    def:  def Mem0
    uses: Mem5 = PHI(Mem0, Mem16, Mem10)
fp:Temporary
r0:Register r0
    def:  def r0
    uses: r0_4 = PHI(r0, r0_15, r0_9)
r1:Register r1
r0_4: orig: r0
    def:  r0_4 = PHI(r0, r0_15, r0_9)
    uses: r1_6 = Mem5[r0_4:byte]
          r0_7 = r0_4 + 0x00000001
          r0_9 = r0_4 + 0x00000002
          Mem16[0x33333331:word32] = Mem13[r0_4 + 0x00000002:byte]
          r0_15 = r0_4 + 0x00000003
Mem5: orig: Mem0
    def:  Mem5 = PHI(Mem0, Mem16, Mem10)
    uses: r1_6 = Mem5[r0_4:byte]
          Mem10[0x33333330:word32] = Mem5[r0_7:byte]
          Mem13[0x33333330:word32] = Mem5[r0_7:byte]
r1_6: orig: r1
    def:  r1_6 = Mem5[r0_4:byte]
    uses: branch r1_6 != 0x01 not1
          branch r1_6 != 0x02 done
r0_7: orig: r0
    def:  r0_7 = r0_4 + 0x00000001
    uses: Mem10[0x33333330:word32] = Mem5[r0_7:byte]
          Mem13[0x33333330:word32] = Mem5[r0_7:byte]
r1_8: orig: r1
    uses: Mem10[0x33333330:word32] = Mem5[r0_7:byte]
r0_9: orig: r0
    def:  r0_9 = r0_4 + 0x00000002
    uses: r0_4 = PHI(r0, r0_15, r0_9)
Mem10: orig: Mem0
    def:  Mem10[0x33333330:word32] = Mem5[r0_7:byte]
    uses: Mem5 = PHI(Mem0, Mem16, Mem10)
r1_11: orig: r1
    uses: Mem13[0x33333330:word32] = Mem5[r0_7:byte]
r0_12: orig: r0
Mem13: orig: Mem0
    def:  Mem13[0x33333330:word32] = Mem5[r0_7:byte]
    uses: Mem16[0x33333331:word32] = Mem13[r0_4 + 0x00000002:byte]
r1_14: orig: r1
    uses: Mem16[0x33333331:word32] = Mem13[r0_4 + 0x00000002:byte]
r0_15: orig: r0
    def:  r0_15 = r0_4 + 0x00000003
    uses: r0_4 = PHI(r0, r0_15, r0_9)
Mem16: orig: Mem0
    def:  Mem16[0x33333331:word32] = Mem13[r0_4 + 0x00000002:byte]
    uses: Mem5 = PHI(Mem0, Mem16, Mem10)
// ManyIncrements
void ManyIncrements()
ManyIncrements_entry:		// pred:
	def Mem0
	def r0
	// succ:  loopTop
loopTop:		// pred: ManyIncrements_entry l1 l2
	r0_4 = PHI(r0, r0_15, r0_9)
	Mem5 = PHI(Mem0, Mem16, Mem10)
	r1_6 = Mem5[r0_4:byte]
	r0_7 = r0_4 + 0x00000001
	branch r1_6 != 0x01 not1
	// succ:  l1 not1
l1:		// pred: loopTop
	Mem13[0x33333330:word32] = Mem5[r0_7:byte]
	Mem16[0x33333331:word32] = Mem13[r0_4 + 0x00000002:byte]
	r0_15 = r0_4 + 0x00000003
	// succ:  loopTop
not1:		// pred: loopTop
	branch r1_6 != 0x02 done
	// succ:  l2 done
l2:		// pred: not1
	Mem10[0x33333330:word32] = Mem5[r0_7:byte]
	r0_9 = r0_4 + 0x00000002
	// succ:  loopTop
done:		// pred: not1
	return
	// succ:  ManyIncrements_exit
ManyIncrements_exit:		// pred: done
	// succ: 
- Interference graph -------------------
Mem0 interferes with r0
r0_4 interferes with Mem5
r0_4 interferes with r1_6
r0_4 interferes with r0_7
r0_4 interferes with Mem10
r0_4 interferes with Mem13
r0_4 interferes with Mem16
r1_6 interferes with r0_7
Mem13 interferes with r1_14
