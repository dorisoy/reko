Mem0:Global memory
    def:  def Mem0
    uses: ax_7 = Mem0[ds:bx + 0x0004:word16]
fp:Temporary
bx:Register bx
    def:  def bx
    uses: ax_7 = Mem0[ds:bx + 0x0004:word16]
          Mem9[ds:bx + 0x0006:word16] = ax_7 *s ax_7
ds:Register ds
    def:  def ds
    uses: ax_7 = Mem0[ds:bx + 0x0004:word16]
          Mem9[ds:bx + 0x0006:word16] = ax_7 *s ax_7
          Mem11[ds:si + 0x04D4:word16] = si + 0x0002
ax:Register ax
si:Register si
    def:  def si
    uses: Mem11[ds:si + 0x04D4:word16] = si + 0x0002
          Mem11[ds:si + 0x04D4:word16] = si + 0x0002
SCZO:Flags
ax_7: orig: ax
    def:  ax_7 = Mem0[ds:bx + 0x0004:word16]
    uses: Mem9[ds:bx + 0x0006:word16] = ax_7 *s ax_7
          Mem9[ds:bx + 0x0006:word16] = ax_7 *s ax_7
ax_8: orig: ax
    uses: Mem9[ds:bx + 0x0006:word16] = ax_7 *s ax_7
Mem9: orig: Mem0
    def:  Mem9[ds:bx + 0x0006:word16] = ax_7 *s ax_7
bx_10: orig: bx
    uses: Mem11[ds:si + 0x04D4:word16] = si + 0x0002
Mem11: orig: Mem0
    def:  Mem11[ds:si + 0x04D4:word16] = si + 0x0002
ax_12: orig: ax
SCZO_13: orig: SCZO
// fn0C00_0000
void fn0C00_0000(word16 bx, word16 si, selector ds)
fn0C00_0000_entry:		// pred:
	def Mem0
	def bx
	def ds
	def si
	// succ:  l0C00_0000
l0C00_0000:		// pred: fn0C00_0000_entry
	ax_7 = Mem0[ds:bx + 0x0004:word16]
	Mem9[ds:bx + 0x0006:word16] = ax_7 *s ax_7
	Mem11[ds:si + 0x04D4:word16] = si + 0x0002
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:		// pred: l0C00_0000
	// succ: 

