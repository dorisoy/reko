// fn0C00_0000 /////////////////////
	LiveOut:  
	MayUseIn:  ds
	BypassIn: 
	Trashed:   ax cx bx al cl bl ah ch bh
	Preserved:
// fn0C00_0000
void fn0C00_0000()
fn0C00_0000_entry:		// pred:
	// succ:  l0C00_0000
// DataOut: ds
l0C00_0000:		// pred: fn0C00_0000_entry
	cx = 0x007B
	ax = 0x0020
	bx = 0x3212
	ax = maybeterminate(ax, bx)
	Mem0[ds:0x0230:word16] = ax
	Mem0[ds:0x0234:word16] = cx
	return
	// succ:  fn0C00_0000_exit
// DataOut:
fn0C00_0000_exit:		// pred: l0C00_0000
	// succ: 
// DataOut:
// maybeterminate /////////////////////
	LiveOut:  
	MayUseIn:  ax bx ds
	BypassIn: 
	Trashed:   SCZO ax cx bx al cl bl ah ch bh
	Preserved:
// maybeterminate
word16 maybeterminate(word16 ax, word16 bx)
maybeterminate_entry:		// pred:
	// succ:  l0C00_0015
// DataOut: ax bx ds
l0C00_0015:
	SCZO = cond(ax - Mem0[ds:bx:word16])
	branch Test(ULT,C) l0C00_0023
	// succ:  l0C00_0019 l0C00_0023
// DataOut: ax bx ds
l0C00_0019:
	SCZO = cond(ax - Mem0[ds:bx + 0x0002:word16])
	branch Test(UGE,C) l0C00_0023
	// succ:  l0C00_001E l0C00_0023
// DataOut: ax bx ds
l0C00_0023:
	cx = 0x0000
	SCZO = cond(cx)
	Mem0[ds:0x0232:word16] = cx
	ax = 0x4C00
	msdos_terminate(al)
	// succ:  maybeterminate_exit
// DataOut:
l0C00_001E:
	bx = bx + ax
	SCZO = cond(bx)
	ax = Mem0[ds:bx:word16]
	return
// DataOut:
maybeterminate_exit:
// DataOut:
