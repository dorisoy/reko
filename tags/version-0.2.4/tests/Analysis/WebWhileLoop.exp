// fn0C00_0000
void fn0C00_0000(word16 bp, selector ds)
fn0C00_0000_entry:		// pred:
	// succ:  l0C00_0000
l0C00_0000:		// pred: fn0C00_0000_entry
	word16 bx_12 = 0x0000
	word16 ax_13 = Mem0[ss:bp + 0x0006:word16]
	branch ax_13 <= 0x0000 l0C00_0012
	// succ:  l0C00_0009 l0C00_0012
l0C00_0009:		// pred: l0C00_0000
	word16 cx_24 = ax_13
	// succ:  l0C00_000B
l0C00_000B:		// pred: l0C00_0009 l0C00_000B
	bx_12 = bx_12 + cx_24
	cx_24 = cx_24 - 0x0001
	branch cx_24 != 0x0000 l0C00_000B
	// succ:  l0C00_000F l0C00_000B
l0C00_000F:		// pred: l0C00_000B
	// succ:  l0C00_0016
l0C00_0016:		// pred: l0C00_0012 l0C00_000F
	Mem41[ds:0x0300:word16] = bx_12
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:		// pred: l0C00_0016
	// succ: 
l0C00_0012:		// pred: l0C00_0000
	bx_12 = -ax_13
	// succ:  l0C00_0016

