Mem0:Global memory
fp:Temporary
bx:Register bx
    def:  def bx
    uses: branch bx == 0x0000 l0C00_0013
          branch bx > 0x0000 l0C00_000D
SCZO:Flags
Z:Flags
ax:Register ax
ds:Register ds
    def:  def ds
    uses: Mem21[ds:0x0100:word16] = ax_18
SZO:Flags
SCZO_8: orig: SCZO
Z_9: orig: Z
SZO_10: orig: SZO
ax_11: orig: ax
    def:  ax_11 = 0x0000
    uses: ax_18 = PHI(ax_11, ax_15, ax_16)
SCZO_12: orig: SCZO
Z_13: orig: Z
SZO_14: orig: SZO
ax_15: orig: ax
    def:  ax_15 = 0x0001
    uses: ax_18 = PHI(ax_11, ax_15, ax_16)
ax_16: orig: ax
    def:  ax_16 = 0xFFFF
    uses: ax_18 = PHI(ax_11, ax_15, ax_16)
SZO_17: orig: SZO
ax_18: orig: ax
    def:  ax_18 = PHI(ax_11, ax_15, ax_16)
    uses: Mem21[ds:0x0100:word16] = ax_18
Z_19: orig: Z
SCZO_20: orig: SCZO
Mem21: orig: Mem0
    def:  Mem21[ds:0x0100:word16] = ax_18
// fn0C00_0000
void fn0C00_0000(word16 bx, selector ds)
fn0C00_0000_entry:		// pred:
	def bx
	def ds
	// succ:  l0C00_0000
l0C00_0000:		// pred: fn0C00_0000_entry
	branch bx == 0x0000 l0C00_0013
	// succ:  l0C00_0005 l0C00_0013
l0C00_0005:		// pred: l0C00_0000
	branch bx > 0x0000 l0C00_000D
	// succ:  l0C00_0007 l0C00_000D
l0C00_0007:		// pred: l0C00_0005
	ax_16 = 0xFFFF
	// succ:  l0C00_0015
l0C00_0015:		// pred: l0C00_0013 l0C00_000D l0C00_0007
	ax_18 = PHI(ax_11, ax_15, ax_16)
	Mem21[ds:0x0100:word16] = ax_18
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:		// pred: l0C00_0015
	// succ: 
l0C00_000D:		// pred: l0C00_0005
	ax_15 = 0x0001
	// succ:  l0C00_0015
l0C00_0013:		// pred: l0C00_0000
	ax_11 = 0x0000
	// succ:  l0C00_0015

