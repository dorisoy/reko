Mem0:Global memory
fp:Temporary
si:Register si
ax:Register ax
ds:Register ds
    def:  def ds
    uses: Mem8[ds:0x0202:word16] = fn0C00_0015(0x0200, ds)
          Mem8[ds:0x0202:word16] = fn0C00_0015(0x0200, ds)
          Mem12[ds:0x0302:byte] = (byte) fn0C00_0015(0x0300, ds)
          Mem12[ds:0x0302:byte] = (byte) fn0C00_0015(0x0300, ds)
al:Register al
si_6: orig: si
ax_7: orig: ax
    uses: Mem8[ds:0x0202:word16] = fn0C00_0015(0x0200, ds)
Mem8: orig: Mem0
    def:  Mem8[ds:0x0202:word16] = fn0C00_0015(0x0200, ds)
si_9: orig: si
ax_10: orig: ax
al_11: orig: al
    uses: Mem12[ds:0x0302:byte] = (byte) fn0C00_0015(0x0300, ds)
Mem12: orig: Mem0
    def:  Mem12[ds:0x0302:byte] = (byte) fn0C00_0015(0x0300, ds)
// fn0C00_0000
void fn0C00_0000(selector ds)
fn0C00_0000_entry:		// pred:
	def ds
	// succ:  l0C00_0000
l0C00_0000:		// pred: fn0C00_0000_entry
	Mem8[ds:0x0202:word16] = fn0C00_0015(0x0200, ds)
	Mem12[ds:0x0302:byte] = (byte) fn0C00_0015(0x0300, ds)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:		// pred: l0C00_0000
	// succ: 

Mem0:Global memory
    def:  def Mem0
    uses: return Mem0[ds:si:word16]
fp:Temporary
si:Register si
    def:  def si
    uses: return Mem0[ds:si:word16]
ds:Register ds
    def:  def ds
    uses: return Mem0[ds:si:word16]
ax:Register ax
ax_5: orig: ax
    uses: return Mem0[ds:si:word16]
// fn0C00_0015
word16 fn0C00_0015(word16 si, selector ds)
fn0C00_0015_entry:		// pred:
	def Mem0
	def si
	def ds
	// succ:  l0C00_0015
l0C00_0015:		// pred: fn0C00_0015_entry
	return Mem0[ds:si:word16]
	// succ:  fn0C00_0015_exit
fn0C00_0015_exit:		// pred: l0C00_0015
	// succ: 

