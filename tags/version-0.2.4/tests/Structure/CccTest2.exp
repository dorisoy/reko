// fn0C00_0000
void fn0C00_0000(word16 ax, word16 cx, word16 bx, selector ds)
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	branch ax == 0x0001 l0C00_000A
	// succ:  l0C00_0005 l0C00_000A
l0C00_0005:
	branch bx == 0x0002 l0C00_0016
	// succ:  l0C00_000A l0C00_0016
l0C00_000A:
	branch cx == 0x0003 l0C00_0016
	// succ:  l0C00_000F l0C00_0016
l0C00_000F:
	Mem14[ds:0x0300:word16] = ax
	// succ:  l0C00_001A
l0C00_001A:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	// succ: 
l0C00_0016:
	Mem17[ds:0x0302:word16] = cx
	// succ:  l0C00_001A

// fn0C00_0000
void fn0C00_0000(word16 ax, word16 cx, word16 bx, selector ds)
fn0C00_0000_entry:		// pred:
	// succ:  l0C00_0000
l0C00_0000:		// pred: fn0C00_0000_entry
	branch (ax == 0x0001 || bx != 0x0002) && cx != 0x0003 l0C00_000A
	// succ:  l0C00_0016 l0C00_000F
l0C00_0005:
l0C00_0016:		// pred: l0C00_0000
	Mem17[ds:0x0302:word16] = cx
	// succ:  l0C00_001A
l0C00_001A:		// pred: l0C00_0016 l0C00_000F
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:		// pred: l0C00_001A
	// succ: 
l0C00_000A:
l0C00_000F:		// pred: l0C00_0000
	Mem14[ds:0x0300:word16] = ax
	// succ:  l0C00_001A
================
