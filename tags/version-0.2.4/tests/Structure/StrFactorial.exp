// fn0C00_0000
void fn0C00_0000(selector ds)
fn0C00_0000_entry:		// pred:
	Mem9[ds:0x0064:word16] = fn0C00_000F(0x0064)
	return
	// succ:  fn0C00_0000_exit
l0C00_0000:
fn0C00_0000_exit:		// pred: fn0C00_0000_entry
	// succ: 

void fn0C00_0000(selector ds)
{
	Mem9[ds:0x0064:word16] = fn0C00_000F(0x0064);
	return;
}
===========================
// fn0C00_000F
word16 fn0C00_000F(word16 wArg00)
fn0C00_000F_entry:		// pred:
	// succ:  l0C00_000F
l0C00_000F:		// pred: fn0C00_000F_entry
	word16 ax_18
	word16 ax_14 = wArg00 - 0x0001
	branch ax_14 == 0x0000 l0C00_0026
	// succ:  l0C00_0018 l0C00_0026
l0C00_0018:		// pred: l0C00_000F
	ax_18 = (word16) (wArg00 *s fn0C00_000F(ax_14)) (alias)
	// succ:  l0C00_0029
l0C00_0029:		// pred: l0C00_0026 l0C00_0018
	return ax_18
	// succ:  fn0C00_000F_exit
fn0C00_000F_exit:		// pred: l0C00_0029
	// succ: 
l0C00_0026:		// pred: l0C00_000F
	ax_18 = 0x0001
	// succ:  l0C00_0029

word16 fn0C00_000F(word16 wArg00)
{
	word16 ax_18;
	word16 ax_14 = wArg00 - 0x0001;
	if (ax_14 != 0x0000)
		ax_18 = (word16) (wArg00 *s fn0C00_000F(ax_14));
	else
		ax_18 = 0x0001;
	return ax_18;
}
===========================
