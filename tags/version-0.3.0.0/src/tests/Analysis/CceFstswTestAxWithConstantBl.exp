Mem0: Mem0:Global memory, def: {def Mem0}, uses: {FPUF_15 = cond(rArg0 - Mem0[ds:si:real32])}
fp: fp:Temporary
bx: bx:Register bx
rArg0: rArg0:FPU stack, def: {def rArg0}, uses: {FPUF_15 = cond(rArg0 - Mem0[ds:si:real32])}
si: si:Register si, def: {def si}, uses: {FPUF_15 = cond(rArg0 - Mem0[ds:si:real32])}
ds: ds:Register ds, def: {def ds}, uses: {FPUF_15 = cond(rArg0 - Mem0[ds:si:real32])}{Mem21[ds:0x0300:byte] = 0x01}
FPUF: FPUF:Flags
ax: ax:Register ax
ah: ah:Register ah
bl: bl:Register bl
SCZO: SCZO:Flags
C: C:Flags
Z: Z:Flags
bx_13: orig: bx
bl_14: orig: bl
FPUF_15: orig: FPUF, def: {FPUF_15 = cond(rArg0 - Mem0[ds:si:real32])}, uses: {branch (FPUF_15 & 0x01) == 0x00 l0C00_0010}
ax_16: orig: ax
ah_17: orig: ah
SCZO_18: orig: SCZO
Z_19: orig: Z
C_20: orig: C
Mem21: orig: Mem0, def: {Mem21[ds:0x0300:byte] = 0x01}
Mem22: orig: Mem0
// fn0C00_0000
void fn0C00_0000(word16 si, selector ds, real64 rArg0)
fn0C00_0000_entry:
	def Mem0
	def rArg0
	def si
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	branch (rArg0 < Mem0[ds:si:real32]) l0C00_0010
	// succ:  2 3
l0C00_000B:
	Mem22[ds:0x0300:byte] = 0x01
	// succ:  l0C00_0010
l0C00_0010:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

