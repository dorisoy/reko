// fn0C00_0000
// Return size: 0
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def fp
	def ds
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	sp_1 = fp
	si_4 = Mem0[ds:0x0200:word16]
	ax_6 = fn0C00_0025(si_4, ds, out si_5)
	Mem7[ds:0x0310:word16] = ax_6
	ax_9 = fn0C00_0027(si_5, ds, out si_8)
	Mem10[ds:0x0320:word16] = ax_9
	ax_12 = fn0C00_002F(si_8, ds, out si_11)
	Mem13[ds:0x0330:word16] = ax_12
	ax_15 = fn0C00_0036(si_11, ds, out si_14)
	Mem16[ds:0x0340:word16] = ax_15
	Mem17[ds:0x0400:word16] = si_14
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

// fn0C00_0000
// Return size: 0
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def ds
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	si_4 = Mem0[ds:0x0200:word16]
	ax_6 = fn0C00_0025(si_4, ds, out si_5)
	Mem7[ds:0x0310:word16] = ax_6
	ax_9 = fn0C00_0027(si_5, ds, out si_8)
	Mem10[ds:0x0320:word16] = ax_9
	ax_12 = fn0C00_002F(si_8, ds, out si_11)
	Mem13[ds:0x0330:word16] = ax_12
	ax_15 = fn0C00_0036(si_11, ds, out si_14)
	Mem16[ds:0x0340:word16] = ax_15
	Mem17[ds:0x0400:word16] = si_14
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
====================
// fn0C00_0025
// Return size: 0
word16 fn0C00_0025(word16 si, selector ds, ptr16 siOut)
fn0C00_0025_entry:
	def fp
	def ds
	def si
	def Mem0
	def siOut
	// succ:  l0C00_0025
l0C00_0025:
	sp_1 = fp
	ax_5 = Mem0[ds:si:word16]
	si_6 = si + 0x0002
	return ax_5
	// succ:  fn0C00_0025_exit
fn0C00_0025_exit:
	use si_6 (=> siOut)

// fn0C00_0025
// Return size: 0
word16 fn0C00_0025(word16 si, selector ds, ptr16 siOut)
fn0C00_0025_entry:
	def ds
	def si
	def Mem0
	def siOut
	// succ:  l0C00_0025
l0C00_0025:
	ax_5 = Mem0[ds:si:word16]
	*siOut = si + 0x0002
	return ax_5
	// succ:  fn0C00_0025_exit
fn0C00_0025_exit:
====================
// fn0C00_0027
// Return size: 0
word16 fn0C00_0027(word16 si, selector ds, ptr16 siOut)
fn0C00_0027_entry:
	def fp
	def si
	def siOut
	def ds
	def Mem0
	// succ:  l0C00_0027
l0C00_0027:
	sp_1 = fp
	ax_2 = 0x0000
	si_4 = si | si
	SZO_5 = cond(si_4)
	Z_6 = SZO_5 (alias)
	C_7 = false
	branch Test(EQ,Z_6) l0C00_002E
	// succ:  l0C00_002D l0C00_002E
l0C00_002D:
	ax_13 = Mem0[ds:si_4:word16]
	si_14 = si_4 + 0x0002
	// succ:  l0C00_002E
l0C00_002E:
	ax_8 = PHI(ax_2, ax_13)
	si_9 = PHI(si_4, si_14)
	return ax_8
	// succ:  fn0C00_0027_exit
fn0C00_0027_exit:
	use si_9 (=> siOut)

// fn0C00_0027
// Return size: 0
word16 fn0C00_0027(word16 si, selector ds, ptr16 siOut)
fn0C00_0027_entry:
	def si
	def siOut
	def ds
	def Mem0
	// succ:  l0C00_0027
l0C00_0027:
	ax_2 = 0x0000
	si_4 = si | si
	*siOut = si_4
	SZO_5 = cond(si_4)
	Z_6 = SZO_5 (alias)
	branch Test(EQ,Z_6) l0C00_002E
	// succ:  l0C00_002D l0C00_002E
l0C00_002D:
	ax_13 = Mem0[ds:si_4:word16]
	*siOut = si_4 + 0x0002
	// succ:  l0C00_002E
l0C00_002E:
	ax_8 = PHI(ax_2, ax_13)
	return ax_8
	// succ:  fn0C00_0027_exit
fn0C00_0027_exit:
====================
// fn0C00_002F
// Return size: 0
word16 fn0C00_002F(word16 si, selector ds, ptr16 siOut)
fn0C00_002F_entry:
	def fp
	def ds
	def si
	def Mem0
	def siOut
	// succ:  l0C00_002F
l0C00_002F:
	sp_1 = fp
	ax_5 = Mem0[ds:si:word16]
	si_6 = si + 0x0002
	Mem7[ds:si_6 + 0x0002:word16] = 0x0000
	return ax_5
	// succ:  fn0C00_002F_exit
fn0C00_002F_exit:
	use si_6 (=> siOut)

// fn0C00_002F
// Return size: 0
word16 fn0C00_002F(word16 si, selector ds, ptr16 siOut)
fn0C00_002F_entry:
	def ds
	def si
	def Mem0
	def siOut
	// succ:  l0C00_002F
l0C00_002F:
	ax_5 = Mem0[ds:si:word16]
	si_6 = si + 0x0002
	*siOut = si_6
	Mem7[ds:si_6 + 0x0002:word16] = 0x0000
	return ax_5
	// succ:  fn0C00_002F_exit
fn0C00_002F_exit:
====================
// fn0C00_0036
// Return size: 0
word16 fn0C00_0036(word16 si, selector ds, ptr16 siOut)
fn0C00_0036_entry:
	def fp
	def ds
	def si
	def Mem0
	def siOut
	// succ:  l0C00_0036
l0C00_0036:
	sp_1 = fp
	ax_5 = Mem0[ds:si:word16]
	si_6 = si + 0x0002
	ax_8 = fn0C00_0025(si_6, ds, out si_7)
	return ax_8
	// succ:  fn0C00_0036_exit
fn0C00_0036_exit:
	use si_7 (=> siOut)

// fn0C00_0036
// Return size: 0
word16 fn0C00_0036(word16 si, selector ds, ptr16 siOut)
fn0C00_0036_entry:
	def ds
	def si
	// succ:  l0C00_0036
l0C00_0036:
	si_6 = si + 0x0002
	ax_8 = fn0C00_0025(si_6, ds, out si_7)
	return ax_8
	// succ:  fn0C00_0036_exit
fn0C00_0036_exit:
====================
