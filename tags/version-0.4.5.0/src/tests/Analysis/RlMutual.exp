// fn0C00_0000 /////////////////////
	LiveOut:  
	MayUseIn:  dx
	BypassIn: 
	Trashed:   SCZO ax dx al dl ah dh
	Preserved: sp
// fn0C00_0000
void fn0C00_0000()
// SymbolicIn: sp:fp
fn0C00_0000_entry:
// DataOut: dx
// DataOut (flags): 

// SymbolicIn: sp:fp
l0C00_0000:
	sp = fp
	call fn0C00_0004 (retsize: 2; depth: 2)
	return
// DataOut:
// DataOut (flags): 

// SymbolicIn: sp:fp ax:<invalid> dx:<invalid>
fn0C00_0000_exit:
// DataOut:
// DataOut (flags): 

// fn0C00_0004 /////////////////////
	LiveOut:   ax dx
	MayUseIn:  dx
	BypassIn: 
	Trashed:   SCZO ax dx al dl ah dh
	Preserved: sp
// fn0C00_0004
void fn0C00_0004()
// SymbolicIn: sp:fp
fn0C00_0004_entry:
// DataOut: dx
// DataOut (flags): 

// SymbolicIn: sp:fp
l0C00_0004:
	sp = fp
	SCZO = cond(dx - 0x001E)
	branch Test(NE,Z) l0C00_000F
// DataOut: dx
// DataOut (flags): 

// SymbolicIn: sp:fp
l0C00_0009:
	call fn0C00_0013 (retsize: 2; depth: 2)
// DataOut: dx
// DataOut (flags): 

// SymbolicIn: sp:fp
l0C00_000F:
	dx = dx - 0x0001
	SZO = cond(dx)
// DataOut: dx
// DataOut (flags): 

// SymbolicIn: sp:fp dx:<invalid> ax:<invalid>
l0C00_0010:
	ax = dx
	return
// DataOut: ax dx
// DataOut (flags): 

// SymbolicIn: sp:fp dx:<invalid> ax:<invalid>
fn0C00_0004_exit:
// DataOut: ax dx
// DataOut (flags): 

// fn0C00_0013 /////////////////////
	LiveOut:   dx
	MayUseIn:  dx
	BypassIn: 
	Trashed:   SCZO ax dx al dl ah dh
	Preserved: sp
// fn0C00_0013
void fn0C00_0013()
// SymbolicIn: sp:fp
fn0C00_0013_entry:
// DataOut: dx
// DataOut (flags): 

// SymbolicIn: sp:fp
l0C00_0013:
	sp = fp
	SCZO = cond(dx - 0x0014)
	branch Test(LT,SO) l0C00_001F
// DataOut: dx
// DataOut (flags): 

// SymbolicIn: sp:fp
l0C00_0018:
	dx = dx - 0x0001
	SZO = cond(dx)
	call fn0C00_0004 (retsize: 2; depth: 2)
// DataOut: ax dx
// DataOut (flags): 

// SymbolicIn: sp:fp
l0C00_001F:
	dx = dx - 0x000A
	SCZO = cond(dx)
	call fn0C00_0004 (retsize: 2; depth: 2)
// DataOut: ax dx
// DataOut (flags): 

// SymbolicIn: sp:fp dx:<invalid> ax:<invalid>
l0C00_0025:
	ax = ax + 0x0001
	SZO = cond(ax)
	return
// DataOut: dx
// DataOut (flags): 

// SymbolicIn: sp:fp dx:<invalid> ax:<invalid>
fn0C00_0013_exit:
// DataOut: dx
// DataOut (flags): 

