// Equivalence classes ////////////
Eq_1: (ptr (struct (0 Eq_4 t0000)))
	T_1 (in pptr : word32)
Eq_2: word32
	T_2 (in 0x00000000 : word32)
Eq_3: word32
	T_3 (in pptr + 0x00000000 : word32)
Eq_4: (ptr (struct (0 Eq_8 t0000)))
	T_4 (in Mem0[pptr + 0x00000000:word32] : word32)
	T_5 (in ptr : word32)
Eq_6: word32
	T_6 (in 0x00000000 : word32)
Eq_7: word32
	T_7 (in ptr + 0x00000000 : word32)
Eq_8: word32
	T_8 (in Mem0[ptr + 0x00000000:word32] : word32)
	T_9 (in v : word32)
// Type Variables ////////////
T_1: (in pptr : word32)
  Class: Eq_1
  DataType: (ptr (struct (0 Eq_4 t0000)))
  OrigDataType: (ptr (struct (0 T_4 t0000)))
T_2: (in 0x00000000 : word32)
  Class: Eq_2
  DataType: word32
  OrigDataType: word32
T_3: (in pptr + 0x00000000 : word32)
  Class: Eq_3
  DataType: word32
  OrigDataType: word32
T_4: (in Mem0[pptr + 0x00000000:word32] : word32)
  Class: Eq_4
  DataType: (ptr (struct (0 Eq_8 t0000)))
  OrigDataType: word32
T_5: (in ptr : word32)
  Class: Eq_4
  DataType: (ptr (struct (0 Eq_8 t0000)))
  OrigDataType: (ptr (struct (0 T_8 t0000)))
T_6: (in 0x00000000 : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_7: (in ptr + 0x00000000 : word32)
  Class: Eq_7
  DataType: word32
  OrigDataType: word32
T_8: (in Mem0[ptr + 0x00000000:word32] : word32)
  Class: Eq_8
  DataType: word32
  OrigDataType: word32
T_9: (in v : word32)
  Class: Eq_8
  DataType: word32
  OrigDataType: word32
