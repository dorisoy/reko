// fn0C00_0000
// Mem0:Global memory
// fp:Temporary
// di:Register di
// wLoc04:Local -0004
// ax:Register ax
// ds:Register ds
// return address size: 2
void fn0C00_0000()
fn0C00_0000_entry:		// pred:
	// succ:  l0C00_0000
l0C00_0000:		// pred: fn0C00_0000_entry
	call fn0C00_000F (depth: 2;)
	wLoc04 = di
	ax = 0x0100
	call fn0C00_0014 (depth: 4;)
	store(Mem0[ds:0x0300:word16]) = ax
	di = wLoc04
	call fn0C00_000F (depth: 2;)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:		// pred: l0C00_0000
	// succ: 
// fn0C00_000F
// Mem0:Global memory
// fp:Temporary
// di:Register di
// ds:Register ds
// return address size: 2
void fn0C00_000F()
fn0C00_000F_entry:		// pred:
	// succ:  l0C00_000F
l0C00_000F:		// pred: fn0C00_000F_entry
	store(Mem0[ds:di:word16]) = 0x0000
	return
	// succ:  fn0C00_000F_exit
fn0C00_000F_exit:		// pred: l0C00_000F
	// succ: 
// fn0C00_0014
// Mem0:Global memory
// fp:Temporary
// di:Register di
// SCZO:Flags
// ax:Register ax
// SZO:Flags
// return address size: 2
void fn0C00_0014()
fn0C00_0014_entry:		// pred:
	// succ:  l0C00_0014
l0C00_0014:		// pred: fn0C00_0014_entry
	di = 0x0000
	SCZO = cond(di)
	ax = ax - 0x0001
	SZO = cond(ax)
	return
	// succ:  fn0C00_0014_exit
fn0C00_0014_exit:		// pred: l0C00_0014
	// succ: 
