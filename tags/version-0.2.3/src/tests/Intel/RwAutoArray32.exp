// fn10000000
// Mem0:Global memory
// fp:Temporary
// eax:Register eax
// ecx:Register ecx
// SCZO:Flags
// dwLoc10:Local -0010
// dwLoc0C:Local -000C
// dwLoc08:Local -0008
// SZO:Flags
// esp:Register esp
// dwArg00:Stack +0000
// edi:Register edi
// fn10000000_frame:Temporary
// Frame escapes
// return address size: 4
void fn10000000()
fn10000000_entry:		// pred:
	// succ:  fn10000000_frame_asgn
fn10000000_frame_asgn:		// pred: fn10000000_entry
	fp = &fn10000000_frame
	// succ:  l10000000
l10000000:		// pred: fn10000000_frame_asgn
	eax = 0x00000000
	ecx = 0x00000000
	SCZO = cond(ecx)
	store(Mem0[fp - 16:word32]) = 0x00000001
	store(Mem0[fp - 12:word32]) = 0x00000002
	store(Mem0[fp - 8:word32]) = 0x00000003
	// succ:  l10000027
l10000027:		// pred: l10000000 l10000023
	SCZO = cond(ecx - 0x00000003)
	branch Test(LE,SZO) l10000023
	// succ:  l1000002C l10000023
l1000002C:		// pred: l10000027
	edi = dwArg00
	store(Mem0[edi:word32]) = eax
	return
	// succ:  fn10000000_exit
fn10000000_exit:		// pred: l1000002C
	// succ: 
l10000023:		// pred: l10000027
	eax = eax + Mem0[fp + 0xFFFFFFF0 + ecx * 0x00000004:word32]
	SCZO = cond(eax)
	ecx = ecx + 0x00000001
	SZO = cond(ecx)
	// succ:  l10000027

