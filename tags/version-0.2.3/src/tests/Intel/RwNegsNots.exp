// fn0C00_0000
// Mem0:Global memory
// fp:Temporary
// eax:Register eax
// C:Flags
// ds:Register ds
// v5:Temporary
// v6:Temporary
// ecx:Register ecx
// bx:Register bx
// v9:Temporary
// cx:Register cx
// SZO:Flags
// return address size: 2
void fn0C00_0000()
fn0C00_0000_entry:		// pred:
	// succ:  l0C00_0000
l0C00_0000:		// pred: fn0C00_0000_entry
	eax = -eax
	C = eax == 0x00000000
	eax = 0x00000000 - C
	store(Mem0[ds:0x0300:word32]) = eax
	v5 = Mem0[ds:0x0202:word16]
	store(Mem0[ds:0x0202:word16]) = -v5
	C = v5 == 0x0000
	v6 = Mem0[ds:0x0200:word16]
	store(Mem0[ds:0x0200:word16]) = -v6
	C = v6 == 0x0000
	ecx = 0x00000000 - C
	store(Mem0[ds:0x0308:word32]) = ecx
	bx = ~bx
	store(Mem0[ds:0x0304:word16]) = bx
	v9 = Mem0[ds:0x0204:word16]
	store(Mem0[ds:0x0204:word16]) = ~v9
	cx = Mem0[ds:0x0304:word16]
	cx = cx - 0x03E8
	cx = -cx
	SZO = cond(cx)
	C = cx == 0x0000
	store(Mem0[ds:0x0306:word16]) = cx
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:		// pred: l0C00_0000
	// succ: 

