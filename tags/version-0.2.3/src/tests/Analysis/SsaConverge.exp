Mem0:Global memory
    def:  def Mem0
fp:Temporary
    def:  def fp
bx:Register bx
    def:  def bx
    uses: SCZO_8 = cond(bx - 0x0000)
SCZO:Flags
    def:  def SCZO
Z:Flags
    def:  def Z
ax:Register ax
    def:  def ax
ds:Register ds
    def:  def ds
    uses: store(Mem21[ds:0x0100:word16]) = ax_18
SZO:Flags
    def:  def SZO
SCZO_8: orig: SCZO
    def:  SCZO_8 = cond(bx - 0x0000)
    uses: Z_9 = SCZO_8 (alias)
          SZO_10 = SCZO_8 (alias)
          SCZO_20 = PHI(SCZO_12, SCZO_8, SCZO_8)
          SCZO_20 = PHI(SCZO_12, SCZO_8, SCZO_8)
Z_9: orig: Z
    def:  Z_9 = SCZO_8 (alias)
    uses: branch Test(EQ,Z_9) l0C00_0013
          Z_19 = PHI(Z_13, Z_9, Z_9)
          Z_19 = PHI(Z_13, Z_9, Z_9)
SZO_10: orig: SZO
    def:  SZO_10 = SCZO_8 (alias)
    uses: branch Test(GT,SZO_10) l0C00_000D
          SZO_17 = PHI(SZO_14, SZO_10, SZO_10)
          SZO_17 = PHI(SZO_14, SZO_10, SZO_10)
ax_11: orig: ax
    def:  ax_11 = 0x0000
    uses: SCZO_12 = cond(ax_11)
          ax_18 = PHI(ax_11, ax_15, ax_16)
SCZO_12: orig: SCZO
    def:  SCZO_12 = cond(ax_11)
    uses: Z_13 = SCZO_12 (alias)
          SZO_14 = SCZO_12 (alias)
          SCZO_20 = PHI(SCZO_12, SCZO_8, SCZO_8)
Z_13: orig: Z
    def:  Z_13 = SCZO_12 (alias)
    uses: Z_19 = PHI(Z_13, Z_9, Z_9)
SZO_14: orig: SZO
    def:  SZO_14 = SCZO_12 (alias)
    uses: SZO_17 = PHI(SZO_14, SZO_10, SZO_10)
ax_15: orig: ax
    def:  ax_15 = 0x0001
    uses: ax_18 = PHI(ax_11, ax_15, ax_16)
ax_16: orig: ax
    def:  ax_16 = 0xFFFF
    uses: ax_18 = PHI(ax_11, ax_15, ax_16)
SZO_17: orig: SZO
    def:  SZO_17 = PHI(SZO_14, SZO_10, SZO_10)
ax_18: orig: ax
    def:  ax_18 = PHI(ax_11, ax_15, ax_16)
    uses: store(Mem21[ds:0x0100:word16]) = ax_18
Z_19: orig: Z
    def:  Z_19 = PHI(Z_13, Z_9, Z_9)
SCZO_20: orig: SCZO
    def:  SCZO_20 = PHI(SCZO_12, SCZO_8, SCZO_8)
Mem21: orig: Mem0
    def:  store(Mem21[ds:0x0100:word16]) = ax_18
// fn0C00_0000
void fn0C00_0000()
fn0C00_0000_entry:		// pred:
	def Mem0
	def fp
	def bx
	def SCZO
	def Z
	def ax
	def ds
	def SZO
	// succ:  l0C00_0000
l0C00_0000:		// pred: fn0C00_0000_entry
	SCZO_8 = cond(bx - 0x0000)
	Z_9 = SCZO_8 (alias)
	SZO_10 = SCZO_8 (alias)
	branch Test(EQ,Z_9) l0C00_0013
	// succ:  l0C00_0005 l0C00_0013
l0C00_0005:		// pred: l0C00_0000
	branch Test(GT,SZO_10) l0C00_000D
	// succ:  l0C00_0007 l0C00_000D
l0C00_0007:		// pred: l0C00_0005
	ax_16 = 0xFFFF
	// succ:  l0C00_0015
l0C00_0015:		// pred: l0C00_0013 l0C00_000D l0C00_0007
	SZO_17 = PHI(SZO_14, SZO_10, SZO_10)
	ax_18 = PHI(ax_11, ax_15, ax_16)
	Z_19 = PHI(Z_13, Z_9, Z_9)
	SCZO_20 = PHI(SCZO_12, SCZO_8, SCZO_8)
	store(Mem21[ds:0x0100:word16]) = ax_18
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:		// pred: l0C00_0015
	// succ: 
l0C00_000D:		// pred: l0C00_0005
	ax_15 = 0x0001
	// succ:  l0C00_0015
l0C00_0013:		// pred: l0C00_0000
	ax_11 = 0x0000
	SCZO_12 = cond(ax_11)
	Z_13 = SCZO_12 (alias)
	SZO_14 = SCZO_12 (alias)
	// succ:  l0C00_0015

