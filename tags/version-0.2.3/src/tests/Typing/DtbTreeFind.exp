// TreeFindMock
void TreeFindMock()
TreeFindMock_entry:		// pred:
	// succ:  seek
seek:		// pred: TreeFindMock_entry l3
	branch t == 0x00000000 found
	// succ:  l1 found
l1:		// pred: seek
	word32 vv_7 = Mem0[t + 0x00000000:word32]
	branch v == vv_7 found
	// succ:  l2 found
l2:		// pred: l1
	branch v < vv_7 lt
	// succ:  l3 lt
l3:		// pred: l2
	t = Mem0[t + 0x00000008:word32]
	// succ:  seek
lt:		// pred: l2
	t = Mem0[t + 0x00000004:word32]
	// succ:  found
found:		// pred: seek l1 lt
	return t
	// succ:  TreeFindMock_exit
TreeFindMock_exit:		// pred: found
	// succ: 

// Equivalence classes ////////////
Eq_2: (ptr (struct (0 T_8 t0000) (4 T_14 t0004) (8 T_17 t0008)))
	T_2 (in t : word32)
	T_3 (in 0x00000000 : word32)
	T_14 (in Mem0[t + 0x00000004:word32] : word32)
	T_17 (in Mem0[t + 0x00000008:word32] : word32)
Eq_4: bool
	T_4 (in t == 0x00000000 : bool)
Eq_5: int32
	T_5 (in vv_7 : word32)
	T_8 (in Mem0[t + 0x00000000:word32] : word32)
	T_9 (in v : word32)
Eq_6: word32
	T_6 (in 0x00000000 : word32)
Eq_7: word32
	T_7 (in t + 0x00000000 : word32)
Eq_10: bool
	T_10 (in v == vv_7 : bool)
Eq_11: bool
	T_11 (in v < vv_7 : bool)
Eq_12: word32
	T_12 (in 0x00000004 : word32)
Eq_13: word32
	T_13 (in t + 0x00000004 : word32)
Eq_15: word32
	T_15 (in 0x00000008 : word32)
Eq_16: word32
	T_16 (in t + 0x00000008 : word32)
// Type Variables ////////////
Globals: (in globals : ptr32)
  Class: Eq_1
  DataType: 
  OrigDataType: 
T_2: (in t : word32)
  Class: Eq_2
  DataType: (ptr (struct (0 T_8 t0000) (4 T_14 t0004) (8 T_17 t0008)))
  OrigDataType: (ptr (struct (0 T_8 t0000) (4 T_14 t0004) (8 T_17 t0008)))
T_3: (in 0x00000000 : word32)
  Class: Eq_2
  DataType: (ptr (struct (0 T_8 t0000) (4 T_14 t0004) (8 T_17 t0008)))
  OrigDataType: word32
T_4: (in t == 0x00000000 : bool)
  Class: Eq_4
  DataType: bool
  OrigDataType: bool
T_5: (in vv_7 : word32)
  Class: Eq_5
  DataType: int32
  OrigDataType: int32
T_6: (in 0x00000000 : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_7: (in t + 0x00000000 : word32)
  Class: Eq_7
  DataType: word32
  OrigDataType: word32
T_8: (in Mem0[t + 0x00000000:word32] : word32)
  Class: Eq_5
  DataType: int32
  OrigDataType: word32
T_9: (in v : word32)
  Class: Eq_5
  DataType: int32
  OrigDataType: int32
T_10: (in v == vv_7 : bool)
  Class: Eq_10
  DataType: bool
  OrigDataType: bool
T_11: (in v < vv_7 : bool)
  Class: Eq_11
  DataType: bool
  OrigDataType: bool
T_12: (in 0x00000004 : word32)
  Class: Eq_12
  DataType: word32
  OrigDataType: word32
T_13: (in t + 0x00000004 : word32)
  Class: Eq_13
  DataType: word32
  OrigDataType: word32
T_14: (in Mem0[t + 0x00000004:word32] : word32)
  Class: Eq_2
  DataType: (ptr (struct (0 T_8 t0000) (4 T_14 t0004) (8 T_17 t0008)))
  OrigDataType: word32
T_15: (in 0x00000008 : word32)
  Class: Eq_15
  DataType: word32
  OrigDataType: word32
T_16: (in t + 0x00000008 : word32)
  Class: Eq_16
  DataType: word32
  OrigDataType: word32
T_17: (in Mem0[t + 0x00000008:word32] : word32)
  Class: Eq_2
  DataType: (ptr (struct (0 T_8 t0000) (4 T_14 t0004) (8 T_17 t0008)))
  OrigDataType: word32
