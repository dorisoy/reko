// fn0C00_0000
void fn0C00_0000(word16 bx, word16 si, selector ds)
fn0C00_0000_entry:		// pred:
	word16 ax_8 = 0x0000
	// succ:  l0C00_000A
l0C00_0000:
l0C00_000A:		// pred: fn0C00_0000_entry l0C00_0005
	branch bx != 0x0000 l0C00_0005
	// succ:  l0C00_000E l0C00_0005
l0C00_000E:		// pred: l0C00_000A
	store(Mem17[ds:0x0300:word16]) = ax_8
	word16 ax_18 = 0x0000
	// succ:  l0C00_0014
l0C00_0014:		// pred: l0C00_000E l0C00_0014
	ax_18 = ax_18 + Mem17[ds:si:word16]
	si = Mem17[ds:si + 0x0002:word16]
	branch si != 0x0000 l0C00_0014
	// succ:  l0C00_001D l0C00_0014
l0C00_001D:		// pred: l0C00_0014
	store(Mem26[ds:0x0302:word16]) = ax_18
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:		// pred: l0C00_001D
	// succ: 
l0C00_0005:		// pred: l0C00_000A
	ax_8 = ax_8 + Mem0[ds:bx:word16]
	bx = Mem0[ds:bx + 0x0002:word16]
	// succ:  l0C00_000A

void fn0C00_0000(word16 bx, word16 si, selector ds)
{
	word16 ax_8 = 0x0000;
	while (bx != 0x0000)
	{
		ax_8 = ax_8 + Mem0[ds:bx:word16];
		bx = Mem0[ds:bx + 0x0002:word16];
	}
	Mem17[ds:0x0300:word16] = ax_8;
	word16 ax_18 = 0x0000;
	do
	{
		ax_18 = ax_18 + Mem17[ds:si:word16];
		si = Mem17[ds:si + 0x0002:word16];
	}
	while (si != 0x0000);
	Mem26[ds:0x0302:word16] = ax_18;
	return;
}
===========================
