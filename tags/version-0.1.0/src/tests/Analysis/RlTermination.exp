// fn0C00_0000 /////////////////////
	LiveOut:  
	MayUseIn:  ds
	BypassIn: 
	Trashed:   ax cx bx al cl bl ah ch bh
	Preserved:
// fn0C00_0000
void fn0C00_0000()
fn0C00_0000_entry:		// block 0, pred:
	// succ:  1
// DataOut: ds
l0C00_0000:		// block 1, pred: 0
	cx = 0x007B
	ax = 0x0020
	bx = 0x3212
	ax = maybeterminate(ax, bx)
	store(Mem0[ds:0x0230:word16]) = ax
	store(Mem0[ds:0x0234:word16]) = cx
	return
	// succ:  2
// DataOut:
fn0C00_0000_exit:		// block 2, pred: 1
	// succ: 
// DataOut:
// maybeterminate /////////////////////
	LiveOut:  
	MayUseIn:  ax bx ds
	BypassIn: 
	Trashed:   SCZO ax cx bx al cl bl ah ch bh
	Preserved:
// maybeterminate
word16 maybeterminate(word16 ax, word16 bx)
maybeterminate_entry:		// block 0, pred:
	// succ:  1
// DataOut: ax bx ds
l0C00_0015:		// block 1, pred: 0
	SCZO = cond(ax - Mem0[ds:bx:word16])
	branch Test(ULT,C) l0C00_0023
	// succ:  2 3
// DataOut: ax bx ds
l0C00_0019:		// block 2, pred: 1
	SCZO = cond(ax - Mem0[ds:bx + 0x0002:word16])
	branch Test(UGE,C) l0C00_0023
	// succ:  4 3
// DataOut: ax bx ds
l0C00_0023:		// block 3, pred: 2 1
	cx = 0x0000
	SCZO = cond(cx)
	store(Mem0[ds:0x0232:word16]) = cx
	ax = 0x4C00
	msdos_terminate(al)
	// succ:  5
// DataOut:
l0C00_001E:		// block 4, pred: 2
	bx = bx + ax
	SCZO = cond(bx)
	ax = Mem0[ds:bx:word16]
	return
	// succ:  5
// DataOut:
maybeterminate_exit:		// block 5, pred: 4 3
	// succ: 
// DataOut:
