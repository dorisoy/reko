// fn0C00_0000
// Return size: 2
// Mem0:Global memory
// fp:fp
// sp:sp
// al:al
// ds:ds
// ax:ax
// SCZO:Flags
// dx:dx
// dx_ax:Sequence dx:ax
// cx:cx
// cl:cl
// return address size: 2
void fn0C00_0000()
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	sp = fp
	al = Mem0[ds:0x0300:byte]
	ax = Mem0[ds:0x0301:byte] *u al
	SCZO = cond(ax)
	Mem0[ds:0x0302:word16] = ax
	ax = Mem0[ds:0x0304:word16]
	dx_ax = Mem0[ds:0x0306:word16] *u ax
	SCZO = cond(dx_ax)
	Mem0[ds:0x0308:word16] = ax
	Mem0[ds:0x030A:word16] = dx
	cx = Mem0[ds:0x030C:word16]
	ax = Mem0[ds:0x030E:word16]
	dx_ax = cx *s ax
	SCZO = cond(dx_ax)
	Mem0[ds:0x0310:word16] = ax
	Mem0[ds:0x0312:word16] = dx
	al = Mem0[ds:0x0300:byte]
	cl = Mem0[ds:0x0301:byte]
	ax = cl *u al
	SCZO = cond(ax)
	Mem0[ds:0x0302:word16] = ax
	ax = Mem0[ds:0x0304:word16] *s 0x0024
	SCZO = cond(ax)
	dx = ax *s 0x0024
	SCZO = cond(dx)
	ax = Mem0[ds:0x0304:word16] *s 0x0114
	SCZO = cond(ax)
	dx = ax *s 0x0114
	SCZO = cond(dx)
	ax = Mem0[ds:0x0304:word16] *s 0x0114
	SCZO = cond(ax)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
